#nullable enable
abstract Loretta.CodeAnalysis.AdditionalText.GetText(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Text.SourceText?
abstract Loretta.CodeAnalysis.AdditionalText.Path.get -> string!
abstract Loretta.CodeAnalysis.AttributeData.CommonApplicationSyntaxReference.get -> Loretta.CodeAnalysis.SyntaxReference?
abstract Loretta.CodeAnalysis.AttributeData.CommonAttributeClass.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
abstract Loretta.CodeAnalysis.AttributeData.CommonAttributeConstructor.get -> Loretta.CodeAnalysis.IMethodSymbol?
abstract Loretta.CodeAnalysis.AttributeData.CommonConstructorArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.TypedConstant>
abstract Loretta.CodeAnalysis.AttributeData.CommonNamedArguments.get -> System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<string!, Loretta.CodeAnalysis.TypedConstant>>
abstract Loretta.CodeAnalysis.Compilation.ClassifyCommonConversion(Loretta.CodeAnalysis.ITypeSymbol! source, Loretta.CodeAnalysis.ITypeSymbol! destination) -> Loretta.CodeAnalysis.Operations.CommonConversion
abstract Loretta.CodeAnalysis.Compilation.ContainsSymbolsWithName(string! name, Loretta.CodeAnalysis.SymbolFilter filter = Loretta.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> bool
abstract Loretta.CodeAnalysis.Compilation.ContainsSymbolsWithName(System.Func<string!, bool>! predicate, Loretta.CodeAnalysis.SymbolFilter filter = Loretta.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> bool
abstract Loretta.CodeAnalysis.Compilation.DirectiveReferences.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.MetadataReference!>
abstract Loretta.CodeAnalysis.Compilation.GetDeclarationDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.Compilation.GetDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.Compilation.GetMethodBodyDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.Compilation.GetParseDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.Compilation.GetSymbolsWithName(string! name, Loretta.CodeAnalysis.SymbolFilter filter = Loretta.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ISymbol!>!
abstract Loretta.CodeAnalysis.Compilation.GetSymbolsWithName(System.Func<string!, bool>! predicate, Loretta.CodeAnalysis.SymbolFilter filter = Loretta.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ISymbol!>!
abstract Loretta.CodeAnalysis.Compilation.IsCaseSensitive.get -> bool
abstract Loretta.CodeAnalysis.Compilation.Language.get -> string!
abstract Loretta.CodeAnalysis.Compilation.ReferencedAssemblyNames.get -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.AssemblyIdentity!>!
abstract Loretta.CodeAnalysis.Compilation.ToMetadataReference(System.Collections.Immutable.ImmutableArray<string!> aliases = default(System.Collections.Immutable.ImmutableArray<string!>), bool embedInteropTypes = false) -> Loretta.CodeAnalysis.CompilationReference!
abstract Loretta.CodeAnalysis.CompilationOptions.Language.get -> string!
abstract Loretta.CodeAnalysis.CompilationOptions.NullableContextOptions.get -> Loretta.CodeAnalysis.NullableContextOptions
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.EndPointIsReachable.get -> bool
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.EntryPoints.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SyntaxNode!>
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.ExitPoints.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SyntaxNode!>
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.ReturnStatements.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SyntaxNode!>
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.StartPointIsReachable.get -> bool
abstract Loretta.CodeAnalysis.ControlFlowAnalysis.Succeeded.get -> bool
abstract Loretta.CodeAnalysis.CustomModifier.IsOptional.get -> bool
abstract Loretta.CodeAnalysis.CustomModifier.Modifier.get -> Loretta.CodeAnalysis.INamedTypeSymbol!
abstract Loretta.CodeAnalysis.DataFlowAnalysis.AlwaysAssigned.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.Captured.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.CapturedInside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.CapturedOutside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.DataFlowsIn.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.DataFlowsOut.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.DefinitelyAssignedOnEntry.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.DefinitelyAssignedOnExit.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.ReadInside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.ReadOutside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.Succeeded.get -> bool
abstract Loretta.CodeAnalysis.DataFlowAnalysis.UnsafeAddressTaken.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.UsedLocalFunctions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.VariablesDeclared.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.WrittenInside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.DataFlowAnalysis.WrittenOutside.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.Diagnostic.AdditionalLocations.get -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Location!>!
abstract Loretta.CodeAnalysis.Diagnostic.Descriptor.get -> Loretta.CodeAnalysis.DiagnosticDescriptor!
abstract Loretta.CodeAnalysis.Diagnostic.Equals(Loretta.CodeAnalysis.Diagnostic? obj) -> bool
abstract Loretta.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider? formatProvider = null) -> string!
abstract Loretta.CodeAnalysis.Diagnostic.Id.get -> string!
abstract Loretta.CodeAnalysis.Diagnostic.IsSuppressed.get -> bool
abstract Loretta.CodeAnalysis.Diagnostic.Location.get -> Loretta.CodeAnalysis.Location!
abstract Loretta.CodeAnalysis.Diagnostic.Severity.get -> Loretta.CodeAnalysis.DiagnosticSeverity
abstract Loretta.CodeAnalysis.Diagnostic.WarningLevel.get -> int
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockStartAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>!>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext!>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSemanticModelAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolKind> symbolKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxTreeAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions.TryGetValue(string! key, out string? value) -> bool
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider.GetOptions(Loretta.CodeAnalysis.AdditionalText! textFile) -> Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions!
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider.GetOptions(Loretta.CodeAnalysis.SyntaxTree! tree) -> Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions!
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider.GlobalOptions.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions!
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.FullPath.get -> string?
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzers(string! language) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzersForAllLanguages() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
abstract Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.Id.get -> object!
abstract Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterCodeBlockEndAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterSyntaxNodeAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockStartAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>!>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCompilationEndAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSemanticModelAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolKind> symbolKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxTreeAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Loretta.CodeAnalysis.Diagnostics.AnalysisContext! context) -> void
abstract Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.DiagnosticDescriptor!>
abstract Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor.ReportSuppressions(Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext context) -> void
abstract Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor.SupportedSuppressions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SuppressionDescriptor!>
abstract Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.OperationKind> operationKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationBlockEndAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterCodeBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterCodeBlockStartAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>!>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.OperationKind> operationKinds) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterOperationBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterOperationBlockStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext!>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterSymbolEndAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext>! action) -> void
abstract Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds) -> void
abstract Loretta.CodeAnalysis.DocumentationProvider.GetDocumentationForSymbol(string! documentationMemberID, System.Globalization.CultureInfo! preferredCulture, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> string?
abstract Loretta.CodeAnalysis.LocalizableString.AreEqual(object? other) -> bool
abstract Loretta.CodeAnalysis.LocalizableString.GetHash() -> int
abstract Loretta.CodeAnalysis.LocalizableString.GetText(System.IFormatProvider? formatProvider) -> string!
abstract Loretta.CodeAnalysis.Location.Kind.get -> Loretta.CodeAnalysis.LocationKind
abstract Loretta.CodeAnalysis.Metadata.Dispose() -> void
abstract Loretta.CodeAnalysis.Metadata.Kind.get -> Loretta.CodeAnalysis.MetadataImageKind
abstract Loretta.CodeAnalysis.MetadataReferenceResolver.ResolveReference(string! reference, string? baseFilePath, Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.PortableExecutableReference!>
abstract Loretta.CodeAnalysis.ParseOptions.CommonWithKind(Loretta.CodeAnalysis.SourceCodeKind kind) -> Loretta.CodeAnalysis.ParseOptions!
abstract Loretta.CodeAnalysis.ParseOptions.Features.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
abstract Loretta.CodeAnalysis.ParseOptions.Language.get -> string!
abstract Loretta.CodeAnalysis.ParseOptions.PreprocessorSymbolNames.get -> System.Collections.Generic.IEnumerable<string!>!
abstract Loretta.CodeAnalysis.PortableExecutableReference.CreateDocumentationProvider() -> Loretta.CodeAnalysis.DocumentationProvider!
abstract Loretta.CodeAnalysis.PortableExecutableReference.GetMetadataImpl() -> Loretta.CodeAnalysis.Metadata!
abstract Loretta.CodeAnalysis.PortableExecutableReference.WithPropertiesImpl(Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> Loretta.CodeAnalysis.PortableExecutableReference!
abstract Loretta.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Loretta.CodeAnalysis.SyntaxNode! firstStatement, Loretta.CodeAnalysis.SyntaxNode! lastStatement) -> Loretta.CodeAnalysis.ControlFlowAnalysis!
abstract Loretta.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Loretta.CodeAnalysis.SyntaxNode! statement) -> Loretta.CodeAnalysis.ControlFlowAnalysis!
abstract Loretta.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Loretta.CodeAnalysis.SyntaxNode! firstStatement, Loretta.CodeAnalysis.SyntaxNode! lastStatement) -> Loretta.CodeAnalysis.DataFlowAnalysis!
abstract Loretta.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Loretta.CodeAnalysis.SyntaxNode! statementOrExpression) -> Loretta.CodeAnalysis.DataFlowAnalysis!
abstract Loretta.CodeAnalysis.SemanticModel.CompilationCore.get -> Loretta.CodeAnalysis.Compilation!
abstract Loretta.CodeAnalysis.SemanticModel.GetAliasInfoCore(Loretta.CodeAnalysis.SyntaxNode! nameSyntax, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.IAliasSymbol?
abstract Loretta.CodeAnalysis.SemanticModel.GetConstantValueCore(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Optional<object?>
abstract Loretta.CodeAnalysis.SemanticModel.GetDeclarationDiagnostics(Loretta.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.SemanticModel.GetDeclaredSymbolCore(Loretta.CodeAnalysis.SyntaxNode! declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.ISymbol?
abstract Loretta.CodeAnalysis.SemanticModel.GetDeclaredSymbolsCore(Loretta.CodeAnalysis.SyntaxNode! declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.GetDiagnostics(Loretta.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.SemanticModel.GetEnclosingSymbolCore(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.ISymbol?
abstract Loretta.CodeAnalysis.SemanticModel.GetMemberGroupCore(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.GetMethodBodyDiagnostics(Loretta.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.SemanticModel.GetNullableContext(int position) -> Loretta.CodeAnalysis.NullableContext
abstract Loretta.CodeAnalysis.SemanticModel.GetOperationCore(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.IOperation?
abstract Loretta.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfoCore(Loretta.CodeAnalysis.SyntaxNode! nameSyntax) -> Loretta.CodeAnalysis.PreprocessingSymbolInfo
abstract Loretta.CodeAnalysis.SemanticModel.GetSpeculativeAliasInfoCore(int position, Loretta.CodeAnalysis.SyntaxNode! nameSyntax, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.IAliasSymbol?
abstract Loretta.CodeAnalysis.SemanticModel.GetSpeculativeSymbolInfoCore(int position, Loretta.CodeAnalysis.SyntaxNode! expression, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.SymbolInfo
abstract Loretta.CodeAnalysis.SemanticModel.GetSpeculativeTypeInfoCore(int position, Loretta.CodeAnalysis.SyntaxNode! expression, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.TypeInfo
abstract Loretta.CodeAnalysis.SemanticModel.GetSymbolInfoCore(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.SymbolInfo
abstract Loretta.CodeAnalysis.SemanticModel.GetSyntaxDiagnostics(Loretta.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
abstract Loretta.CodeAnalysis.SemanticModel.GetTypeInfoCore(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.TypeInfo
abstract Loretta.CodeAnalysis.SemanticModel.IsAccessibleCore(int position, Loretta.CodeAnalysis.ISymbol! symbol) -> bool
abstract Loretta.CodeAnalysis.SemanticModel.IsEventUsableAsFieldCore(int position, Loretta.CodeAnalysis.IEventSymbol! eventSymbol) -> bool
abstract Loretta.CodeAnalysis.SemanticModel.IsSpeculativeSemanticModel.get -> bool
abstract Loretta.CodeAnalysis.SemanticModel.Language.get -> string!
abstract Loretta.CodeAnalysis.SemanticModel.LookupBaseMembersCore(int position, string? name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.LookupLabelsCore(int position, string? name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.LookupNamespacesAndTypesCore(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container, string? name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.LookupStaticMembersCore(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container, string? name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.LookupSymbolsCore(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container, string? name, bool includeReducedExtensionMethods) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
abstract Loretta.CodeAnalysis.SemanticModel.OriginalPositionForSpeculation.get -> int
abstract Loretta.CodeAnalysis.SemanticModel.ParentModelCore.get -> Loretta.CodeAnalysis.SemanticModel?
abstract Loretta.CodeAnalysis.SemanticModel.RootCore.get -> Loretta.CodeAnalysis.SyntaxNode!
abstract Loretta.CodeAnalysis.SemanticModel.SyntaxTreeCore.get -> Loretta.CodeAnalysis.SyntaxTree!
abstract Loretta.CodeAnalysis.SourceReferenceResolver.NormalizePath(string! path, string? baseFilePath) -> string?
abstract Loretta.CodeAnalysis.SourceReferenceResolver.OpenRead(string! resolvedPath) -> System.IO.Stream!
abstract Loretta.CodeAnalysis.SourceReferenceResolver.ResolveReference(string! path, string? baseFilePath) -> string?
abstract Loretta.CodeAnalysis.SyntaxNode.Language.get -> string!
abstract Loretta.CodeAnalysis.SyntaxReference.GetSyntax(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.SyntaxNode!
abstract Loretta.CodeAnalysis.SyntaxReference.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
abstract Loretta.CodeAnalysis.SyntaxReference.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree!
abstract Loretta.CodeAnalysis.SyntaxTree.Encoding.get -> System.Text.Encoding?
abstract Loretta.CodeAnalysis.SyntaxTree.FilePath.get -> string!
abstract Loretta.CodeAnalysis.SyntaxTree.GetChangedSpans(Loretta.CodeAnalysis.SyntaxTree! syntaxTree) -> System.Collections.Generic.IList<Loretta.CodeAnalysis.Text.TextSpan>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetChanges(Loretta.CodeAnalysis.SyntaxTree! oldTree) -> System.Collections.Generic.IList<Loretta.CodeAnalysis.Text.TextChange>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetDiagnostics(Loretta.CodeAnalysis.SyntaxNode! node) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetDiagnostics(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetDiagnostics(Loretta.CodeAnalysis.SyntaxToken token) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetDiagnostics(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetLineSpan(Loretta.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FileLinePositionSpan
abstract Loretta.CodeAnalysis.SyntaxTree.GetLocation(Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Location!
abstract Loretta.CodeAnalysis.SyntaxTree.GetMappedLineSpan(Loretta.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FileLinePositionSpan
abstract Loretta.CodeAnalysis.SyntaxTree.GetReference(Loretta.CodeAnalysis.SyntaxNode! node) -> Loretta.CodeAnalysis.SyntaxReference!
abstract Loretta.CodeAnalysis.SyntaxTree.GetRootAsyncCore(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.SyntaxNode!>!
abstract Loretta.CodeAnalysis.SyntaxTree.GetRootCore(System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.SyntaxNode!
abstract Loretta.CodeAnalysis.SyntaxTree.GetText(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Text.SourceText!
abstract Loretta.CodeAnalysis.SyntaxTree.HasCompilationUnitRoot.get -> bool
abstract Loretta.CodeAnalysis.SyntaxTree.HasHiddenRegions() -> bool
abstract Loretta.CodeAnalysis.SyntaxTree.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxTree! tree, bool topLevel = false) -> bool
abstract Loretta.CodeAnalysis.SyntaxTree.Length.get -> int
abstract Loretta.CodeAnalysis.SyntaxTree.OptionsCore.get -> Loretta.CodeAnalysis.ParseOptions!
abstract Loretta.CodeAnalysis.SyntaxTree.TryGetRootCore(out Loretta.CodeAnalysis.SyntaxNode? root) -> bool
abstract Loretta.CodeAnalysis.SyntaxTree.TryGetText(out Loretta.CodeAnalysis.Text.SourceText? text) -> bool
abstract Loretta.CodeAnalysis.SyntaxTree.WithChangedText(Loretta.CodeAnalysis.Text.SourceText! newText) -> Loretta.CodeAnalysis.SyntaxTree!
abstract Loretta.CodeAnalysis.SyntaxTree.WithFilePath(string! path) -> Loretta.CodeAnalysis.SyntaxTree!
abstract Loretta.CodeAnalysis.SyntaxTree.WithRootAndOptions(Loretta.CodeAnalysis.SyntaxNode! root, Loretta.CodeAnalysis.ParseOptions! options) -> Loretta.CodeAnalysis.SyntaxTree!
abstract Loretta.CodeAnalysis.SyntaxTreeOptionsProvider.IsGenerated(Loretta.CodeAnalysis.SyntaxTree! tree, System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.GeneratedKind
abstract Loretta.CodeAnalysis.SyntaxTreeOptionsProvider.TryGetDiagnosticValue(Loretta.CodeAnalysis.SyntaxTree! tree, string! diagnosticId, System.Threading.CancellationToken cancellationToken, out Loretta.CodeAnalysis.ReportDiagnostic severity) -> bool
abstract Loretta.CodeAnalysis.SyntaxTreeOptionsProvider.TryGetGlobalDiagnosticValue(string! diagnosticId, System.Threading.CancellationToken cancellationToken, out Loretta.CodeAnalysis.ReportDiagnostic severity) -> bool
abstract Loretta.CodeAnalysis.Text.SourceText.CopyTo(int sourceIndex, char[]! destination, int destinationIndex, int count) -> void
abstract Loretta.CodeAnalysis.Text.SourceText.Encoding.get -> System.Text.Encoding?
abstract Loretta.CodeAnalysis.Text.SourceText.Length.get -> int
abstract Loretta.CodeAnalysis.Text.SourceText.this[int position].get -> char
abstract Loretta.CodeAnalysis.Text.SourceTextContainer.CurrentText.get -> Loretta.CodeAnalysis.Text.SourceText!
abstract Loretta.CodeAnalysis.Text.SourceTextContainer.TextChanged -> System.EventHandler<Loretta.CodeAnalysis.Text.TextChangeEventArgs!>!
abstract Loretta.CodeAnalysis.Text.TextLineCollection.Count.get -> int
abstract Loretta.CodeAnalysis.Text.TextLineCollection.IndexOf(int position) -> int
abstract Loretta.CodeAnalysis.Text.TextLineCollection.this[int index].get -> Loretta.CodeAnalysis.Text.TextLine
abstract Loretta.CodeAnalysis.XmlReferenceResolver.OpenRead(string! resolvedPath) -> System.IO.Stream!
abstract Loretta.CodeAnalysis.XmlReferenceResolver.ResolveReference(string! path, string? baseFilePath) -> string?
const Loretta.CodeAnalysis.LanguageNames.CSharp = "C#" -> string!
const Loretta.CodeAnalysis.LanguageNames.FSharp = "F#" -> string!
const Loretta.CodeAnalysis.LanguageNames.VisualBasic = "Visual Basic" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.AnalyzerException = "AnalyzerException" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.Build = "Build" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.Compiler = "Compiler" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.CustomObsolete = "CustomObsolete" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.EditAndContinue = "EditAndContinue" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.NotConfigurable = "NotConfigurable" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.Telemetry = "Telemetry" -> string!
const Loretta.CodeAnalysis.WellKnownDiagnosticTags.Unnecessary = "Unnecessary" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.AdditionOperatorName = "op_Addition" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.BitwiseAndOperatorName = "op_BitwiseAnd" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.BitwiseOrOperatorName = "op_BitwiseOr" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.CollectionInitializerAddMethodName = "Add" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ConcatenateOperatorName = "op_Concatenate" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.CountPropertyName = "Count" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.CurrentPropertyName = "Current" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DeconstructMethodName = "Deconstruct" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DecrementOperatorName = "op_Decrement" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DefaultScriptClassName = "Script" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DelegateBeginInvokeName = "BeginInvoke" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DelegateEndInvokeName = "EndInvoke" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DelegateInvokeName = "Invoke" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DestructorName = "Finalize" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DisposeAsyncMethodName = "DisposeAsync" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DisposeMethodName = "Dispose" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.DivisionOperatorName = "op_Division" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.EntryPointMethodName = "Main" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.EnumBackingFieldName = "value__" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.EqualityOperatorName = "op_Equality" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ExclusiveOrOperatorName = "op_ExclusiveOr" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ExplicitConversionName = "op_Explicit" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ExponentOperatorName = "op_Exponent" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.FalseOperatorName = "op_False" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GetAsyncEnumeratorMethodName = "GetAsyncEnumerator" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GetAwaiter = "GetAwaiter" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GetEnumeratorMethodName = "GetEnumerator" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GetResult = "GetResult" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GreaterThanOperatorName = "op_GreaterThan" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.GreaterThanOrEqualOperatorName = "op_GreaterThanOrEqual" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ImplicitConversionName = "op_Implicit" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.IncrementOperatorName = "op_Increment" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.Indexer = "this[]" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.InequalityOperatorName = "op_Inequality" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.InstanceConstructorName = ".ctor" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.IntegerDivisionOperatorName = "op_IntegerDivision" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.IsCompleted = "IsCompleted" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LeftShiftOperatorName = "op_LeftShift" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LengthPropertyName = "Length" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LessThanOperatorName = "op_LessThan" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LessThanOrEqualOperatorName = "op_LessThanOrEqual" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LikeOperatorName = "op_Like" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LogicalAndOperatorName = "op_LogicalAnd" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LogicalNotOperatorName = "op_LogicalNot" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.LogicalOrOperatorName = "op_LogicalOr" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ModulusOperatorName = "op_Modulus" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.MoveNextAsyncMethodName = "MoveNextAsync" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.MoveNextMethodName = "MoveNext" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.MultiplyOperatorName = "op_Multiply" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ObjectEquals = "Equals" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ObjectGetHashCode = "GetHashCode" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ObjectToString = "ToString" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.OnCompleted = "OnCompleted" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.OnesComplementOperatorName = "op_OnesComplement" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.RightShiftOperatorName = "op_RightShift" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.SliceMethodName = "Slice" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.StaticConstructorName = ".cctor" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.SubtractionOperatorName = "op_Subtraction" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.TopLevelStatementsEntryPointMethodName = "<Main>$" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.TopLevelStatementsEntryPointTypeName = "<Program>$" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.TrueOperatorName = "op_True" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.UnaryNegationOperatorName = "op_UnaryNegation" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.UnaryPlusOperatorName = "op_UnaryPlus" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.UnsignedLeftShiftOperatorName = "op_UnsignedLeftShift" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.UnsignedRightShiftOperatorName = "op_UnsignedRightShift" -> string!
const Loretta.CodeAnalysis.WellKnownMemberNames.ValuePropertyName = "Value" -> string!
Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.Friend = 4 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.Internal = 4 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.NotApplicable = 0 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.Private = 1 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.Protected = 3 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.ProtectedAndFriend = 2 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.ProtectedAndInternal = 2 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.ProtectedOrFriend = 5 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.ProtectedOrInternal = 5 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.Accessibility.Public = 6 -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.AdditionalText
Loretta.CodeAnalysis.AdditionalText.AdditionalText() -> void
Loretta.CodeAnalysis.AnalyzerConfig
Loretta.CodeAnalysis.AnalyzerConfigOptionsResult
Loretta.CodeAnalysis.AnalyzerConfigOptionsResult.AnalyzerConfigOptionsResult() -> void
Loretta.CodeAnalysis.AnalyzerConfigOptionsResult.AnalyzerOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, string!>!
Loretta.CodeAnalysis.AnalyzerConfigOptionsResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.AnalyzerConfigOptionsResult.TreeOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>!
Loretta.CodeAnalysis.AnalyzerConfigSet
Loretta.CodeAnalysis.AnalyzerConfigSet.GetOptionsForSourcePath(string! sourcePath) -> Loretta.CodeAnalysis.AnalyzerConfigOptionsResult
Loretta.CodeAnalysis.AnalyzerConfigSet.GlobalConfigOptions.get -> Loretta.CodeAnalysis.AnalyzerConfigOptionsResult
Loretta.CodeAnalysis.AnnotationExtensions
Loretta.CodeAnalysis.AssemblyIdentity
Loretta.CodeAnalysis.AssemblyIdentity.AssemblyIdentity(string? name, System.Version? version = null, string? cultureName = null, System.Collections.Immutable.ImmutableArray<byte> publicKeyOrToken = default(System.Collections.Immutable.ImmutableArray<byte>), bool hasPublicKey = false, bool isRetargetable = false, System.Reflection.AssemblyContentType contentType = System.Reflection.AssemblyContentType.Default) -> void
Loretta.CodeAnalysis.AssemblyIdentity.ContentType.get -> System.Reflection.AssemblyContentType
Loretta.CodeAnalysis.AssemblyIdentity.CultureName.get -> string!
Loretta.CodeAnalysis.AssemblyIdentity.Equals(Loretta.CodeAnalysis.AssemblyIdentity? obj) -> bool
Loretta.CodeAnalysis.AssemblyIdentity.Flags.get -> System.Reflection.AssemblyNameFlags
Loretta.CodeAnalysis.AssemblyIdentity.GetDisplayName(bool fullKey = false) -> string!
Loretta.CodeAnalysis.AssemblyIdentity.HasPublicKey.get -> bool
Loretta.CodeAnalysis.AssemblyIdentity.IsRetargetable.get -> bool
Loretta.CodeAnalysis.AssemblyIdentity.IsStrongName.get -> bool
Loretta.CodeAnalysis.AssemblyIdentity.Name.get -> string!
Loretta.CodeAnalysis.AssemblyIdentity.PublicKey.get -> System.Collections.Immutable.ImmutableArray<byte>
Loretta.CodeAnalysis.AssemblyIdentity.PublicKeyToken.get -> System.Collections.Immutable.ImmutableArray<byte>
Loretta.CodeAnalysis.AssemblyIdentity.Version.get -> System.Version!
Loretta.CodeAnalysis.AssemblyIdentityComparer
Loretta.CodeAnalysis.AssemblyIdentityComparer.Compare(Loretta.CodeAnalysis.AssemblyIdentity! reference, Loretta.CodeAnalysis.AssemblyIdentity! definition) -> Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent = 1 -> Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion = 2 -> Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent = 0 -> Loretta.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Loretta.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(Loretta.CodeAnalysis.AssemblyIdentity! reference, Loretta.CodeAnalysis.AssemblyIdentity! definition) -> bool
Loretta.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(string! referenceDisplayName, Loretta.CodeAnalysis.AssemblyIdentity! definition) -> bool
Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.ContentType = 512 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.Culture = 32 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.Name = 1 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.PublicKey = 64 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.PublicKeyOrToken = Loretta.CodeAnalysis.AssemblyIdentityParts.PublicKey | Loretta.CodeAnalysis.AssemblyIdentityParts.PublicKeyToken -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.PublicKeyToken = 128 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.Retargetability = 256 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.Unknown = 1024 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.Version = Loretta.CodeAnalysis.AssemblyIdentityParts.VersionMajor | Loretta.CodeAnalysis.AssemblyIdentityParts.VersionMinor | Loretta.CodeAnalysis.AssemblyIdentityParts.VersionBuild | Loretta.CodeAnalysis.AssemblyIdentityParts.VersionRevision -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.VersionBuild = 8 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.VersionMajor = 2 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.VersionMinor = 4 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyIdentityParts.VersionRevision = 16 -> Loretta.CodeAnalysis.AssemblyIdentityParts
Loretta.CodeAnalysis.AssemblyMetadata
Loretta.CodeAnalysis.AssemblyMetadata.GetModules() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ModuleMetadata!>
Loretta.CodeAnalysis.AssemblyMetadata.GetReference(Loretta.CodeAnalysis.DocumentationProvider? documentation = null, System.Collections.Immutable.ImmutableArray<string!> aliases = default(System.Collections.Immutable.ImmutableArray<string!>), bool embedInteropTypes = false, string? filePath = null, string? display = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.AttributeData
Loretta.CodeAnalysis.AttributeData.ApplicationSyntaxReference.get -> Loretta.CodeAnalysis.SyntaxReference?
Loretta.CodeAnalysis.AttributeData.AttributeClass.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.AttributeData.AttributeConstructor.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.AttributeData.AttributeData() -> void
Loretta.CodeAnalysis.AttributeData.ConstructorArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.TypedConstant>
Loretta.CodeAnalysis.AttributeData.NamedArguments.get -> System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<string!, Loretta.CodeAnalysis.TypedConstant>>
Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.Ambiguous = 15 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.Inaccessible = 8 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.LateBound = 14 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.MemberGroup = 16 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.None = 0 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotAnAttributeType = 4 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotAnEvent = 2 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotATypeOrNamespace = 1 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotAValue = 9 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotAVariable = 10 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotAWithEventsMember = 3 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotCreatable = 6 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotInvocable = 11 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.NotReferencable = 7 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.OverloadResolutionFailure = 13 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.StaticInstanceMismatch = 12 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CandidateReason.WrongArity = 5 -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.CaseInsensitiveComparison
Loretta.CodeAnalysis.ChildSyntaxList
Loretta.CodeAnalysis.ChildSyntaxList.Any() -> bool
Loretta.CodeAnalysis.ChildSyntaxList.ChildSyntaxList() -> void
Loretta.CodeAnalysis.ChildSyntaxList.Count.get -> int
Loretta.CodeAnalysis.ChildSyntaxList.Enumerator
Loretta.CodeAnalysis.ChildSyntaxList.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.ChildSyntaxList.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.ChildSyntaxList.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.ChildSyntaxList.Enumerator.Reset() -> void
Loretta.CodeAnalysis.ChildSyntaxList.Equals(Loretta.CodeAnalysis.ChildSyntaxList other) -> bool
Loretta.CodeAnalysis.ChildSyntaxList.First() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.ChildSyntaxList.GetEnumerator() -> Loretta.CodeAnalysis.ChildSyntaxList.Enumerator
Loretta.CodeAnalysis.ChildSyntaxList.Last() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.ChildSyntaxList.Reverse() -> Loretta.CodeAnalysis.ChildSyntaxList.Reversed
Loretta.CodeAnalysis.ChildSyntaxList.Reversed
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Reset() -> void
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Equals(Loretta.CodeAnalysis.ChildSyntaxList.Reversed other) -> bool
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.GetEnumerator() -> Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator
Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Reversed() -> void
Loretta.CodeAnalysis.ChildSyntaxList.this[int index].get -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.CommandLineAnalyzerReference
Loretta.CodeAnalysis.CommandLineAnalyzerReference.CommandLineAnalyzerReference() -> void
Loretta.CodeAnalysis.CommandLineAnalyzerReference.CommandLineAnalyzerReference(string! path) -> void
Loretta.CodeAnalysis.CommandLineAnalyzerReference.Equals(Loretta.CodeAnalysis.CommandLineAnalyzerReference other) -> bool
Loretta.CodeAnalysis.CommandLineAnalyzerReference.FilePath.get -> string!
Loretta.CodeAnalysis.CommandLineArguments
Loretta.CodeAnalysis.CommandLineArguments.AdditionalFiles.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CommandLineSourceFile>
Loretta.CodeAnalysis.CommandLineArguments.AnalyzerConfigPaths.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.CommandLineArguments.AnalyzerReferences.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CommandLineAnalyzerReference>
Loretta.CodeAnalysis.CommandLineArguments.AppConfigPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.BaseDirectory.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.ChecksumAlgorithm.get -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.CommandLineArguments.CompilationName.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.CompilationOptions.get -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CommandLineArguments.DisplayHelp.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.DisplayLangVersions.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.DisplayLogo.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.DisplayVersion.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.DocumentationPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.EmbeddedFiles.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CommandLineSourceFile>
Loretta.CodeAnalysis.CommandLineArguments.EmitOptions.get -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.CommandLineArguments.EmitPdb.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.EmitPdbFile.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.Encoding.get -> System.Text.Encoding?
Loretta.CodeAnalysis.CommandLineArguments.ErrorLogOptions.get -> Loretta.CodeAnalysis.ErrorLogOptions?
Loretta.CodeAnalysis.CommandLineArguments.ErrorLogPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.Errors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.CommandLineArguments.GeneratedFilesOutputDirectory.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.GetOutputFilePath(string! outputFileName) -> string!
Loretta.CodeAnalysis.CommandLineArguments.GetPdbFilePath(string! outputFileName) -> string!
Loretta.CodeAnalysis.CommandLineArguments.InteractiveMode.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.KeyFileSearchPaths.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.CommandLineArguments.ManifestResources.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ResourceDescription!>
Loretta.CodeAnalysis.CommandLineArguments.MetadataReferences.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CommandLineReference>
Loretta.CodeAnalysis.CommandLineArguments.NoWin32Manifest.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.OutputDirectory.get -> string!
Loretta.CodeAnalysis.CommandLineArguments.OutputFileName.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.OutputRefFilePath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.ParseOptions.get -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.CommandLineArguments.PathMap.get -> System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<string!, string!>>
Loretta.CodeAnalysis.CommandLineArguments.PdbPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.PreferredUILang.get -> System.Globalization.CultureInfo?
Loretta.CodeAnalysis.CommandLineArguments.PrintFullPaths.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.ReferencePaths.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.CommandLineArguments.ReportAnalyzer.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.ResolveAnalyzerReferences(Loretta.CodeAnalysis.IAnalyzerAssemblyLoader! analyzerLoader) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostics.AnalyzerReference!>!
Loretta.CodeAnalysis.CommandLineArguments.ResolveMetadataReferences(Loretta.CodeAnalysis.MetadataReferenceResolver! metadataResolver) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.MetadataReference!>!
Loretta.CodeAnalysis.CommandLineArguments.RuleSetPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.ScriptArguments.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.CommandLineArguments.SkipAnalyzers.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.SourceFiles.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CommandLineSourceFile>
Loretta.CodeAnalysis.CommandLineArguments.SourceLink.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.SourcePaths.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.CommandLineArguments.TouchedFilesPath.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.Utf8Output.get -> bool
Loretta.CodeAnalysis.CommandLineArguments.Win32Icon.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.Win32Manifest.get -> string?
Loretta.CodeAnalysis.CommandLineArguments.Win32ResourceFile.get -> string?
Loretta.CodeAnalysis.CommandLineParser
Loretta.CodeAnalysis.CommandLineParser.Parse(System.Collections.Generic.IEnumerable<string!>! args, string! baseDirectory, string? sdkDirectory, string? additionalReferenceDirectories) -> Loretta.CodeAnalysis.CommandLineArguments!
Loretta.CodeAnalysis.CommandLineReference
Loretta.CodeAnalysis.CommandLineReference.CommandLineReference() -> void
Loretta.CodeAnalysis.CommandLineReference.CommandLineReference(string! reference, Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> void
Loretta.CodeAnalysis.CommandLineReference.Equals(Loretta.CodeAnalysis.CommandLineReference other) -> bool
Loretta.CodeAnalysis.CommandLineReference.Properties.get -> Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.CommandLineReference.Reference.get -> string!
Loretta.CodeAnalysis.CommandLineSourceFile
Loretta.CodeAnalysis.CommandLineSourceFile.CommandLineSourceFile() -> void
Loretta.CodeAnalysis.CommandLineSourceFile.CommandLineSourceFile(string! path, bool isScript) -> void
Loretta.CodeAnalysis.CommandLineSourceFile.CommandLineSourceFile(string! path, bool isScript, bool isInputRedirected) -> void
Loretta.CodeAnalysis.CommandLineSourceFile.IsInputRedirected.get -> bool
Loretta.CodeAnalysis.CommandLineSourceFile.IsScript.get -> bool
Loretta.CodeAnalysis.CommandLineSourceFile.Path.get -> string!
Loretta.CodeAnalysis.Compilation
Loretta.CodeAnalysis.Compilation.AddReferences(params Loretta.CodeAnalysis.MetadataReference![]! references) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.AddReferences(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.MetadataReference!>! references) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.AddSyntaxTrees(params Loretta.CodeAnalysis.SyntaxTree![]! trees) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.AddSyntaxTrees(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTree!>! trees) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.Assembly.get -> Loretta.CodeAnalysis.IAssemblySymbol!
Loretta.CodeAnalysis.Compilation.AssemblyName.get -> string?
Loretta.CodeAnalysis.Compilation.Clone() -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.ContainsSyntaxTree(Loretta.CodeAnalysis.SyntaxTree! syntaxTree) -> bool
Loretta.CodeAnalysis.Compilation.CreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> memberTypes, System.Collections.Immutable.ImmutableArray<string!> memberNames, System.Collections.Immutable.ImmutableArray<bool> memberIsReadOnly = default(System.Collections.Immutable.ImmutableArray<bool>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location!> memberLocations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location!>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation> memberNullableAnnotations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>)) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> memberTypes, System.Collections.Immutable.ImmutableArray<string!> memberNames, System.Collections.Immutable.ImmutableArray<bool> memberIsReadOnly, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location!> memberLocations) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateArrayTypeSymbol(Loretta.CodeAnalysis.ITypeSymbol! elementType, int rank = 1, Loretta.CodeAnalysis.NullableAnnotation elementNullableAnnotation = Loretta.CodeAnalysis.NullableAnnotation.None) -> Loretta.CodeAnalysis.IArrayTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateArrayTypeSymbol(Loretta.CodeAnalysis.ITypeSymbol! elementType, int rank) -> Loretta.CodeAnalysis.IArrayTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateDefaultWin32Resources(bool versionResource, bool noManifest, System.IO.Stream? manifestContents, System.IO.Stream? iconInIcoFormat) -> System.IO.Stream!
Loretta.CodeAnalysis.Compilation.CreateErrorNamespaceSymbol(Loretta.CodeAnalysis.INamespaceSymbol! container, string! name) -> Loretta.CodeAnalysis.INamespaceSymbol!
Loretta.CodeAnalysis.Compilation.CreateErrorTypeSymbol(Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container, string! name, int arity) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(Loretta.CodeAnalysis.ITypeSymbol! returnType, Loretta.CodeAnalysis.RefKind returnRefKind, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> parameterTypes, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.RefKind> parameterRefKinds, System.Reflection.Metadata.SignatureCallingConvention callingConvention = System.Reflection.Metadata.SignatureCallingConvention.Default, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!> callingConventionTypes = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>)) -> Loretta.CodeAnalysis.IFunctionPointerTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateNativeIntegerTypeSymbol(bool signed) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreatePointerTypeSymbol(Loretta.CodeAnalysis.ITypeSymbol! pointedAtType) -> Loretta.CodeAnalysis.IPointerTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateTupleTypeSymbol(Loretta.CodeAnalysis.INamedTypeSymbol! underlyingType, System.Collections.Immutable.ImmutableArray<string?> elementNames = default(System.Collections.Immutable.ImmutableArray<string?>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?> elementLocations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation> elementNullableAnnotations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>)) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateTupleTypeSymbol(Loretta.CodeAnalysis.INamedTypeSymbol! underlyingType, System.Collections.Immutable.ImmutableArray<string?> elementNames, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?> elementLocations) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> elementTypes, System.Collections.Immutable.ImmutableArray<string?> elementNames = default(System.Collections.Immutable.ImmutableArray<string?>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?> elementLocations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?>), System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation> elementNullableAnnotations = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>)) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.CreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> elementTypes, System.Collections.Immutable.ImmutableArray<string?> elementNames, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location?> elementLocations) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.DynamicType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Compilation.Emit(System.IO.Stream! peStream, System.IO.Stream? pdbStream = null, System.IO.Stream? xmlDocumentationStream = null, System.IO.Stream? win32Resources = null, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ResourceDescription!>? manifestResources = null, Loretta.CodeAnalysis.Emit.EmitOptions? options = null, Loretta.CodeAnalysis.IMethodSymbol? debugEntryPoint = null, System.IO.Stream? sourceLinkStream = null, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.EmbeddedText!>? embeddedTexts = null, System.IO.Stream? metadataPEStream = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Emit.EmitResult!
Loretta.CodeAnalysis.Compilation.Emit(System.IO.Stream! peStream, System.IO.Stream? pdbStream, System.IO.Stream? xmlDocumentationStream, System.IO.Stream? win32Resources, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ResourceDescription!>? manifestResources, Loretta.CodeAnalysis.Emit.EmitOptions! options, Loretta.CodeAnalysis.IMethodSymbol? debugEntryPoint, System.IO.Stream? sourceLinkStream, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.EmbeddedText!>? embeddedTexts, System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.Emit.EmitResult!
Loretta.CodeAnalysis.Compilation.Emit(System.IO.Stream! peStream, System.IO.Stream! pdbStream, System.IO.Stream! xmlDocumentationStream, System.IO.Stream! win32Resources, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ResourceDescription!>! manifestResources, Loretta.CodeAnalysis.Emit.EmitOptions! options, Loretta.CodeAnalysis.IMethodSymbol! debugEntryPoint, System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.Emit.EmitResult!
Loretta.CodeAnalysis.Compilation.Emit(System.IO.Stream! peStream, System.IO.Stream? pdbStream, System.IO.Stream? xmlDocumentationStream, System.IO.Stream? win32Resources, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ResourceDescription!>? manifestResources, Loretta.CodeAnalysis.Emit.EmitOptions! options, System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.Emit.EmitResult!
Loretta.CodeAnalysis.Compilation.EmitDifference(Loretta.CodeAnalysis.Emit.EmitBaseline! baseline, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Emit.SemanticEdit>! edits, System.Func<Loretta.CodeAnalysis.ISymbol!, bool>! isAddedSymbol, System.IO.Stream! metadataStream, System.IO.Stream! ilStream, System.IO.Stream! pdbStream, System.Collections.Generic.ICollection<System.Reflection.Metadata.MethodDefinitionHandle>! updatedMethods, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Emit.EmitDifferenceResult!
Loretta.CodeAnalysis.Compilation.EmitDifference(Loretta.CodeAnalysis.Emit.EmitBaseline! baseline, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Emit.SemanticEdit>! edits, System.IO.Stream! metadataStream, System.IO.Stream! ilStream, System.IO.Stream! pdbStream, System.Collections.Generic.ICollection<System.Reflection.Metadata.MethodDefinitionHandle>! updatedMethods, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Emit.EmitDifferenceResult!
Loretta.CodeAnalysis.Compilation.ExternalReferences.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.MetadataReference!>
Loretta.CodeAnalysis.Compilation.GetAssemblyOrModuleSymbol(Loretta.CodeAnalysis.MetadataReference! reference) -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Compilation.GetCompilationNamespace(Loretta.CodeAnalysis.INamespaceSymbol! namespaceSymbol) -> Loretta.CodeAnalysis.INamespaceSymbol?
Loretta.CodeAnalysis.Compilation.GetEntryPoint(System.Threading.CancellationToken cancellationToken) -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Compilation.GetMetadataReference(Loretta.CodeAnalysis.IAssemblySymbol! assemblySymbol) -> Loretta.CodeAnalysis.MetadataReference?
Loretta.CodeAnalysis.Compilation.GetSemanticModel(Loretta.CodeAnalysis.SyntaxTree! syntaxTree, bool ignoreAccessibility = false) -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Compilation.GetSpecialType(Loretta.CodeAnalysis.SpecialType specialType) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.GetTypeByMetadataName(string! fullyQualifiedMetadataName) -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.Compilation.GetUnreferencedAssemblyIdentities(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AssemblyIdentity!>
Loretta.CodeAnalysis.Compilation.GlobalNamespace.get -> Loretta.CodeAnalysis.INamespaceSymbol!
Loretta.CodeAnalysis.Compilation.HasImplicitConversion(Loretta.CodeAnalysis.ITypeSymbol? fromType, Loretta.CodeAnalysis.ITypeSymbol? toType) -> bool
Loretta.CodeAnalysis.Compilation.IsSymbolAccessibleWithin(Loretta.CodeAnalysis.ISymbol! symbol, Loretta.CodeAnalysis.ISymbol! within, Loretta.CodeAnalysis.ITypeSymbol? throughType = null) -> bool
Loretta.CodeAnalysis.Compilation.ObjectType.get -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.Compilation.Options.get -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.Compilation.References.get -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.MetadataReference!>!
Loretta.CodeAnalysis.Compilation.RemoveAllReferences() -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.RemoveAllSyntaxTrees() -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.RemoveReferences(params Loretta.CodeAnalysis.MetadataReference![]! references) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.RemoveReferences(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.MetadataReference!>! references) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.RemoveSyntaxTrees(params Loretta.CodeAnalysis.SyntaxTree![]! trees) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.RemoveSyntaxTrees(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTree!>! trees) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.ReplaceReference(Loretta.CodeAnalysis.MetadataReference! oldReference, Loretta.CodeAnalysis.MetadataReference? newReference) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.ReplaceSyntaxTree(Loretta.CodeAnalysis.SyntaxTree! oldTree, Loretta.CodeAnalysis.SyntaxTree! newTree) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.ScriptClass.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.Compilation.ScriptCompilationInfo.get -> Loretta.CodeAnalysis.ScriptCompilationInfo?
Loretta.CodeAnalysis.Compilation.SourceModule.get -> Loretta.CodeAnalysis.IModuleSymbol!
Loretta.CodeAnalysis.Compilation.SyntaxTrees.get -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTree!>!
Loretta.CodeAnalysis.Compilation.WithAssemblyName(string? assemblyName) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.WithOptions(Loretta.CodeAnalysis.CompilationOptions! options) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.WithReferences(params Loretta.CodeAnalysis.MetadataReference![]! newReferences) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.WithReferences(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.MetadataReference!>! newReferences) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Compilation.WithScriptCompilationInfo(Loretta.CodeAnalysis.ScriptCompilationInfo? info) -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.CompilationOptions
Loretta.CodeAnalysis.CompilationOptions.AssemblyIdentityComparer.get -> Loretta.CodeAnalysis.AssemblyIdentityComparer!
Loretta.CodeAnalysis.CompilationOptions.CheckOverflow.get -> bool
Loretta.CodeAnalysis.CompilationOptions.ConcurrentBuild.get -> bool
Loretta.CodeAnalysis.CompilationOptions.CryptoKeyContainer.get -> string?
Loretta.CodeAnalysis.CompilationOptions.CryptoKeyFile.get -> string?
Loretta.CodeAnalysis.CompilationOptions.CryptoPublicKey.get -> System.Collections.Immutable.ImmutableArray<byte>
Loretta.CodeAnalysis.CompilationOptions.DelaySign.get -> bool?
Loretta.CodeAnalysis.CompilationOptions.Deterministic.get -> bool
Loretta.CodeAnalysis.CompilationOptions.Errors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.CompilationOptions.GeneralDiagnosticOption.get -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.CompilationOptions.MainTypeName.get -> string?
Loretta.CodeAnalysis.CompilationOptions.MetadataImportOptions.get -> Loretta.CodeAnalysis.MetadataImportOptions
Loretta.CodeAnalysis.CompilationOptions.MetadataReferenceResolver.get -> Loretta.CodeAnalysis.MetadataReferenceResolver?
Loretta.CodeAnalysis.CompilationOptions.ModuleName.get -> string?
Loretta.CodeAnalysis.CompilationOptions.OptimizationLevel.get -> Loretta.CodeAnalysis.OptimizationLevel
Loretta.CodeAnalysis.CompilationOptions.OutputKind.get -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.CompilationOptions.Platform.get -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.CompilationOptions.PublicSign.get -> bool
Loretta.CodeAnalysis.CompilationOptions.ReportSuppressedDiagnostics.get -> bool
Loretta.CodeAnalysis.CompilationOptions.ScriptClassName.get -> string?
Loretta.CodeAnalysis.CompilationOptions.SourceReferenceResolver.get -> Loretta.CodeAnalysis.SourceReferenceResolver?
Loretta.CodeAnalysis.CompilationOptions.SpecificDiagnosticOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>!
Loretta.CodeAnalysis.CompilationOptions.StrongNameProvider.get -> Loretta.CodeAnalysis.StrongNameProvider?
Loretta.CodeAnalysis.CompilationOptions.SyntaxTreeOptionsProvider.get -> Loretta.CodeAnalysis.SyntaxTreeOptionsProvider?
Loretta.CodeAnalysis.CompilationOptions.WarningLevel.get -> int
Loretta.CodeAnalysis.CompilationOptions.WithAssemblyIdentityComparer(Loretta.CodeAnalysis.AssemblyIdentityComparer! comparer) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithConcurrentBuild(bool concurrent) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithCryptoKeyContainer(string? cryptoKeyContainer) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithCryptoKeyFile(string? cryptoKeyFile) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithCryptoPublicKey(System.Collections.Immutable.ImmutableArray<byte> cryptoPublicKey) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithDelaySign(bool? delaySign) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithDeterministic(bool deterministic) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithGeneralDiagnosticOption(Loretta.CodeAnalysis.ReportDiagnostic value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithMainTypeName(string? mainTypeName) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithMetadataImportOptions(Loretta.CodeAnalysis.MetadataImportOptions value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithMetadataReferenceResolver(Loretta.CodeAnalysis.MetadataReferenceResolver? resolver) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithModuleName(string? moduleName) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithOptimizationLevel(Loretta.CodeAnalysis.OptimizationLevel value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithOutputKind(Loretta.CodeAnalysis.OutputKind kind) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithOverflowChecks(bool checkOverflow) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithPlatform(Loretta.CodeAnalysis.Platform platform) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithPublicSign(bool publicSign) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithReportSuppressedDiagnostics(bool value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithScriptClassName(string! scriptClassName) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithSourceReferenceResolver(Loretta.CodeAnalysis.SourceReferenceResolver? resolver) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string!, Loretta.CodeAnalysis.ReportDiagnostic>>! value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>? value) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithStrongNameProvider(Loretta.CodeAnalysis.StrongNameProvider? provider) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithSyntaxTreeOptionsProvider(Loretta.CodeAnalysis.SyntaxTreeOptionsProvider? provider) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.WithXmlReferenceResolver(Loretta.CodeAnalysis.XmlReferenceResolver? resolver) -> Loretta.CodeAnalysis.CompilationOptions!
Loretta.CodeAnalysis.CompilationOptions.XmlReferenceResolver.get -> Loretta.CodeAnalysis.XmlReferenceResolver?
Loretta.CodeAnalysis.CompilationReference
Loretta.CodeAnalysis.CompilationReference.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.CompilationReference.Equals(Loretta.CodeAnalysis.CompilationReference? other) -> bool
Loretta.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Generic.IEnumerable<string!>! aliases) -> Loretta.CodeAnalysis.CompilationReference!
Loretta.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Immutable.ImmutableArray<string!> aliases) -> Loretta.CodeAnalysis.CompilationReference!
Loretta.CodeAnalysis.CompilationReference.WithEmbedInteropTypes(bool value) -> Loretta.CodeAnalysis.CompilationReference!
Loretta.CodeAnalysis.CompilationReference.WithProperties(Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> Loretta.CodeAnalysis.CompilationReference!
Loretta.CodeAnalysis.ControlFlowAnalysis
Loretta.CodeAnalysis.ControlFlowAnalysis.ControlFlowAnalysis() -> void
Loretta.CodeAnalysis.CustomModifier
Loretta.CodeAnalysis.CustomModifier.CustomModifier() -> void
Loretta.CodeAnalysis.DataFlowAnalysis
Loretta.CodeAnalysis.DataFlowAnalysis.DataFlowAnalysis() -> void
Loretta.CodeAnalysis.DesktopAssemblyIdentityComparer
Loretta.CodeAnalysis.DesktopStrongNameProvider
Loretta.CodeAnalysis.DesktopStrongNameProvider.DesktopStrongNameProvider(System.Collections.Immutable.ImmutableArray<string!> keyFileSearchPaths = default(System.Collections.Immutable.ImmutableArray<string!>), string? tempPath = null) -> void
Loretta.CodeAnalysis.DesktopStrongNameProvider.DesktopStrongNameProvider(System.Collections.Immutable.ImmutableArray<string!> keyFileSearchPaths) -> void
Loretta.CodeAnalysis.Diagnostic
Loretta.CodeAnalysis.Diagnostic.Diagnostic() -> void
Loretta.CodeAnalysis.Diagnostic.GetSuppressionInfo(Loretta.CodeAnalysis.Compilation! compilation) -> Loretta.CodeAnalysis.Diagnostics.SuppressionInfo?
Loretta.CodeAnalysis.Diagnostic.IsWarningAsError.get -> bool
Loretta.CodeAnalysis.DiagnosticDescriptor
Loretta.CodeAnalysis.DiagnosticDescriptor.Category.get -> string!
Loretta.CodeAnalysis.DiagnosticDescriptor.CustomTags.get -> System.Collections.Generic.IEnumerable<string!>!
Loretta.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity.get -> Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DiagnosticDescriptor.Description.get -> Loretta.CodeAnalysis.LocalizableString!
Loretta.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(string! id, Loretta.CodeAnalysis.LocalizableString! title, Loretta.CodeAnalysis.LocalizableString! messageFormat, string! category, Loretta.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, Loretta.CodeAnalysis.LocalizableString? description = null, string? helpLinkUri = null, params string![]! customTags) -> void
Loretta.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(string! id, string! title, string! messageFormat, string! category, Loretta.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, string? description = null, string? helpLinkUri = null, params string![]! customTags) -> void
Loretta.CodeAnalysis.DiagnosticDescriptor.Equals(Loretta.CodeAnalysis.DiagnosticDescriptor? other) -> bool
Loretta.CodeAnalysis.DiagnosticDescriptor.GetEffectiveSeverity(Loretta.CodeAnalysis.CompilationOptions! compilationOptions) -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri.get -> string!
Loretta.CodeAnalysis.DiagnosticDescriptor.Id.get -> string!
Loretta.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault.get -> bool
Loretta.CodeAnalysis.DiagnosticDescriptor.MessageFormat.get -> Loretta.CodeAnalysis.LocalizableString!
Loretta.CodeAnalysis.DiagnosticDescriptor.Title.get -> Loretta.CodeAnalysis.LocalizableString!
Loretta.CodeAnalysis.DiagnosticFormatter
Loretta.CodeAnalysis.DiagnosticFormatter.DiagnosticFormatter() -> void
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.AdditionalFile.get -> Loretta.CodeAnalysis.AdditionalText!
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.AdditionalFileAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.AnalysisContext
Loretta.CodeAnalysis.Diagnostics.AnalysisContext.AnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, params Loretta.CodeAnalysis.OperationKind[]! operationKinds) -> void
Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext>! action, params Loretta.CodeAnalysis.SymbolKind[]! symbolKinds) -> void
Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, params TLanguageKindEnum[]! syntaxKinds) -> void
Loretta.CodeAnalysis.Diagnostics.AnalysisContext.TryGetValue<TValue>(Loretta.CodeAnalysis.Text.SourceText! text, Loretta.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue>! valueProvider, out TValue value) -> bool
Loretta.CodeAnalysis.Diagnostics.AnalysisResult
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.AdditionalFileDiagnostics.get -> System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.AdditionalText!, System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!>!
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.Analyzers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.AnalyzerTelemetryInfo.get -> System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo!>!
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.CompilationDiagnostics.get -> System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.GetAllDiagnostics() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.GetAllDiagnostics(Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer! analyzer) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.SemanticDiagnostics.get -> System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.SyntaxTree!, System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!>!
Loretta.CodeAnalysis.Diagnostics.AnalysisResult.SyntaxDiagnostics.get -> System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.SyntaxTree!, System.Collections.Immutable.ImmutableDictionary<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!>!
Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions
Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions.AnalyzerConfigOptions() -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider
Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider.AnalyzerConfigOptionsProvider() -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.AnalyzerFileReference(string! fullPath, Loretta.CodeAnalysis.IAnalyzerAssemblyLoader! assemblyLoader) -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.AnalyzerLoadFailed -> System.EventHandler<Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs!>?
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.AssemblyLoader.get -> Loretta.CodeAnalysis.IAnalyzerAssemblyLoader!
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference? other) -> bool
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(Loretta.CodeAnalysis.Diagnostics.AnalyzerReference? other) -> bool
Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAssembly() -> System.Reflection.Assembly!
Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference
Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.AnalyzerImageReference(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, string? fullPath = null, string? display = null) -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.AnalyzerLoadFailureEventArgs(Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode errorCode, string! message, System.Exception? exceptionOpt = null, string? typeNameOpt = null) -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.ErrorCode.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.Exception.get -> System.Exception?
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.NoAnalyzers = 3 -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.None = 0 -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.ReferencesFramework = 4 -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToCreateAnalyzer = 2 -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToLoadAnalyzer = 1 -> Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.Message.get -> string!
Loretta.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.TypeName.get -> string?
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.AdditionalFiles.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!>
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.AnalyzerConfigOptionsProvider.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider!
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.AnalyzerOptions(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!> additionalFiles) -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.AnalyzerOptions(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!> additionalFiles, Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider! optionsProvider) -> void
Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.WithAdditionalFiles(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!> additionalFiles) -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.AnalyzerReference
Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.AnalyzerReference() -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlock.get -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlockAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlockAnalysisContext(Loretta.CodeAnalysis.SyntaxNode! codeBlock, Loretta.CodeAnalysis.ISymbol! owningSymbol, Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.OwningSymbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.SemanticModel.get -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CodeBlock.get -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CodeBlockStartAnalysisContext(Loretta.CodeAnalysis.SyntaxNode! codeBlock, Loretta.CodeAnalysis.ISymbol! owningSymbol, Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.OwningSymbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterSyntaxNodeAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, params TLanguageKindEnum[]! syntaxKinds) -> void
Loretta.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.SemanticModel.get -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CompilationAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CompilationAnalysisContext(Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue<TValue>(Loretta.CodeAnalysis.SyntaxTree! tree, Loretta.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<TValue>! valueProvider, out TValue value) -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue<TValue>(Loretta.CodeAnalysis.Text.SourceText! text, Loretta.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue>! valueProvider, out TValue value) -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.CompilationStartAnalysisContext(Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, params Loretta.CodeAnalysis.OperationKind[]! operationKinds) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext>! action, params Loretta.CodeAnalysis.SymbolKind[]! symbolKinds) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, params TLanguageKindEnum[]! syntaxKinds) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.TryGetValue<TValue>(Loretta.CodeAnalysis.SyntaxTree! tree, Loretta.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<TValue>! valueProvider, out TValue value) -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.TryGetValue<TValue>(Loretta.CodeAnalysis.Text.SourceText! text, Loretta.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue>! valueProvider, out TValue value) -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.AnalysisOptions.get -> Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.CompilationWithAnalyzers(Loretta.CodeAnalysis.Compilation! compilation, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions? options, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.CompilationWithAnalyzers(Loretta.CodeAnalysis.Compilation! compilation, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions! analysisOptions) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAllDiagnosticsAsync() -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAllDiagnosticsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.AdditionalText! file, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.AdditionalText! file, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.SemanticModel! model, Loretta.CodeAnalysis.Text.TextSpan? filterSpan, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.SemanticModel! model, Loretta.CodeAnalysis.Text.TextSpan? filterSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.SyntaxTree! tree, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Loretta.CodeAnalysis.SyntaxTree! tree, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.AnalysisResult!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerCompilationDiagnosticsAsync(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerCompilationDiagnosticsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync() -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync(Loretta.CodeAnalysis.SemanticModel! model, Loretta.CodeAnalysis.Text.TextSpan? filterSpan, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync(Loretta.CodeAnalysis.SemanticModel! model, Loretta.CodeAnalysis.Text.TextSpan? filterSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSyntaxDiagnosticsAsync(Loretta.CodeAnalysis.SyntaxTree! tree, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSyntaxDiagnosticsAsync(Loretta.CodeAnalysis.SyntaxTree! tree, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerTelemetryInfoAsync(Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer! analyzer, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo!>!
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.AnalyzerExceptionFilter.get -> System.Func<System.Exception!, bool>?
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.CompilationWithAnalyzersOptions(Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<System.Exception!, Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostic!>? onAnalyzerException, bool concurrentAnalysis, bool logAnalyzerExecutionTime) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.CompilationWithAnalyzersOptions(Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<System.Exception!, Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostic!>? onAnalyzerException, bool concurrentAnalysis, bool logAnalyzerExecutionTime, bool reportSuppressedDiagnostics) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.CompilationWithAnalyzersOptions(Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions? options, System.Action<System.Exception!, Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostic!>? onAnalyzerException, bool concurrentAnalysis, bool logAnalyzerExecutionTime, bool reportSuppressedDiagnostics, System.Func<System.Exception!, bool>? analyzerExceptionFilter) -> void
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.ConcurrentAnalysis.get -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.LogAnalyzerExecutionTime.get -> bool
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.OnAnalyzerException.get -> System.Action<System.Exception!, Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostic!>?
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions?
Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.ReportSuppressedDiagnostics.get -> bool
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.DiagnosticAnalyzer() -> void
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.DiagnosticAnalyzerAttribute(string! firstLanguage, params string![]! additionalLanguages) -> void
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.Languages.get -> string![]!
Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor
Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor.DiagnosticSuppressor() -> void
Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags
Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.Analyze = 1 -> Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags
Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.None = 0 -> Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags
Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.ReportDiagnostics = 2 -> Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.ContainingSymbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.GetControlFlowGraph() -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.OperationAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.OperationAnalysisContext(Loretta.CodeAnalysis.IOperation! operation, Loretta.CodeAnalysis.ISymbol! containingSymbol, Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.GetControlFlowGraph(Loretta.CodeAnalysis.IOperation! operationBlock) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OperationBlockAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OperationBlockAnalysisContext(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!> operationBlocks, Loretta.CodeAnalysis.ISymbol! owningSymbol, Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OperationBlocks.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OwningSymbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.GetControlFlowGraph(Loretta.CodeAnalysis.IOperation! operationBlock) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.OperationBlocks.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.OperationBlockStartAnalysisContext(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!> operationBlocks, Loretta.CodeAnalysis.ISymbol! owningSymbol, Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.OwningSymbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, params Loretta.CodeAnalysis.OperationKind[]! operationKinds) -> void
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModel.get -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModelAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModelAnalysisContext(Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue>
Loretta.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue>.SourceTextValueProvider(System.Func<Loretta.CodeAnalysis.Text.SourceText!, TValue>! computeValue, System.Collections.Generic.IEqualityComparer<Loretta.CodeAnalysis.Text.SourceText!>? sourceTextComparer = null) -> void
Loretta.CodeAnalysis.Diagnostics.Suppression
Loretta.CodeAnalysis.Diagnostics.Suppression.Descriptor.get -> Loretta.CodeAnalysis.SuppressionDescriptor!
Loretta.CodeAnalysis.Diagnostics.Suppression.Equals(Loretta.CodeAnalysis.Diagnostics.Suppression other) -> bool
Loretta.CodeAnalysis.Diagnostics.Suppression.SuppressedDiagnostic.get -> Loretta.CodeAnalysis.Diagnostic!
Loretta.CodeAnalysis.Diagnostics.Suppression.Suppression() -> void
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.GetSemanticModel(Loretta.CodeAnalysis.SyntaxTree! syntaxTree) -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.ReportedDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.ReportSuppression(Loretta.CodeAnalysis.Diagnostics.Suppression suppression) -> void
Loretta.CodeAnalysis.Diagnostics.SuppressionAnalysisContext.SuppressionAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.SuppressionInfo
Loretta.CodeAnalysis.Diagnostics.SuppressionInfo.Attribute.get -> Loretta.CodeAnalysis.AttributeData?
Loretta.CodeAnalysis.Diagnostics.SuppressionInfo.Id.get -> string!
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Symbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.SymbolAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.SymbolAnalysisContext.SymbolAnalysisContext(Loretta.CodeAnalysis.ISymbol! symbol, Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, params Loretta.CodeAnalysis.OperationKind[]! operationKinds) -> void
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext>! action, params TLanguageKindEnum[]! syntaxKinds) -> void
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.Symbol.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext.SymbolStartAnalysisContext(Loretta.CodeAnalysis.ISymbol! symbol, Loretta.CodeAnalysis.Compilation! compilation, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ContainingSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Node.get -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SemanticModel.get -> Loretta.CodeAnalysis.SemanticModel!
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SyntaxNodeAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SyntaxNodeAnalysisContext(Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.ISymbol? containingSymbol, Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SyntaxNodeAnalysisContext(Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Options.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions!
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.SyntaxTreeAnalysisContext() -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.SyntaxTreeAnalysisContext(Loretta.CodeAnalysis.SyntaxTree! tree, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions! options, System.Action<Loretta.CodeAnalysis.Diagnostic!>! reportDiagnostic, System.Func<Loretta.CodeAnalysis.Diagnostic!, bool>! isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken) -> void
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Tree.get -> Loretta.CodeAnalysis.SyntaxTree!
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<TValue>
Loretta.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<TValue>.SyntaxTreeValueProvider(System.Func<Loretta.CodeAnalysis.SyntaxTree!, TValue>! computeValue, System.Collections.Generic.IEqualityComparer<Loretta.CodeAnalysis.SyntaxTree!>? syntaxTreeComparer = null) -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.AdditionalFileActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.AdditionalFileActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.AnalyzerTelemetryInfo() -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockEndActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockEndActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockStartActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockStartActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationEndActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationEndActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationStartActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationStartActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.Concurrent.get -> bool
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.Concurrent.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.ExecutionTime.get -> System.TimeSpan
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.ExecutionTime.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockEndActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockEndActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockStartActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockStartActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SemanticModelActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SemanticModelActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SuppressionActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SuppressionActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolEndActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolEndActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolStartActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolStartActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxNodeActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxNodeActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxTreeActionsCount.get -> int
Loretta.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxTreeActionsCount.set -> void
Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference
Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.UnresolvedAnalyzerReference(string! unresolvedPath) -> void
Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DiagnosticSeverity.Error = 3 -> Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DiagnosticSeverity.Hidden = 0 -> Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DiagnosticSeverity.Info = 1 -> Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DiagnosticSeverity.Warning = 2 -> Loretta.CodeAnalysis.DiagnosticSeverity
Loretta.CodeAnalysis.DllImportData
Loretta.CodeAnalysis.DllImportData.BestFitMapping.get -> bool?
Loretta.CodeAnalysis.DllImportData.CallingConvention.get -> System.Runtime.InteropServices.CallingConvention
Loretta.CodeAnalysis.DllImportData.CharacterSet.get -> System.Runtime.InteropServices.CharSet
Loretta.CodeAnalysis.DllImportData.EntryPointName.get -> string?
Loretta.CodeAnalysis.DllImportData.ExactSpelling.get -> bool
Loretta.CodeAnalysis.DllImportData.ModuleName.get -> string?
Loretta.CodeAnalysis.DllImportData.SetLastError.get -> bool
Loretta.CodeAnalysis.DllImportData.ThrowOnUnmappableCharacter.get -> bool?
Loretta.CodeAnalysis.DocumentationCommentId
Loretta.CodeAnalysis.DocumentationMode
Loretta.CodeAnalysis.DocumentationMode.Diagnose = 2 -> Loretta.CodeAnalysis.DocumentationMode
Loretta.CodeAnalysis.DocumentationMode.None = 0 -> Loretta.CodeAnalysis.DocumentationMode
Loretta.CodeAnalysis.DocumentationMode.Parse = 1 -> Loretta.CodeAnalysis.DocumentationMode
Loretta.CodeAnalysis.DocumentationProvider
Loretta.CodeAnalysis.DocumentationProvider.DocumentationProvider() -> void
Loretta.CodeAnalysis.EmbeddedText
Loretta.CodeAnalysis.EmbeddedText.Checksum.get -> System.Collections.Immutable.ImmutableArray<byte>
Loretta.CodeAnalysis.EmbeddedText.ChecksumAlgorithm.get -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.EmbeddedText.FilePath.get -> string!
Loretta.CodeAnalysis.Emit.DebugInformationFormat
Loretta.CodeAnalysis.Emit.DebugInformationFormat.Embedded = 3 -> Loretta.CodeAnalysis.Emit.DebugInformationFormat
Loretta.CodeAnalysis.Emit.DebugInformationFormat.Pdb = 1 -> Loretta.CodeAnalysis.Emit.DebugInformationFormat
Loretta.CodeAnalysis.Emit.DebugInformationFormat.PortablePdb = 2 -> Loretta.CodeAnalysis.Emit.DebugInformationFormat
Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation
Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.EditAndContinueMethodDebugInformation() -> void
Loretta.CodeAnalysis.Emit.EmitBaseline
Loretta.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata.get -> Loretta.CodeAnalysis.ModuleMetadata!
Loretta.CodeAnalysis.Emit.EmitDifferenceResult
Loretta.CodeAnalysis.Emit.EmitDifferenceResult.Baseline.get -> Loretta.CodeAnalysis.Emit.EmitBaseline!
Loretta.CodeAnalysis.Emit.EmitOptions
Loretta.CodeAnalysis.Emit.EmitOptions.BaseAddress.get -> ulong
Loretta.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat.get -> Loretta.CodeAnalysis.Emit.DebugInformationFormat
Loretta.CodeAnalysis.Emit.EmitOptions.DefaultSourceFileEncoding.get -> System.Text.Encoding?
Loretta.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly.get -> bool
Loretta.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool metadataOnly = false, Loretta.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat = (Loretta.CodeAnalysis.Emit.DebugInformationFormat)0, string? pdbFilePath = null, string? outputNameOverride = null, int fileAlignment = 0, ulong baseAddress = 0, bool highEntropyVirtualAddressSpace = false, Loretta.CodeAnalysis.SubsystemVersion subsystemVersion = default(Loretta.CodeAnalysis.SubsystemVersion), string? runtimeMetadataVersion = null, bool tolerateErrors = false, bool includePrivateMembers = true, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind> instrumentationKinds = default(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind>), System.Security.Cryptography.HashAlgorithmName? pdbChecksumAlgorithm = null, System.Text.Encoding? defaultSourceFileEncoding = null, System.Text.Encoding? fallbackSourceFileEncoding = null) -> void
Loretta.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool metadataOnly, Loretta.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string! pdbFilePath, string! outputNameOverride, int fileAlignment, ulong baseAddress, bool highEntropyVirtualAddressSpace, Loretta.CodeAnalysis.SubsystemVersion subsystemVersion, string! runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers) -> void
Loretta.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool metadataOnly, Loretta.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string! pdbFilePath, string! outputNameOverride, int fileAlignment, ulong baseAddress, bool highEntropyVirtualAddressSpace, Loretta.CodeAnalysis.SubsystemVersion subsystemVersion, string! runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind> instrumentationKinds) -> void
Loretta.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool metadataOnly, Loretta.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string? pdbFilePath, string? outputNameOverride, int fileAlignment, ulong baseAddress, bool highEntropyVirtualAddressSpace, Loretta.CodeAnalysis.SubsystemVersion subsystemVersion, string? runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind> instrumentationKinds, System.Security.Cryptography.HashAlgorithmName? pdbChecksumAlgorithm) -> void
Loretta.CodeAnalysis.Emit.EmitOptions.Equals(Loretta.CodeAnalysis.Emit.EmitOptions? other) -> bool
Loretta.CodeAnalysis.Emit.EmitOptions.FallbackSourceFileEncoding.get -> System.Text.Encoding?
Loretta.CodeAnalysis.Emit.EmitOptions.FileAlignment.get -> int
Loretta.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace.get -> bool
Loretta.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers.get -> bool
Loretta.CodeAnalysis.Emit.EmitOptions.InstrumentationKinds.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind>
Loretta.CodeAnalysis.Emit.EmitOptions.OutputNameOverride.get -> string?
Loretta.CodeAnalysis.Emit.EmitOptions.PdbChecksumAlgorithm.get -> System.Security.Cryptography.HashAlgorithmName
Loretta.CodeAnalysis.Emit.EmitOptions.PdbFilePath.get -> string?
Loretta.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion.get -> string?
Loretta.CodeAnalysis.Emit.EmitOptions.SubsystemVersion.get -> Loretta.CodeAnalysis.SubsystemVersion
Loretta.CodeAnalysis.Emit.EmitOptions.TolerateErrors.get -> bool
Loretta.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(ulong value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Loretta.CodeAnalysis.Emit.DebugInformationFormat format) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithDefaultSourceFileEncoding(System.Text.Encoding? defaultSourceFileEncoding) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(bool value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithFallbackSourceFileEncoding(System.Text.Encoding? fallbackSourceFileEncoding) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(int value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(bool value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(bool value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithInstrumentationKinds(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Emit.InstrumentationKind> instrumentationKinds) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(string! outputName) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithPdbChecksumAlgorithm(System.Security.Cryptography.HashAlgorithmName name) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(string! path) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(string! version) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Loretta.CodeAnalysis.SubsystemVersion subsystemVersion) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(bool value) -> Loretta.CodeAnalysis.Emit.EmitOptions!
Loretta.CodeAnalysis.Emit.EmitResult
Loretta.CodeAnalysis.Emit.EmitResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.Emit.EmitResult.Success.get -> bool
Loretta.CodeAnalysis.Emit.InstrumentationKind
Loretta.CodeAnalysis.Emit.InstrumentationKind.None = 0 -> Loretta.CodeAnalysis.Emit.InstrumentationKind
Loretta.CodeAnalysis.Emit.InstrumentationKind.TestCoverage = 1 -> Loretta.CodeAnalysis.Emit.InstrumentationKind
Loretta.CodeAnalysis.Emit.SemanticEdit
Loretta.CodeAnalysis.Emit.SemanticEdit.Equals(Loretta.CodeAnalysis.Emit.SemanticEdit other) -> bool
Loretta.CodeAnalysis.Emit.SemanticEdit.Kind.get -> Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.Emit.SemanticEdit.NewSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Emit.SemanticEdit.OldSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Emit.SemanticEdit.PreserveLocalVariables.get -> bool
Loretta.CodeAnalysis.Emit.SemanticEdit.SemanticEdit() -> void
Loretta.CodeAnalysis.Emit.SemanticEdit.SemanticEdit(Loretta.CodeAnalysis.Emit.SemanticEditKind kind, Loretta.CodeAnalysis.ISymbol? oldSymbol, Loretta.CodeAnalysis.ISymbol? newSymbol, System.Func<Loretta.CodeAnalysis.SyntaxNode!, Loretta.CodeAnalysis.SyntaxNode?>? syntaxMap = null, bool preserveLocalVariables = false) -> void
Loretta.CodeAnalysis.Emit.SemanticEdit.SyntaxMap.get -> System.Func<Loretta.CodeAnalysis.SyntaxNode!, Loretta.CodeAnalysis.SyntaxNode?>?
Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.Emit.SemanticEditKind.Delete = 3 -> Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.Emit.SemanticEditKind.Insert = 2 -> Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.Emit.SemanticEditKind.None = 0 -> Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.Emit.SemanticEditKind.Update = 1 -> Loretta.CodeAnalysis.Emit.SemanticEditKind
Loretta.CodeAnalysis.ErrorLogOptions
Loretta.CodeAnalysis.ErrorLogOptions.ErrorLogOptions(string! path, Loretta.CodeAnalysis.SarifVersion sarifVersion) -> void
Loretta.CodeAnalysis.ErrorLogOptions.Path.get -> string!
Loretta.CodeAnalysis.ErrorLogOptions.SarifVersion.get -> Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.FileLinePositionSpan
Loretta.CodeAnalysis.FileLinePositionSpan.EndLinePosition.get -> Loretta.CodeAnalysis.Text.LinePosition
Loretta.CodeAnalysis.FileLinePositionSpan.Equals(Loretta.CodeAnalysis.FileLinePositionSpan other) -> bool
Loretta.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan() -> void
Loretta.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(string! path, Loretta.CodeAnalysis.Text.LinePosition start, Loretta.CodeAnalysis.Text.LinePosition end) -> void
Loretta.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(string! path, Loretta.CodeAnalysis.Text.LinePositionSpan span) -> void
Loretta.CodeAnalysis.FileLinePositionSpan.HasMappedPath.get -> bool
Loretta.CodeAnalysis.FileLinePositionSpan.IsValid.get -> bool
Loretta.CodeAnalysis.FileLinePositionSpan.Path.get -> string!
Loretta.CodeAnalysis.FileLinePositionSpan.Span.get -> Loretta.CodeAnalysis.Text.LinePositionSpan
Loretta.CodeAnalysis.FileLinePositionSpan.StartLinePosition.get -> Loretta.CodeAnalysis.Text.LinePosition
Loretta.CodeAnalysis.FileSystemExtensions
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.BranchValue.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.ConditionalSuccessor.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch?
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.ConditionKind.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.EnclosingRegion.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.FallThroughSuccessor.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch?
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.IsReachable.get -> bool
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.Kind.get -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.Operations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.Ordinal.get -> int
Loretta.CodeAnalysis.FlowAnalysis.BasicBlock.Predecessors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch!>
Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind
Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind.Block = 2 -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind
Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind.Entry = 0 -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind
Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind.Exit = 1 -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlockKind
Loretta.CodeAnalysis.FlowAnalysis.CaptureId
Loretta.CodeAnalysis.FlowAnalysis.CaptureId.CaptureId() -> void
Loretta.CodeAnalysis.FlowAnalysis.CaptureId.Equals(Loretta.CodeAnalysis.FlowAnalysis.CaptureId other) -> bool
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Destination.get -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlock?
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.EnteringRegions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.FinallyRegions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.IsConditionalSuccessor.get -> bool
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.LeavingRegions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Semantics.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Source.get -> Loretta.CodeAnalysis.FlowAnalysis.BasicBlock!
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Error = 7 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.None = 0 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.ProgramTermination = 4 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Regular = 1 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Rethrow = 6 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Return = 2 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.StructuredExceptionHandling = 3 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Throw = 5 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.None = 0 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.WhenFalse = 1 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.WhenTrue = 2 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Blocks.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.BasicBlock!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.GetAnonymousFunctionControlFlowGraph(Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation! anonymousFunction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.GetLocalFunctionControlFlowGraph(Loretta.CodeAnalysis.IMethodSymbol! localFunction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.LocalFunctions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.OriginalOperation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Parent.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph?
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Root.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraphExtensions
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.CaptureIds.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.CaptureId>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.EnclosingRegion.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion?
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.ExceptionType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.FirstBlockOrdinal.get -> int
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.Kind.get -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.LastBlockOrdinal.get -> int
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.LocalFunctions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion.NestedRegions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegion!>
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Catch = 4 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.ErroneousBody = 10 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Filter = 3 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.FilterAndHandler = 5 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Finally = 7 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.LocalLifetime = 1 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Root = 0 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.StaticLocalInitializer = 9 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Try = 2 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.TryAndCatch = 6 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.TryAndFinally = 8 -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind
Loretta.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation
Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation
Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation.Symbol.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation
Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation.Id.get -> Loretta.CodeAnalysis.FlowAnalysis.CaptureId
Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation
Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation.Id.get -> Loretta.CodeAnalysis.FlowAnalysis.CaptureId
Loretta.CodeAnalysis.FlowAnalysis.IIsNullOperation
Loretta.CodeAnalysis.FlowAnalysis.IIsNullOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation
Loretta.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation.Local.get -> Loretta.CodeAnalysis.ILocalSymbol!
Loretta.CodeAnalysis.GeneratedKind
Loretta.CodeAnalysis.GeneratedKind.MarkedGenerated = 2 -> Loretta.CodeAnalysis.GeneratedKind
Loretta.CodeAnalysis.GeneratedKind.NotGenerated = 1 -> Loretta.CodeAnalysis.GeneratedKind
Loretta.CodeAnalysis.GeneratedKind.Unknown = 0 -> Loretta.CodeAnalysis.GeneratedKind
Loretta.CodeAnalysis.GeneratedSourceResult
Loretta.CodeAnalysis.GeneratedSourceResult.GeneratedSourceResult() -> void
Loretta.CodeAnalysis.GeneratedSourceResult.HintName.get -> string!
Loretta.CodeAnalysis.GeneratedSourceResult.SourceText.get -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.GeneratedSourceResult.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree!
Loretta.CodeAnalysis.GeneratorAttribute
Loretta.CodeAnalysis.GeneratorAttribute.GeneratorAttribute() -> void
Loretta.CodeAnalysis.GeneratorDriver
Loretta.CodeAnalysis.GeneratorDriver.AddAdditionalTexts(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!> additionalTexts) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriver.AddGenerators(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISourceGenerator!> generators) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriver.GetRunResult() -> Loretta.CodeAnalysis.GeneratorDriverRunResult!
Loretta.CodeAnalysis.GeneratorDriver.RemoveAdditionalTexts(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!> additionalTexts) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriver.RemoveGenerators(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISourceGenerator!> generators) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriver.RunGenerators(Loretta.CodeAnalysis.Compilation! compilation, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriver.RunGeneratorsAndUpdateCompilation(Loretta.CodeAnalysis.Compilation! compilation, out Loretta.CodeAnalysis.Compilation! outputCompilation, out System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!> diagnostics, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.GeneratorDriver!
Loretta.CodeAnalysis.GeneratorDriverRunResult
Loretta.CodeAnalysis.GeneratorDriverRunResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.GeneratorDriverRunResult.GeneratedTrees.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SyntaxTree!>
Loretta.CodeAnalysis.GeneratorDriverRunResult.Results.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.GeneratorRunResult>
Loretta.CodeAnalysis.GeneratorExecutionContext
Loretta.CodeAnalysis.GeneratorExecutionContext.AdditionalFiles.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AdditionalText!>
Loretta.CodeAnalysis.GeneratorExecutionContext.AddSource(string! hintName, Loretta.CodeAnalysis.Text.SourceText! sourceText) -> void
Loretta.CodeAnalysis.GeneratorExecutionContext.AddSource(string! hintName, string! source) -> void
Loretta.CodeAnalysis.GeneratorExecutionContext.AnalyzerConfigOptions.get -> Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptionsProvider!
Loretta.CodeAnalysis.GeneratorExecutionContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.GeneratorExecutionContext.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.GeneratorExecutionContext.GeneratorExecutionContext() -> void
Loretta.CodeAnalysis.GeneratorExecutionContext.ParseOptions.get -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.GeneratorExecutionContext.ReportDiagnostic(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> void
Loretta.CodeAnalysis.GeneratorExecutionContext.SyntaxReceiver.get -> Loretta.CodeAnalysis.ISyntaxReceiver?
Loretta.CodeAnalysis.GeneratorInitializationContext
Loretta.CodeAnalysis.GeneratorInitializationContext.CancellationToken.get -> System.Threading.CancellationToken
Loretta.CodeAnalysis.GeneratorInitializationContext.GeneratorInitializationContext() -> void
Loretta.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(Loretta.CodeAnalysis.SyntaxReceiverCreator! receiverCreator) -> void
Loretta.CodeAnalysis.GeneratorRunResult
Loretta.CodeAnalysis.GeneratorRunResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.GeneratorRunResult.Exception.get -> System.Exception?
Loretta.CodeAnalysis.GeneratorRunResult.GeneratedSources.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.GeneratedSourceResult>
Loretta.CodeAnalysis.GeneratorRunResult.Generator.get -> Loretta.CodeAnalysis.ISourceGenerator!
Loretta.CodeAnalysis.GeneratorRunResult.GeneratorRunResult() -> void
Loretta.CodeAnalysis.IAliasSymbol
Loretta.CodeAnalysis.IAliasSymbol.Target.get -> Loretta.CodeAnalysis.INamespaceOrTypeSymbol!
Loretta.CodeAnalysis.IAnalyzerAssemblyLoader
~Loretta.CodeAnalysis.IAnalyzerAssemblyLoader.AddDependencyLocation(string fullPath) -> void
~Loretta.CodeAnalysis.IAnalyzerAssemblyLoader.LoadFromPath(string fullPath) -> System.Reflection.Assembly
Loretta.CodeAnalysis.IArrayTypeSymbol
Loretta.CodeAnalysis.IArrayTypeSymbol.CustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IArrayTypeSymbol.ElementNullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IArrayTypeSymbol.ElementType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IArrayTypeSymbol.Equals(Loretta.CodeAnalysis.IArrayTypeSymbol? other) -> bool
Loretta.CodeAnalysis.IArrayTypeSymbol.IsSZArray.get -> bool
Loretta.CodeAnalysis.IArrayTypeSymbol.LowerBounds.get -> System.Collections.Immutable.ImmutableArray<int>
Loretta.CodeAnalysis.IArrayTypeSymbol.Rank.get -> int
Loretta.CodeAnalysis.IArrayTypeSymbol.Sizes.get -> System.Collections.Immutable.ImmutableArray<int>
Loretta.CodeAnalysis.IAssemblySymbol
Loretta.CodeAnalysis.IAssemblySymbol.GetForwardedTypes() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.IAssemblySymbol.GetMetadata() -> Loretta.CodeAnalysis.AssemblyMetadata?
Loretta.CodeAnalysis.IAssemblySymbol.GetTypeByMetadataName(string! fullyQualifiedMetadataName) -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.IAssemblySymbol.GivesAccessTo(Loretta.CodeAnalysis.IAssemblySymbol! toAssembly) -> bool
Loretta.CodeAnalysis.IAssemblySymbol.GlobalNamespace.get -> Loretta.CodeAnalysis.INamespaceSymbol!
Loretta.CodeAnalysis.IAssemblySymbol.Identity.get -> Loretta.CodeAnalysis.AssemblyIdentity!
Loretta.CodeAnalysis.IAssemblySymbol.IsInteractive.get -> bool
Loretta.CodeAnalysis.IAssemblySymbol.MightContainExtensionMethods.get -> bool
Loretta.CodeAnalysis.IAssemblySymbol.Modules.get -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.IModuleSymbol!>!
Loretta.CodeAnalysis.IAssemblySymbol.NamespaceNames.get -> System.Collections.Generic.ICollection<string!>!
Loretta.CodeAnalysis.IAssemblySymbol.ResolveForwardedType(string! fullyQualifiedMetadataName) -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.IAssemblySymbol.TypeNames.get -> System.Collections.Generic.ICollection<string!>!
Loretta.CodeAnalysis.ICompilationUnitSyntax
Loretta.CodeAnalysis.ICompilationUnitSyntax.EndOfFileToken.get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.IDiscardSymbol
Loretta.CodeAnalysis.IDiscardSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IDiscardSymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IDynamicTypeSymbol
Loretta.CodeAnalysis.IErrorTypeSymbol
Loretta.CodeAnalysis.IErrorTypeSymbol.CandidateReason.get -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.IErrorTypeSymbol.CandidateSymbols.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.IEventSymbol
Loretta.CodeAnalysis.IEventSymbol.AddMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IEventSymbol.ExplicitInterfaceImplementations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IEventSymbol!>
Loretta.CodeAnalysis.IEventSymbol.IsWindowsRuntimeEvent.get -> bool
Loretta.CodeAnalysis.IEventSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IEventSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.IEventSymbol!
Loretta.CodeAnalysis.IEventSymbol.OverriddenEvent.get -> Loretta.CodeAnalysis.IEventSymbol?
Loretta.CodeAnalysis.IEventSymbol.RaiseMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IEventSymbol.RemoveMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IEventSymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IFieldSymbol
Loretta.CodeAnalysis.IFieldSymbol.AssociatedSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.IFieldSymbol.ConstantValue.get -> object?
Loretta.CodeAnalysis.IFieldSymbol.CorrespondingTupleField.get -> Loretta.CodeAnalysis.IFieldSymbol?
Loretta.CodeAnalysis.IFieldSymbol.CustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IFieldSymbol.HasConstantValue.get -> bool
Loretta.CodeAnalysis.IFieldSymbol.IsConst.get -> bool
Loretta.CodeAnalysis.IFieldSymbol.IsFixedSizeBuffer.get -> bool
Loretta.CodeAnalysis.IFieldSymbol.IsReadOnly.get -> bool
Loretta.CodeAnalysis.IFieldSymbol.IsVolatile.get -> bool
Loretta.CodeAnalysis.IFieldSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IFieldSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.IFieldSymbol!
Loretta.CodeAnalysis.IFieldSymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IFunctionPointerTypeSymbol
Loretta.CodeAnalysis.IFunctionPointerTypeSymbol.Signature.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.ILabelSymbol
Loretta.CodeAnalysis.ILabelSymbol.ContainingMethod.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.ILocalSymbol
Loretta.CodeAnalysis.ILocalSymbol.ConstantValue.get -> object?
Loretta.CodeAnalysis.ILocalSymbol.HasConstantValue.get -> bool
Loretta.CodeAnalysis.ILocalSymbol.IsConst.get -> bool
Loretta.CodeAnalysis.ILocalSymbol.IsFixed.get -> bool
Loretta.CodeAnalysis.ILocalSymbol.IsFunctionValue.get -> bool
Loretta.CodeAnalysis.ILocalSymbol.IsRef.get -> bool
Loretta.CodeAnalysis.ILocalSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.ILocalSymbol.RefKind.get -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.ILocalSymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IMethodSymbol
Loretta.CodeAnalysis.IMethodSymbol.Arity.get -> int
Loretta.CodeAnalysis.IMethodSymbol.AssociatedAnonymousDelegate.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.IMethodSymbol.AssociatedSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.IMethodSymbol.CallingConvention.get -> System.Reflection.Metadata.SignatureCallingConvention
Loretta.CodeAnalysis.IMethodSymbol.Construct(params Loretta.CodeAnalysis.ITypeSymbol![]! typeArguments) -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.IMethodSymbol.Construct(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> typeArguments, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation> typeArgumentNullableAnnotations) -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.IMethodSymbol.ConstructedFrom.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.IMethodSymbol.ExplicitInterfaceImplementations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.IMethodSymbol.GetDllImportData() -> Loretta.CodeAnalysis.DllImportData?
Loretta.CodeAnalysis.IMethodSymbol.GetReturnTypeAttributes() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AttributeData!>
Loretta.CodeAnalysis.IMethodSymbol.GetTypeInferredDuringReduction(Loretta.CodeAnalysis.ITypeParameterSymbol! reducedFromTypeParameter) -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.IMethodSymbol.HidesBaseMethodsByName.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsAsync.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsCheckedBuiltin.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsConditional.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsExtensionMethod.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsGenericMethod.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsInitOnly.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsReadOnly.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.IsVararg.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.MethodKind.get -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.IMethodSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.IMethodSymbol.OverriddenMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IMethodSymbol.Parameters.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IParameterSymbol!>
Loretta.CodeAnalysis.IMethodSymbol.PartialDefinitionPart.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IMethodSymbol.PartialImplementationPart.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IMethodSymbol.ReceiverNullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IMethodSymbol.ReceiverType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.IMethodSymbol.ReducedFrom.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IMethodSymbol.ReduceExtensionMethod(Loretta.CodeAnalysis.ITypeSymbol! receiverType) -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IMethodSymbol.RefCustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IMethodSymbol.RefKind.get -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.IMethodSymbol.ReturnNullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IMethodSymbol.ReturnsByRef.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.ReturnsByRefReadonly.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.ReturnsVoid.get -> bool
Loretta.CodeAnalysis.IMethodSymbol.ReturnType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IMethodSymbol.ReturnTypeCustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IMethodSymbol.TypeArgumentNullableAnnotations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>
Loretta.CodeAnalysis.IMethodSymbol.TypeArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!>
Loretta.CodeAnalysis.IMethodSymbol.TypeParameters.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeParameterSymbol!>
Loretta.CodeAnalysis.IMethodSymbol.UnmanagedCallingConventionTypes.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.IModuleSymbol
Loretta.CodeAnalysis.IModuleSymbol.GetMetadata() -> Loretta.CodeAnalysis.ModuleMetadata?
Loretta.CodeAnalysis.IModuleSymbol.GetModuleNamespace(Loretta.CodeAnalysis.INamespaceSymbol! namespaceSymbol) -> Loretta.CodeAnalysis.INamespaceSymbol?
Loretta.CodeAnalysis.IModuleSymbol.GlobalNamespace.get -> Loretta.CodeAnalysis.INamespaceSymbol!
Loretta.CodeAnalysis.IModuleSymbol.ReferencedAssemblies.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AssemblyIdentity!>
Loretta.CodeAnalysis.IModuleSymbol.ReferencedAssemblySymbols.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IAssemblySymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol
Loretta.CodeAnalysis.INamedTypeSymbol.Arity.get -> int
Loretta.CodeAnalysis.INamedTypeSymbol.AssociatedSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.INamedTypeSymbol.Construct(params Loretta.CodeAnalysis.ITypeSymbol![]! typeArguments) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.INamedTypeSymbol.Construct(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!> typeArguments, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation> typeArgumentNullableAnnotations) -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.INamedTypeSymbol.ConstructedFrom.get -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.INamedTypeSymbol.Constructors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol.ConstructUnboundGenericType() -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.INamedTypeSymbol.DelegateInvokeMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.INamedTypeSymbol.EnumUnderlyingType.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.INamedTypeSymbol.GetTypeArgumentCustomModifiers(int ordinal) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.INamedTypeSymbol.InstanceConstructors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol.IsComImport.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.IsGenericType.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.IsImplicitClass.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.IsScriptClass.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.IsSerializable.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.IsUnboundGenericType.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.MemberNames.get -> System.Collections.Generic.IEnumerable<string!>!
Loretta.CodeAnalysis.INamedTypeSymbol.MightContainExtensionMethods.get -> bool
Loretta.CodeAnalysis.INamedTypeSymbol.NativeIntegerUnderlyingType.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.INamedTypeSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.INamedTypeSymbol!
Loretta.CodeAnalysis.INamedTypeSymbol.StaticConstructors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IMethodSymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol.TupleElements.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IFieldSymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol.TupleUnderlyingType.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.INamedTypeSymbol.TypeArgumentNullableAnnotations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>
Loretta.CodeAnalysis.INamedTypeSymbol.TypeArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!>
Loretta.CodeAnalysis.INamedTypeSymbol.TypeParameters.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeParameterSymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(string! name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(string! name) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(string! name, int arity) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.IsNamespace.get -> bool
Loretta.CodeAnalysis.INamespaceOrTypeSymbol.IsType.get -> bool
Loretta.CodeAnalysis.INamespaceSymbol
Loretta.CodeAnalysis.INamespaceSymbol.ConstituentNamespaces.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamespaceSymbol!>
Loretta.CodeAnalysis.INamespaceSymbol.ContainingCompilation.get -> Loretta.CodeAnalysis.Compilation?
Loretta.CodeAnalysis.INamespaceSymbol.GetMembers() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.INamespaceOrTypeSymbol!>!
Loretta.CodeAnalysis.INamespaceSymbol.GetMembers(string! name) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.INamespaceOrTypeSymbol!>!
Loretta.CodeAnalysis.INamespaceSymbol.GetNamespaceMembers() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.INamespaceSymbol!>!
Loretta.CodeAnalysis.INamespaceSymbol.IsGlobalNamespace.get -> bool
Loretta.CodeAnalysis.INamespaceSymbol.NamespaceKind.get -> Loretta.CodeAnalysis.NamespaceKind
Loretta.CodeAnalysis.IOperation
Loretta.CodeAnalysis.IOperation.Accept(Loretta.CodeAnalysis.Operations.OperationVisitor! visitor) -> void
Loretta.CodeAnalysis.IOperation.Accept<TArgument, TResult>(Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>! visitor, TArgument argument) -> TResult?
Loretta.CodeAnalysis.IOperation.Children.get -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.IOperation!>!
Loretta.CodeAnalysis.IOperation.ConstantValue.get -> Loretta.CodeAnalysis.Optional<object?>
Loretta.CodeAnalysis.IOperation.IsImplicit.get -> bool
Loretta.CodeAnalysis.IOperation.Kind.get -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.IOperation.Language.get -> string!
Loretta.CodeAnalysis.IOperation.Parent.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.IOperation.SemanticModel.get -> Loretta.CodeAnalysis.SemanticModel?
Loretta.CodeAnalysis.IOperation.Syntax.get -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.IOperation.Type.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.IParameterSymbol
Loretta.CodeAnalysis.IParameterSymbol.CustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue.get -> object?
Loretta.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue.get -> bool
Loretta.CodeAnalysis.IParameterSymbol.IsDiscard.get -> bool
Loretta.CodeAnalysis.IParameterSymbol.IsOptional.get -> bool
Loretta.CodeAnalysis.IParameterSymbol.IsParams.get -> bool
Loretta.CodeAnalysis.IParameterSymbol.IsThis.get -> bool
Loretta.CodeAnalysis.IParameterSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IParameterSymbol.Ordinal.get -> int
Loretta.CodeAnalysis.IParameterSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.IParameterSymbol!
Loretta.CodeAnalysis.IParameterSymbol.RefCustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IParameterSymbol.RefKind.get -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.IParameterSymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IPointerTypeSymbol
Loretta.CodeAnalysis.IPointerTypeSymbol.CustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IPointerTypeSymbol.PointedAtType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IPreprocessingSymbol
Loretta.CodeAnalysis.IPropertySymbol
Loretta.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IPropertySymbol!>
Loretta.CodeAnalysis.IPropertySymbol.GetMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IPropertySymbol.IsIndexer.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.IsReadOnly.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.IsWithEvents.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.IsWriteOnly.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.IPropertySymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.IPropertySymbol!
Loretta.CodeAnalysis.IPropertySymbol.OverriddenProperty.get -> Loretta.CodeAnalysis.IPropertySymbol?
Loretta.CodeAnalysis.IPropertySymbol.Parameters.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IParameterSymbol!>
Loretta.CodeAnalysis.IPropertySymbol.RefCustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IPropertySymbol.RefKind.get -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.IPropertySymbol.ReturnsByRef.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.ReturnsByRefReadonly.get -> bool
Loretta.CodeAnalysis.IPropertySymbol.SetMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.IPropertySymbol.Type.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.IPropertySymbol.TypeCustomModifiers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.CustomModifier!>
Loretta.CodeAnalysis.IRangeVariableSymbol
Loretta.CodeAnalysis.ISkippedTokensTriviaSyntax
Loretta.CodeAnalysis.ISkippedTokensTriviaSyntax.Tokens.get -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.ISourceAssemblySymbol
Loretta.CodeAnalysis.ISourceAssemblySymbol.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.ISourceGenerator
Loretta.CodeAnalysis.ISourceGenerator.Execute(Loretta.CodeAnalysis.GeneratorExecutionContext context) -> void
Loretta.CodeAnalysis.ISourceGenerator.Initialize(Loretta.CodeAnalysis.GeneratorInitializationContext context) -> void
Loretta.CodeAnalysis.IStructuredTriviaSyntax
Loretta.CodeAnalysis.IStructuredTriviaSyntax.ParentTrivia.get -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.ISymbol
Loretta.CodeAnalysis.ISymbol.Accept(Loretta.CodeAnalysis.SymbolVisitor! visitor) -> void
Loretta.CodeAnalysis.ISymbol.Accept<TResult>(Loretta.CodeAnalysis.SymbolVisitor<TResult>! visitor) -> TResult?
Loretta.CodeAnalysis.ISymbol.CanBeReferencedByName.get -> bool
~Loretta.CodeAnalysis.ISymbol.ContainingAssembly.get -> Loretta.CodeAnalysis.IAssemblySymbol
~Loretta.CodeAnalysis.ISymbol.ContainingModule.get -> Loretta.CodeAnalysis.IModuleSymbol
~Loretta.CodeAnalysis.ISymbol.ContainingNamespace.get -> Loretta.CodeAnalysis.INamespaceSymbol
~Loretta.CodeAnalysis.ISymbol.ContainingSymbol.get -> Loretta.CodeAnalysis.ISymbol
~Loretta.CodeAnalysis.ISymbol.ContainingType.get -> Loretta.CodeAnalysis.INamedTypeSymbol
Loretta.CodeAnalysis.ISymbol.DeclaredAccessibility.get -> Loretta.CodeAnalysis.Accessibility
Loretta.CodeAnalysis.ISymbol.DeclaringSyntaxReferences.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SyntaxReference!>
Loretta.CodeAnalysis.ISymbol.Equals(Loretta.CodeAnalysis.ISymbol? other, Loretta.CodeAnalysis.SymbolEqualityComparer! equalityComparer) -> bool
Loretta.CodeAnalysis.ISymbol.GetAttributes() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.AttributeData!>
Loretta.CodeAnalysis.ISymbol.GetDocumentationCommentId() -> string?
Loretta.CodeAnalysis.ISymbol.GetDocumentationCommentXml(System.Globalization.CultureInfo? preferredCulture = null, bool expandIncludes = false, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> string?
Loretta.CodeAnalysis.ISymbol.HasUnsupportedMetadata.get -> bool
Loretta.CodeAnalysis.ISymbol.IsAbstract.get -> bool
Loretta.CodeAnalysis.ISymbol.IsDefinition.get -> bool
Loretta.CodeAnalysis.ISymbol.IsExtern.get -> bool
Loretta.CodeAnalysis.ISymbol.IsImplicitlyDeclared.get -> bool
Loretta.CodeAnalysis.ISymbol.IsOverride.get -> bool
Loretta.CodeAnalysis.ISymbol.IsSealed.get -> bool
Loretta.CodeAnalysis.ISymbol.IsStatic.get -> bool
Loretta.CodeAnalysis.ISymbol.IsVirtual.get -> bool
Loretta.CodeAnalysis.ISymbol.Kind.get -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.ISymbol.Language.get -> string!
Loretta.CodeAnalysis.ISymbol.Locations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Location!>
Loretta.CodeAnalysis.ISymbol.MetadataName.get -> string!
Loretta.CodeAnalysis.ISymbol.Name.get -> string!
Loretta.CodeAnalysis.ISymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.ISymbol.ToDisplayParts(Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolDisplayPart>
Loretta.CodeAnalysis.ISymbol.ToDisplayString(Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> string!
Loretta.CodeAnalysis.ISymbol.ToMinimalDisplayParts(Loretta.CodeAnalysis.SemanticModel! semanticModel, int position, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolDisplayPart>
Loretta.CodeAnalysis.ISymbol.ToMinimalDisplayString(Loretta.CodeAnalysis.SemanticModel! semanticModel, int position, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> string!
Loretta.CodeAnalysis.ISymbolExtensions
Loretta.CodeAnalysis.ISyntaxReceiver
Loretta.CodeAnalysis.ISyntaxReceiver.OnVisitSyntaxNode(Loretta.CodeAnalysis.SyntaxNode! syntaxNode) -> void
Loretta.CodeAnalysis.ITypeParameterSymbol
Loretta.CodeAnalysis.ITypeParameterSymbol.ConstraintNullableAnnotations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.NullableAnnotation>
Loretta.CodeAnalysis.ITypeParameterSymbol.ConstraintTypes.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!>
Loretta.CodeAnalysis.ITypeParameterSymbol.DeclaringMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.ITypeParameterSymbol.DeclaringType.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.ITypeParameterSymbol.HasConstructorConstraint.get -> bool
Loretta.CodeAnalysis.ITypeParameterSymbol.HasNotNullConstraint.get -> bool
Loretta.CodeAnalysis.ITypeParameterSymbol.HasReferenceTypeConstraint.get -> bool
Loretta.CodeAnalysis.ITypeParameterSymbol.HasUnmanagedTypeConstraint.get -> bool
Loretta.CodeAnalysis.ITypeParameterSymbol.HasValueTypeConstraint.get -> bool
Loretta.CodeAnalysis.ITypeParameterSymbol.Ordinal.get -> int
Loretta.CodeAnalysis.ITypeParameterSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.ITypeParameterSymbol!
Loretta.CodeAnalysis.ITypeParameterSymbol.ReducedFrom.get -> Loretta.CodeAnalysis.ITypeParameterSymbol?
Loretta.CodeAnalysis.ITypeParameterSymbol.ReferenceTypeConstraintNullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.ITypeParameterSymbol.TypeParameterKind.get -> Loretta.CodeAnalysis.TypeParameterKind
Loretta.CodeAnalysis.ITypeParameterSymbol.Variance.get -> Loretta.CodeAnalysis.VarianceKind
Loretta.CodeAnalysis.ITypeSymbol
Loretta.CodeAnalysis.ITypeSymbol.AllInterfaces.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.ITypeSymbol.BaseType.get -> Loretta.CodeAnalysis.INamedTypeSymbol?
Loretta.CodeAnalysis.ITypeSymbol.FindImplementationForInterfaceMember(Loretta.CodeAnalysis.ISymbol! interfaceMember) -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.ITypeSymbol.Interfaces.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.INamedTypeSymbol!>
Loretta.CodeAnalysis.ITypeSymbol.IsAnonymousType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsNativeIntegerType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsReadOnly.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsReferenceType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsRefLikeType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsTupleType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsUnmanagedType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.IsValueType.get -> bool
Loretta.CodeAnalysis.ITypeSymbol.NullableAnnotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.ITypeSymbol.OriginalDefinition.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.ITypeSymbol.SpecialType.get -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.ITypeSymbol.ToDisplayParts(Loretta.CodeAnalysis.NullableFlowState topLevelNullability, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolDisplayPart>
Loretta.CodeAnalysis.ITypeSymbol.ToDisplayString(Loretta.CodeAnalysis.NullableFlowState topLevelNullability, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> string!
Loretta.CodeAnalysis.ITypeSymbol.ToMinimalDisplayParts(Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.NullableFlowState topLevelNullability, int position, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolDisplayPart>
Loretta.CodeAnalysis.ITypeSymbol.ToMinimalDisplayString(Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.NullableFlowState topLevelNullability, int position, Loretta.CodeAnalysis.SymbolDisplayFormat? format = null) -> string!
Loretta.CodeAnalysis.ITypeSymbol.TypeKind.get -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.ITypeSymbol.WithNullableAnnotation(Loretta.CodeAnalysis.NullableAnnotation nullableAnnotation) -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.LanguageNames
Loretta.CodeAnalysis.LineVisibility
Loretta.CodeAnalysis.LineVisibility.BeforeFirstLineDirective = 0 -> Loretta.CodeAnalysis.LineVisibility
Loretta.CodeAnalysis.LineVisibility.Hidden = 1 -> Loretta.CodeAnalysis.LineVisibility
Loretta.CodeAnalysis.LineVisibility.Visible = 2 -> Loretta.CodeAnalysis.LineVisibility
Loretta.CodeAnalysis.LocalizableResourceString
Loretta.CodeAnalysis.LocalizableResourceString.LocalizableResourceString(string! nameOfLocalizableResource, System.Resources.ResourceManager! resourceManager, System.Type! resourceSource) -> void
Loretta.CodeAnalysis.LocalizableResourceString.LocalizableResourceString(string! nameOfLocalizableResource, System.Resources.ResourceManager! resourceManager, System.Type! resourceSource, params string![]! formatArguments) -> void
Loretta.CodeAnalysis.LocalizableString
Loretta.CodeAnalysis.LocalizableString.Equals(Loretta.CodeAnalysis.LocalizableString? other) -> bool
Loretta.CodeAnalysis.LocalizableString.LocalizableString() -> void
Loretta.CodeAnalysis.LocalizableString.OnException -> System.EventHandler<System.Exception!>?
Loretta.CodeAnalysis.LocalizableString.ToString(System.IFormatProvider? formatProvider) -> string!
Loretta.CodeAnalysis.Location
Loretta.CodeAnalysis.Location.IsInMetadata.get -> bool
Loretta.CodeAnalysis.Location.IsInSource.get -> bool
Loretta.CodeAnalysis.Location.MetadataModule.get -> Loretta.CodeAnalysis.IModuleSymbol?
Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.LocationKind.ExternalFile = 4 -> Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.LocationKind.MetadataFile = 2 -> Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.LocationKind.None = 0 -> Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.LocationKind.SourceFile = 1 -> Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.LocationKind.XmlFile = 3 -> Loretta.CodeAnalysis.LocationKind
Loretta.CodeAnalysis.Metadata
Loretta.CodeAnalysis.Metadata.Copy() -> Loretta.CodeAnalysis.Metadata!
Loretta.CodeAnalysis.Metadata.Id.get -> Loretta.CodeAnalysis.MetadataId!
Loretta.CodeAnalysis.MetadataId
Loretta.CodeAnalysis.MetadataImageKind
Loretta.CodeAnalysis.MetadataImageKind.Assembly = 0 -> Loretta.CodeAnalysis.MetadataImageKind
Loretta.CodeAnalysis.MetadataImageKind.Module = 1 -> Loretta.CodeAnalysis.MetadataImageKind
Loretta.CodeAnalysis.MetadataImportOptions
Loretta.CodeAnalysis.MetadataImportOptions.All = 2 -> Loretta.CodeAnalysis.MetadataImportOptions
Loretta.CodeAnalysis.MetadataImportOptions.Internal = 1 -> Loretta.CodeAnalysis.MetadataImportOptions
Loretta.CodeAnalysis.MetadataImportOptions.Public = 0 -> Loretta.CodeAnalysis.MetadataImportOptions
Loretta.CodeAnalysis.MetadataReference
Loretta.CodeAnalysis.MetadataReference.MetadataReference(Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> void
Loretta.CodeAnalysis.MetadataReference.Properties.get -> Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Generic.IEnumerable<string!>! aliases) -> Loretta.CodeAnalysis.MetadataReference!
Loretta.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Immutable.ImmutableArray<string!> aliases) -> Loretta.CodeAnalysis.MetadataReference!
Loretta.CodeAnalysis.MetadataReference.WithEmbedInteropTypes(bool value) -> Loretta.CodeAnalysis.MetadataReference!
Loretta.CodeAnalysis.MetadataReference.WithProperties(Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> Loretta.CodeAnalysis.MetadataReference!
Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.MetadataReferenceProperties.Aliases.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.MetadataReferenceProperties.EmbedInteropTypes.get -> bool
Loretta.CodeAnalysis.MetadataReferenceProperties.Equals(Loretta.CodeAnalysis.MetadataReferenceProperties other) -> bool
Loretta.CodeAnalysis.MetadataReferenceProperties.Kind.get -> Loretta.CodeAnalysis.MetadataImageKind
Loretta.CodeAnalysis.MetadataReferenceProperties.MetadataReferenceProperties() -> void
Loretta.CodeAnalysis.MetadataReferenceProperties.MetadataReferenceProperties(Loretta.CodeAnalysis.MetadataImageKind kind = Loretta.CodeAnalysis.MetadataImageKind.Assembly, System.Collections.Immutable.ImmutableArray<string!> aliases = default(System.Collections.Immutable.ImmutableArray<string!>), bool embedInteropTypes = false) -> void
Loretta.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Generic.IEnumerable<string!>! aliases) -> Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Immutable.ImmutableArray<string!> aliases) -> Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.MetadataReferenceProperties.WithEmbedInteropTypes(bool embedInteropTypes) -> Loretta.CodeAnalysis.MetadataReferenceProperties
Loretta.CodeAnalysis.MetadataReferenceResolver
Loretta.CodeAnalysis.MetadataReferenceResolver.MetadataReferenceResolver() -> void
Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.AnonymousFunction = 0 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.BuiltinOperator = 15 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.Constructor = 1 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.Conversion = 2 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.DeclareMethod = 16 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.DelegateInvoke = 3 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.Destructor = 4 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.EventAdd = 5 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.EventRaise = 6 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.EventRemove = 7 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.ExplicitInterfaceImplementation = 8 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.FunctionPointerSignature = 18 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.LambdaMethod = 0 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.LocalFunction = 17 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.Ordinary = 10 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.PropertyGet = 11 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.PropertySet = 12 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.ReducedExtension = 13 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.SharedConstructor = 14 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.StaticConstructor = 14 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.MethodKind.UserDefinedOperator = 9 -> Loretta.CodeAnalysis.MethodKind
Loretta.CodeAnalysis.ModelExtensions
Loretta.CodeAnalysis.ModuleMetadata
Loretta.CodeAnalysis.ModuleMetadata.GetMetadataReader() -> System.Reflection.Metadata.MetadataReader!
Loretta.CodeAnalysis.ModuleMetadata.GetModuleNames() -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.ModuleMetadata.GetModuleVersionId() -> System.Guid
Loretta.CodeAnalysis.ModuleMetadata.GetReference(Loretta.CodeAnalysis.DocumentationProvider? documentation = null, string? filePath = null, string? display = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.ModuleMetadata.IsDisposed.get -> bool
Loretta.CodeAnalysis.ModuleMetadata.Name.get -> string!
Loretta.CodeAnalysis.NamespaceKind
Loretta.CodeAnalysis.NamespaceKind.Assembly = 2 -> Loretta.CodeAnalysis.NamespaceKind
Loretta.CodeAnalysis.NamespaceKind.Compilation = 3 -> Loretta.CodeAnalysis.NamespaceKind
Loretta.CodeAnalysis.NamespaceKind.Module = 1 -> Loretta.CodeAnalysis.NamespaceKind
Loretta.CodeAnalysis.NullabilityInfo
Loretta.CodeAnalysis.NullabilityInfo.Annotation.get -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.NullabilityInfo.Equals(Loretta.CodeAnalysis.NullabilityInfo other) -> bool
Loretta.CodeAnalysis.NullabilityInfo.FlowState.get -> Loretta.CodeAnalysis.NullableFlowState
Loretta.CodeAnalysis.NullabilityInfo.NullabilityInfo() -> void
Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.NullableAnnotation.Annotated = 2 -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.NullableAnnotation.None = 0 -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.NullableAnnotation.NotAnnotated = 1 -> Loretta.CodeAnalysis.NullableAnnotation
Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.AnnotationsContextInherited = 8 -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.AnnotationsEnabled = 2 -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.ContextInherited = Loretta.CodeAnalysis.NullableContext.WarningsContextInherited | Loretta.CodeAnalysis.NullableContext.AnnotationsContextInherited -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.Disabled = 0 -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.Enabled = Loretta.CodeAnalysis.NullableContext.WarningsEnabled | Loretta.CodeAnalysis.NullableContext.AnnotationsEnabled -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.WarningsContextInherited = 4 -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContext.WarningsEnabled = 1 -> Loretta.CodeAnalysis.NullableContext
Loretta.CodeAnalysis.NullableContextExtensions
Loretta.CodeAnalysis.NullableContextOptions
Loretta.CodeAnalysis.NullableContextOptions.Annotations = 2 -> Loretta.CodeAnalysis.NullableContextOptions
Loretta.CodeAnalysis.NullableContextOptions.Disable = 0 -> Loretta.CodeAnalysis.NullableContextOptions
Loretta.CodeAnalysis.NullableContextOptions.Enable = Loretta.CodeAnalysis.NullableContextOptions.Warnings | Loretta.CodeAnalysis.NullableContextOptions.Annotations -> Loretta.CodeAnalysis.NullableContextOptions
Loretta.CodeAnalysis.NullableContextOptions.Warnings = 1 -> Loretta.CodeAnalysis.NullableContextOptions
Loretta.CodeAnalysis.NullableContextOptionsExtensions
Loretta.CodeAnalysis.NullableFlowState
Loretta.CodeAnalysis.NullableFlowState.MaybeNull = 2 -> Loretta.CodeAnalysis.NullableFlowState
Loretta.CodeAnalysis.NullableFlowState.None = 0 -> Loretta.CodeAnalysis.NullableFlowState
Loretta.CodeAnalysis.NullableFlowState.NotNull = 1 -> Loretta.CodeAnalysis.NullableFlowState
Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.AddressOf = 64 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.AnonymousFunction = 35 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.AnonymousObjectCreation = 49 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Argument = 79 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ArrayCreation = 38 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ArrayElementReference = 23 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ArrayInitializer = 76 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Await = 41 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Binary = 32 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.BinaryOperator = 32 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.BinaryPattern = 110 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Block = 2 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Branch = 7 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CaseClause = 82 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CatchClause = 80 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CaughtException = 94 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Coalesce = 34 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CoalesceAssignment = 97 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CollectionElementInitializer = 52 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.CompoundAssignment = 43 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Conditional = 33 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ConditionalAccess = 46 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ConditionalAccessInstance = 47 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ConstantPattern = 85 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ConstructorBody = 89 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ConstructorBodyOperation = 89 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Conversion = 21 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DeclarationExpression = 70 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DeclarationPattern = 86 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DeconstructionAssignment = 69 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Decrement = 68 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DefaultValue = 61 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DelegateCreation = 60 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Discard = 90 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DiscardPattern = 104 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DynamicIndexerAccess = 58 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DynamicInvocation = 57 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DynamicMemberReference = 56 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.DynamicObjectCreation = 55 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Empty = 8 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.End = 18 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.EventAssignment = 45 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.EventReference = 30 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ExpressionStatement = 15 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.FieldInitializer = 72 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.FieldReference = 26 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.FlowAnonymousFunction = 96 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.FlowCapture = 91 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.FlowCaptureReference = 92 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Increment = 66 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.InstanceReference = 39 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.InterpolatedString = 48 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.InterpolatedStringText = 83 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Interpolation = 84 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Invalid = 1 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Invocation = 22 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.IsNull = 93 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.IsPattern = 65 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.IsType = 40 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Labeled = 6 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Literal = 20 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.LocalFunction = 16 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.LocalReference = 24 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Lock = 11 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Loop = 5 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.MemberInitializer = 51 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.MethodBody = 88 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.MethodBodyOperation = 88 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.MethodReference = 27 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.NameOf = 53 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.NegatedPattern = 109 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.None = 0 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ObjectCreation = 36 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ObjectOrCollectionInitializer = 50 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.OmittedArgument = 71 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ParameterInitializer = 75 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ParameterReference = 25 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Parenthesized = 44 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.PropertyInitializer = 74 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.PropertyReference = 28 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.PropertySubpattern = 107 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.RaiseEvent = 19 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Range = 99 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.RecursivePattern = 103 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ReDim = 101 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.ReDimClause = 102 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.RelationalPattern = 112 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Return = 9 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.SimpleAssignment = 42 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.SizeOf = 63 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.StaticLocalInitializationSemaphore = 95 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Stop = 17 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Switch = 4 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.SwitchCase = 81 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.SwitchExpression = 105 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.SwitchExpressionArm = 106 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Throw = 67 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TranslatedQuery = 59 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Try = 12 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Tuple = 54 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TupleBinary = 87 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TupleBinaryOperator = 87 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TypeOf = 62 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TypeParameterObjectCreation = 37 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.TypePattern = 111 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Unary = 31 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.UnaryOperator = 31 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.Using = 13 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.UsingDeclaration = 108 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.VariableDeclaration = 78 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.VariableDeclarationGroup = 3 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.VariableDeclarator = 77 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.VariableInitializer = 73 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.With = 113 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.YieldBreak = 10 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.OperationKind.YieldReturn = 14 -> Loretta.CodeAnalysis.OperationKind
Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.ArgumentKind.DefaultValue = 3 -> Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.ArgumentKind.Explicit = 1 -> Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.ArgumentKind.None = 0 -> Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.ArgumentKind.ParamArray = 2 -> Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Add = 1 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.And = 10 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Concatenate = 15 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.ConditionalAnd = 13 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.ConditionalOr = 14 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Divide = 4 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Equals = 16 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.ExclusiveOr = 12 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.GreaterThan = 23 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.GreaterThanOrEqual = 22 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.IntegerDivide = 5 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.LeftShift = 8 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.LessThan = 20 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.LessThanOrEqual = 21 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Like = 24 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Multiply = 3 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.None = 0 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.NotEquals = 18 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.ObjectValueEquals = 17 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.ObjectValueNotEquals = 19 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Or = 11 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Power = 7 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Remainder = 6 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.RightShift = 9 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BinaryOperatorKind.Subtract = 2 -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.BranchKind.Break = 2 -> Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.BranchKind.Continue = 1 -> Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.BranchKind.GoTo = 3 -> Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.BranchKind.None = 0 -> Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.Default = 4 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.None = 0 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.Pattern = 5 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.Range = 3 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.Relational = 2 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CaseKind.SingleValue = 1 -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.CommonConversion.CommonConversion() -> void
Loretta.CodeAnalysis.Operations.CommonConversion.Exists.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsIdentity.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsImplicit.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsNullable.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsNumeric.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsReference.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.IsUserDefined.get -> bool
Loretta.CodeAnalysis.Operations.CommonConversion.MethodSymbol.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IAddressOfOperation
Loretta.CodeAnalysis.Operations.IAddressOfOperation.Reference.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IAnonymousFunctionOperation
Loretta.CodeAnalysis.Operations.IAnonymousFunctionOperation.Body.get -> Loretta.CodeAnalysis.Operations.IBlockOperation!
Loretta.CodeAnalysis.Operations.IAnonymousFunctionOperation.Symbol.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.Operations.IAnonymousObjectCreationOperation
Loretta.CodeAnalysis.Operations.IAnonymousObjectCreationOperation.Initializers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IArgumentOperation
Loretta.CodeAnalysis.Operations.IArgumentOperation.ArgumentKind.get -> Loretta.CodeAnalysis.Operations.ArgumentKind
Loretta.CodeAnalysis.Operations.IArgumentOperation.InConversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.IArgumentOperation.OutConversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.IArgumentOperation.Parameter.get -> Loretta.CodeAnalysis.IParameterSymbol?
Loretta.CodeAnalysis.Operations.IArgumentOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IArrayCreationOperation
Loretta.CodeAnalysis.Operations.IArrayCreationOperation.DimensionSizes.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IArrayCreationOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IArrayInitializerOperation?
Loretta.CodeAnalysis.Operations.IArrayElementReferenceOperation
Loretta.CodeAnalysis.Operations.IArrayElementReferenceOperation.ArrayReference.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IArrayElementReferenceOperation.Indices.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IArrayInitializerOperation
Loretta.CodeAnalysis.Operations.IArrayInitializerOperation.ElementValues.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IAssignmentOperation
Loretta.CodeAnalysis.Operations.IAssignmentOperation.Target.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IAssignmentOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IAwaitOperation
Loretta.CodeAnalysis.Operations.IAwaitOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IBinaryOperation
Loretta.CodeAnalysis.Operations.IBinaryOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.IBinaryOperation.IsCompareText.get -> bool
Loretta.CodeAnalysis.Operations.IBinaryOperation.IsLifted.get -> bool
Loretta.CodeAnalysis.Operations.IBinaryOperation.LeftOperand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IBinaryOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.IBinaryOperation.OperatorMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IBinaryOperation.RightOperand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IBinaryPatternOperation
Loretta.CodeAnalysis.Operations.IBinaryPatternOperation.LeftPattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.IBinaryPatternOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.IBinaryPatternOperation.RightPattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.IBlockOperation
Loretta.CodeAnalysis.Operations.IBlockOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.IBlockOperation.Operations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IBranchOperation
Loretta.CodeAnalysis.Operations.IBranchOperation.BranchKind.get -> Loretta.CodeAnalysis.Operations.BranchKind
Loretta.CodeAnalysis.Operations.IBranchOperation.Target.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.ICaseClauseOperation
Loretta.CodeAnalysis.Operations.ICaseClauseOperation.CaseKind.get -> Loretta.CodeAnalysis.Operations.CaseKind
Loretta.CodeAnalysis.Operations.ICaseClauseOperation.Label.get -> Loretta.CodeAnalysis.ILabelSymbol?
Loretta.CodeAnalysis.Operations.ICatchClauseOperation
Loretta.CodeAnalysis.Operations.ICatchClauseOperation.ExceptionDeclarationOrExpression.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ICatchClauseOperation.ExceptionType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.ICatchClauseOperation.Filter.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ICatchClauseOperation.Handler.get -> Loretta.CodeAnalysis.Operations.IBlockOperation!
Loretta.CodeAnalysis.Operations.ICatchClauseOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ICoalesceAssignmentOperation
Loretta.CodeAnalysis.Operations.ICoalesceOperation
Loretta.CodeAnalysis.Operations.ICoalesceOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ICoalesceOperation.ValueConversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.ICoalesceOperation.WhenNull.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation
Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation.AddMethod.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation.IsDynamic.get -> bool
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.InConversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.IsLifted.get -> bool
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.OperatorMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation.OutConversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.IConditionalAccessInstanceOperation
Loretta.CodeAnalysis.Operations.IConditionalAccessOperation
Loretta.CodeAnalysis.Operations.IConditionalAccessOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConditionalAccessOperation.WhenNotNull.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConditionalOperation
Loretta.CodeAnalysis.Operations.IConditionalOperation.Condition.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConditionalOperation.IsRef.get -> bool
Loretta.CodeAnalysis.Operations.IConditionalOperation.WhenFalse.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IConditionalOperation.WhenTrue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConstantPatternOperation
Loretta.CodeAnalysis.Operations.IConstantPatternOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConstructorBodyOperation
Loretta.CodeAnalysis.Operations.IConstructorBodyOperation.Initializer.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IConstructorBodyOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.IConversionOperation
Loretta.CodeAnalysis.Operations.IConversionOperation.Conversion.get -> Loretta.CodeAnalysis.Operations.CommonConversion
Loretta.CodeAnalysis.Operations.IConversionOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.IConversionOperation.IsTryCast.get -> bool
Loretta.CodeAnalysis.Operations.IConversionOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IConversionOperation.OperatorMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IDeclarationExpressionOperation
Loretta.CodeAnalysis.Operations.IDeclarationExpressionOperation.Expression.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation
Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation.DeclaredSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation.MatchedType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation.MatchesNull.get -> bool
Loretta.CodeAnalysis.Operations.IDeconstructionAssignmentOperation
Loretta.CodeAnalysis.Operations.IDefaultCaseClauseOperation
Loretta.CodeAnalysis.Operations.IDefaultValueOperation
Loretta.CodeAnalysis.Operations.IDelegateCreationOperation
Loretta.CodeAnalysis.Operations.IDelegateCreationOperation.Target.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IDiscardOperation
Loretta.CodeAnalysis.Operations.IDiscardOperation.DiscardSymbol.get -> Loretta.CodeAnalysis.IDiscardSymbol!
Loretta.CodeAnalysis.Operations.IDiscardPatternOperation
Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation
Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation
Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.ContainingType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.Instance.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.MemberName.get -> string!
Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.TypeArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ITypeSymbol!>
Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation
Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
Loretta.CodeAnalysis.Operations.IEmptyOperation
Loretta.CodeAnalysis.Operations.IEndOperation
Loretta.CodeAnalysis.Operations.IEventAssignmentOperation
Loretta.CodeAnalysis.Operations.IEventAssignmentOperation.Adds.get -> bool
Loretta.CodeAnalysis.Operations.IEventAssignmentOperation.EventReference.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IEventAssignmentOperation.HandlerValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IEventReferenceOperation
Loretta.CodeAnalysis.Operations.IEventReferenceOperation.Event.get -> Loretta.CodeAnalysis.IEventSymbol!
Loretta.CodeAnalysis.Operations.IExpressionStatementOperation
Loretta.CodeAnalysis.Operations.IExpressionStatementOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IFieldInitializerOperation
Loretta.CodeAnalysis.Operations.IFieldInitializerOperation.InitializedFields.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IFieldSymbol!>
Loretta.CodeAnalysis.Operations.IFieldReferenceOperation
Loretta.CodeAnalysis.Operations.IFieldReferenceOperation.Field.get -> Loretta.CodeAnalysis.IFieldSymbol!
Loretta.CodeAnalysis.Operations.IFieldReferenceOperation.IsDeclaration.get -> bool
Loretta.CodeAnalysis.Operations.IForEachLoopOperation
Loretta.CodeAnalysis.Operations.IForEachLoopOperation.Collection.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IForEachLoopOperation.IsAsynchronous.get -> bool
Loretta.CodeAnalysis.Operations.IForEachLoopOperation.LoopControlVariable.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IForEachLoopOperation.NextVariables.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IForLoopOperation
Loretta.CodeAnalysis.Operations.IForLoopOperation.AtLoopBottom.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IForLoopOperation.Before.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IForLoopOperation.Condition.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IForLoopOperation.ConditionLocals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.IForToLoopOperation
Loretta.CodeAnalysis.Operations.IForToLoopOperation.InitialValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IForToLoopOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.IForToLoopOperation.LimitValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IForToLoopOperation.LoopControlVariable.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IForToLoopOperation.NextVariables.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IForToLoopOperation.StepValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsLifted.get -> bool
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsPostfix.get -> bool
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation.OperatorMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation.Target.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IInstanceReferenceOperation
Loretta.CodeAnalysis.Operations.IInstanceReferenceOperation.ReferenceKind.get -> Loretta.CodeAnalysis.Operations.InstanceReferenceKind
Loretta.CodeAnalysis.Operations.IInterpolatedStringContentOperation
Loretta.CodeAnalysis.Operations.IInterpolatedStringOperation
Loretta.CodeAnalysis.Operations.IInterpolatedStringOperation.Parts.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IInterpolatedStringContentOperation!>
Loretta.CodeAnalysis.Operations.IInterpolatedStringTextOperation
Loretta.CodeAnalysis.Operations.IInterpolatedStringTextOperation.Text.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IInterpolationOperation
Loretta.CodeAnalysis.Operations.IInterpolationOperation.Alignment.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IInterpolationOperation.Expression.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IInterpolationOperation.FormatString.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IInvalidOperation
Loretta.CodeAnalysis.Operations.IInvocationOperation
Loretta.CodeAnalysis.Operations.IInvocationOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IArgumentOperation!>
Loretta.CodeAnalysis.Operations.IInvocationOperation.Instance.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IInvocationOperation.IsVirtual.get -> bool
Loretta.CodeAnalysis.Operations.IInvocationOperation.TargetMethod.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.Operations.IIsPatternOperation
Loretta.CodeAnalysis.Operations.IIsPatternOperation.Pattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.IIsPatternOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IIsTypeOperation
Loretta.CodeAnalysis.Operations.IIsTypeOperation.IsNegated.get -> bool
Loretta.CodeAnalysis.Operations.IIsTypeOperation.TypeOperand.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IIsTypeOperation.ValueOperand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ILabeledOperation
Loretta.CodeAnalysis.Operations.ILabeledOperation.Label.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.ILabeledOperation.Operation.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ILiteralOperation
Loretta.CodeAnalysis.Operations.ILocalFunctionOperation
Loretta.CodeAnalysis.Operations.ILocalFunctionOperation.Body.get -> Loretta.CodeAnalysis.Operations.IBlockOperation?
Loretta.CodeAnalysis.Operations.ILocalFunctionOperation.IgnoredBody.get -> Loretta.CodeAnalysis.Operations.IBlockOperation?
Loretta.CodeAnalysis.Operations.ILocalFunctionOperation.Symbol.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.Operations.ILocalReferenceOperation
Loretta.CodeAnalysis.Operations.ILocalReferenceOperation.IsDeclaration.get -> bool
Loretta.CodeAnalysis.Operations.ILocalReferenceOperation.Local.get -> Loretta.CodeAnalysis.ILocalSymbol!
Loretta.CodeAnalysis.Operations.ILockOperation
Loretta.CodeAnalysis.Operations.ILockOperation.Body.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ILockOperation.LockedValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ILoopOperation
Loretta.CodeAnalysis.Operations.ILoopOperation.Body.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ILoopOperation.ContinueLabel.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.ILoopOperation.ExitLabel.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.ILoopOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ILoopOperation.LoopKind.get -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.IMemberInitializerOperation
Loretta.CodeAnalysis.Operations.IMemberInitializerOperation.InitializedMember.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IMemberInitializerOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation!
Loretta.CodeAnalysis.Operations.IMemberReferenceOperation
Loretta.CodeAnalysis.Operations.IMemberReferenceOperation.Instance.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IMemberReferenceOperation.Member.get -> Loretta.CodeAnalysis.ISymbol!
Loretta.CodeAnalysis.Operations.IMethodBodyBaseOperation
Loretta.CodeAnalysis.Operations.IMethodBodyBaseOperation.BlockBody.get -> Loretta.CodeAnalysis.Operations.IBlockOperation?
Loretta.CodeAnalysis.Operations.IMethodBodyBaseOperation.ExpressionBody.get -> Loretta.CodeAnalysis.Operations.IBlockOperation?
Loretta.CodeAnalysis.Operations.IMethodBodyOperation
Loretta.CodeAnalysis.Operations.IMethodReferenceOperation
Loretta.CodeAnalysis.Operations.IMethodReferenceOperation.IsVirtual.get -> bool
Loretta.CodeAnalysis.Operations.IMethodReferenceOperation.Method.get -> Loretta.CodeAnalysis.IMethodSymbol!
Loretta.CodeAnalysis.Operations.INameOfOperation
Loretta.CodeAnalysis.Operations.INameOfOperation.Argument.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.INegatedPatternOperation
Loretta.CodeAnalysis.Operations.INegatedPatternOperation.Pattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.InstanceReferenceKind
Loretta.CodeAnalysis.Operations.InstanceReferenceKind.ContainingTypeInstance = 0 -> Loretta.CodeAnalysis.Operations.InstanceReferenceKind
Loretta.CodeAnalysis.Operations.InstanceReferenceKind.ImplicitReceiver = 1 -> Loretta.CodeAnalysis.Operations.InstanceReferenceKind
Loretta.CodeAnalysis.Operations.InstanceReferenceKind.PatternInput = 2 -> Loretta.CodeAnalysis.Operations.InstanceReferenceKind
Loretta.CodeAnalysis.Operations.IObjectCreationOperation
Loretta.CodeAnalysis.Operations.IObjectCreationOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IArgumentOperation!>
Loretta.CodeAnalysis.Operations.IObjectCreationOperation.Constructor.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IObjectCreationOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation.Initializers.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IOmittedArgumentOperation
Loretta.CodeAnalysis.Operations.IParameterInitializerOperation
Loretta.CodeAnalysis.Operations.IParameterInitializerOperation.Parameter.get -> Loretta.CodeAnalysis.IParameterSymbol!
Loretta.CodeAnalysis.Operations.IParameterReferenceOperation
Loretta.CodeAnalysis.Operations.IParameterReferenceOperation.Parameter.get -> Loretta.CodeAnalysis.IParameterSymbol!
Loretta.CodeAnalysis.Operations.IParenthesizedOperation
Loretta.CodeAnalysis.Operations.IParenthesizedOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation
Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation.Guard.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation.Label.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation.Pattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.IPatternOperation
Loretta.CodeAnalysis.Operations.IPatternOperation.InputType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IPatternOperation.NarrowedType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IPropertyInitializerOperation
Loretta.CodeAnalysis.Operations.IPropertyInitializerOperation.InitializedProperties.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IPropertySymbol!>
Loretta.CodeAnalysis.Operations.IPropertyReferenceOperation
Loretta.CodeAnalysis.Operations.IPropertyReferenceOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IArgumentOperation!>
Loretta.CodeAnalysis.Operations.IPropertyReferenceOperation.Property.get -> Loretta.CodeAnalysis.IPropertySymbol!
Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation
Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation.Member.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation.Pattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.IRaiseEventOperation
Loretta.CodeAnalysis.Operations.IRaiseEventOperation.Arguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IArgumentOperation!>
Loretta.CodeAnalysis.Operations.IRaiseEventOperation.EventReference.get -> Loretta.CodeAnalysis.Operations.IEventReferenceOperation!
Loretta.CodeAnalysis.Operations.IRangeCaseClauseOperation
Loretta.CodeAnalysis.Operations.IRangeCaseClauseOperation.MaximumValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IRangeCaseClauseOperation.MinimumValue.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IRangeOperation
Loretta.CodeAnalysis.Operations.IRangeOperation.IsLifted.get -> bool
Loretta.CodeAnalysis.Operations.IRangeOperation.LeftOperand.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IRangeOperation.Method.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IRangeOperation.RightOperand.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation.DeclaredSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation.DeconstructionSubpatterns.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IPatternOperation!>
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation.DeconstructSymbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation.MatchedType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IRecursivePatternOperation.PropertySubpatterns.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation!>
Loretta.CodeAnalysis.Operations.IReDimClauseOperation
Loretta.CodeAnalysis.Operations.IReDimClauseOperation.DimensionSizes.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IReDimClauseOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IReDimOperation
Loretta.CodeAnalysis.Operations.IReDimOperation.Clauses.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IReDimClauseOperation!>
Loretta.CodeAnalysis.Operations.IReDimOperation.Preserve.get -> bool
Loretta.CodeAnalysis.Operations.IRelationalCaseClauseOperation
Loretta.CodeAnalysis.Operations.IRelationalCaseClauseOperation.Relation.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.IRelationalCaseClauseOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IRelationalPatternOperation
Loretta.CodeAnalysis.Operations.IRelationalPatternOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.IRelationalPatternOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IReturnOperation
Loretta.CodeAnalysis.Operations.IReturnOperation.ReturnedValue.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ISimpleAssignmentOperation
Loretta.CodeAnalysis.Operations.ISimpleAssignmentOperation.IsRef.get -> bool
Loretta.CodeAnalysis.Operations.ISingleValueCaseClauseOperation
Loretta.CodeAnalysis.Operations.ISingleValueCaseClauseOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ISizeOfOperation
Loretta.CodeAnalysis.Operations.ISizeOfOperation.TypeOperand.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IStopOperation
Loretta.CodeAnalysis.Operations.ISwitchCaseOperation
Loretta.CodeAnalysis.Operations.ISwitchCaseOperation.Body.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.ISwitchCaseOperation.Clauses.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.ICaseClauseOperation!>
Loretta.CodeAnalysis.Operations.ISwitchCaseOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation
Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation.Guard.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation.Pattern.get -> Loretta.CodeAnalysis.Operations.IPatternOperation!
Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ISwitchExpressionOperation
Loretta.CodeAnalysis.Operations.ISwitchExpressionOperation.Arms.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation!>
Loretta.CodeAnalysis.Operations.ISwitchExpressionOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ISwitchOperation
Loretta.CodeAnalysis.Operations.ISwitchOperation.Cases.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.ISwitchCaseOperation!>
Loretta.CodeAnalysis.Operations.ISwitchOperation.ExitLabel.get -> Loretta.CodeAnalysis.ILabelSymbol!
Loretta.CodeAnalysis.Operations.ISwitchOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ISwitchOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ISymbolInitializerOperation
Loretta.CodeAnalysis.Operations.ISymbolInitializerOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.ISymbolInitializerOperation.Value.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IThrowOperation
Loretta.CodeAnalysis.Operations.IThrowOperation.Exception.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.ITranslatedQueryOperation
Loretta.CodeAnalysis.Operations.ITranslatedQueryOperation.Operation.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ITryOperation
Loretta.CodeAnalysis.Operations.ITryOperation.Body.get -> Loretta.CodeAnalysis.Operations.IBlockOperation!
Loretta.CodeAnalysis.Operations.ITryOperation.Catches.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.ICatchClauseOperation!>
Loretta.CodeAnalysis.Operations.ITryOperation.ExitLabel.get -> Loretta.CodeAnalysis.ILabelSymbol?
Loretta.CodeAnalysis.Operations.ITryOperation.Finally.get -> Loretta.CodeAnalysis.Operations.IBlockOperation?
Loretta.CodeAnalysis.Operations.ITupleBinaryOperation
Loretta.CodeAnalysis.Operations.ITupleBinaryOperation.LeftOperand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ITupleBinaryOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.BinaryOperatorKind
Loretta.CodeAnalysis.Operations.ITupleBinaryOperation.RightOperand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.ITupleOperation
Loretta.CodeAnalysis.Operations.ITupleOperation.Elements.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.ITupleOperation.NaturalType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.Operations.ITypeOfOperation
Loretta.CodeAnalysis.Operations.ITypeOfOperation.TypeOperand.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation
Loretta.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
Loretta.CodeAnalysis.Operations.ITypePatternOperation
Loretta.CodeAnalysis.Operations.ITypePatternOperation.MatchedType.get -> Loretta.CodeAnalysis.ITypeSymbol!
Loretta.CodeAnalysis.Operations.IUnaryOperation
Loretta.CodeAnalysis.Operations.IUnaryOperation.IsChecked.get -> bool
Loretta.CodeAnalysis.Operations.IUnaryOperation.IsLifted.get -> bool
Loretta.CodeAnalysis.Operations.IUnaryOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IUnaryOperation.OperatorKind.get -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.IUnaryOperation.OperatorMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IUsingDeclarationOperation
Loretta.CodeAnalysis.Operations.IUsingDeclarationOperation.DeclarationGroup.get -> Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation!
Loretta.CodeAnalysis.Operations.IUsingDeclarationOperation.IsAsynchronous.get -> bool
Loretta.CodeAnalysis.Operations.IUsingOperation
Loretta.CodeAnalysis.Operations.IUsingOperation.Body.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IUsingOperation.IsAsynchronous.get -> bool
Loretta.CodeAnalysis.Operations.IUsingOperation.Locals.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
Loretta.CodeAnalysis.Operations.IUsingOperation.Resources.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation.Declarations.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation!>
Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation
Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation.Declarators.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation!>
Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation.IgnoredDimensions.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IVariableInitializerOperation?
Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation
Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation.IgnoredArguments.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.IOperation!>
Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IVariableInitializerOperation?
Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation.Symbol.get -> Loretta.CodeAnalysis.ILocalSymbol!
Loretta.CodeAnalysis.Operations.IVariableInitializerOperation
Loretta.CodeAnalysis.Operations.IWhileLoopOperation
Loretta.CodeAnalysis.Operations.IWhileLoopOperation.Condition.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IWhileLoopOperation.ConditionIsTop.get -> bool
Loretta.CodeAnalysis.Operations.IWhileLoopOperation.ConditionIsUntil.get -> bool
Loretta.CodeAnalysis.Operations.IWhileLoopOperation.IgnoredCondition.get -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.Operations.IWithOperation
Loretta.CodeAnalysis.Operations.IWithOperation.CloneMethod.get -> Loretta.CodeAnalysis.IMethodSymbol?
Loretta.CodeAnalysis.Operations.IWithOperation.Initializer.get -> Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation!
Loretta.CodeAnalysis.Operations.IWithOperation.Operand.get -> Loretta.CodeAnalysis.IOperation!
Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.LoopKind.For = 2 -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.LoopKind.ForEach = 4 -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.LoopKind.ForTo = 3 -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.LoopKind.None = 0 -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.LoopKind.While = 1 -> Loretta.CodeAnalysis.Operations.LoopKind
Loretta.CodeAnalysis.Operations.OperationExtensions
Loretta.CodeAnalysis.Operations.OperationVisitor
Loretta.CodeAnalysis.Operations.OperationVisitor.OperationVisitor() -> void
Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.OperationVisitor() -> void
Loretta.CodeAnalysis.Operations.OperationWalker
Loretta.CodeAnalysis.Operations.OperationWalker.OperationWalker() -> void
Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.BitwiseNegation = 1 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.False = 6 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.Hat = 7 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.Minus = 4 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.None = 0 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.Not = 2 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.Plus = 3 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.Operations.UnaryOperatorKind.True = 5 -> Loretta.CodeAnalysis.Operations.UnaryOperatorKind
Loretta.CodeAnalysis.OptimizationLevel
Loretta.CodeAnalysis.OptimizationLevel.Debug = 0 -> Loretta.CodeAnalysis.OptimizationLevel
Loretta.CodeAnalysis.OptimizationLevel.Release = 1 -> Loretta.CodeAnalysis.OptimizationLevel
Loretta.CodeAnalysis.Optional<T>
Loretta.CodeAnalysis.Optional<T>.HasValue.get -> bool
Loretta.CodeAnalysis.Optional<T>.Optional() -> void
Loretta.CodeAnalysis.Optional<T>.Optional(T value) -> void
Loretta.CodeAnalysis.Optional<T>.Value.get -> T
Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.ConsoleApplication = 0 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary = 2 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.NetModule = 3 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.WindowsApplication = 1 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.WindowsRuntimeApplication = 5 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.OutputKind.WindowsRuntimeMetadata = 4 -> Loretta.CodeAnalysis.OutputKind
Loretta.CodeAnalysis.ParseOptions
Loretta.CodeAnalysis.ParseOptions.DocumentationMode.get -> Loretta.CodeAnalysis.DocumentationMode
Loretta.CodeAnalysis.ParseOptions.Errors.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!>
Loretta.CodeAnalysis.ParseOptions.Kind.get -> Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.ParseOptions.SpecifiedKind.get -> Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.ParseOptions.WithDocumentationMode(Loretta.CodeAnalysis.DocumentationMode documentationMode) -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.ParseOptions.WithFeatures(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string!, string!>>! features) -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.ParseOptions.WithKind(Loretta.CodeAnalysis.SourceCodeKind kind) -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.AnyCpu = 0 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.AnyCpu32BitPreferred = 4 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.Arm = 5 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.Arm64 = 6 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.Itanium = 3 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.X64 = 2 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.Platform.X86 = 1 -> Loretta.CodeAnalysis.Platform
Loretta.CodeAnalysis.PortableExecutableReference
Loretta.CodeAnalysis.PortableExecutableReference.FilePath.get -> string?
Loretta.CodeAnalysis.PortableExecutableReference.GetMetadata() -> Loretta.CodeAnalysis.Metadata!
Loretta.CodeAnalysis.PortableExecutableReference.GetMetadataId() -> Loretta.CodeAnalysis.MetadataId!
Loretta.CodeAnalysis.PortableExecutableReference.PortableExecutableReference(Loretta.CodeAnalysis.MetadataReferenceProperties properties, string? fullPath = null, Loretta.CodeAnalysis.DocumentationProvider? initialDocumentation = null) -> void
Loretta.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Generic.IEnumerable<string!>! aliases) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Immutable.ImmutableArray<string!> aliases) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.PortableExecutableReference.WithEmbedInteropTypes(bool value) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.PortableExecutableReference.WithProperties(Loretta.CodeAnalysis.MetadataReferenceProperties properties) -> Loretta.CodeAnalysis.PortableExecutableReference!
Loretta.CodeAnalysis.PreprocessingSymbolInfo
Loretta.CodeAnalysis.PreprocessingSymbolInfo.Equals(Loretta.CodeAnalysis.PreprocessingSymbolInfo other) -> bool
Loretta.CodeAnalysis.PreprocessingSymbolInfo.IsDefined.get -> bool
Loretta.CodeAnalysis.PreprocessingSymbolInfo.PreprocessingSymbolInfo() -> void
Loretta.CodeAnalysis.PreprocessingSymbolInfo.Symbol.get -> Loretta.CodeAnalysis.IPreprocessingSymbol?
Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.RefKind.In = 3 -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.RefKind.None = 0 -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.RefKind.Out = 2 -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.RefKind.Ref = 1 -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.RefKind.RefReadOnly = 3 -> Loretta.CodeAnalysis.RefKind
Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Default = 0 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Error = 1 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Hidden = 4 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Info = 3 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Suppress = 5 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ReportDiagnostic.Warn = 2 -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.ResourceDescription
Loretta.CodeAnalysis.ResourceDescription.ResourceDescription(string! resourceName, string? fileName, System.Func<System.IO.Stream!>! dataProvider, bool isPublic) -> void
Loretta.CodeAnalysis.ResourceDescription.ResourceDescription(string! resourceName, System.Func<System.IO.Stream!>! dataProvider, bool isPublic) -> void
Loretta.CodeAnalysis.RuleSet
Loretta.CodeAnalysis.RuleSet.FilePath.get -> string!
Loretta.CodeAnalysis.RuleSet.GeneralDiagnosticOption.get -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.RuleSet.Includes.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.RuleSetInclude!>
Loretta.CodeAnalysis.RuleSet.RuleSet(string! filePath, Loretta.CodeAnalysis.ReportDiagnostic generalOption, System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>! specificOptions, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.RuleSetInclude!> includes) -> void
Loretta.CodeAnalysis.RuleSet.SpecificDiagnosticOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>!
Loretta.CodeAnalysis.RuleSet.WithEffectiveAction(Loretta.CodeAnalysis.ReportDiagnostic action) -> Loretta.CodeAnalysis.RuleSet?
Loretta.CodeAnalysis.RuleSetInclude
Loretta.CodeAnalysis.RuleSetInclude.Action.get -> Loretta.CodeAnalysis.ReportDiagnostic
Loretta.CodeAnalysis.RuleSetInclude.IncludePath.get -> string!
Loretta.CodeAnalysis.RuleSetInclude.LoadRuleSet(Loretta.CodeAnalysis.RuleSet! parent) -> Loretta.CodeAnalysis.RuleSet?
Loretta.CodeAnalysis.RuleSetInclude.RuleSetInclude(string! includePath, Loretta.CodeAnalysis.ReportDiagnostic action) -> void
Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.SarifVersion.Default = 1 -> Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.SarifVersion.Latest = 2147483647 -> Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.SarifVersion.Sarif1 = 1 -> Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.SarifVersion.Sarif2 = 2 -> Loretta.CodeAnalysis.SarifVersion
Loretta.CodeAnalysis.SarifVersionFacts
Loretta.CodeAnalysis.ScriptCompilationInfo
Loretta.CodeAnalysis.ScriptCompilationInfo.GlobalsType.get -> System.Type?
Loretta.CodeAnalysis.ScriptCompilationInfo.PreviousScriptCompilation.get -> Loretta.CodeAnalysis.Compilation?
Loretta.CodeAnalysis.ScriptCompilationInfo.ReturnType.get -> System.Type!
Loretta.CodeAnalysis.ScriptCompilationInfo.WithPreviousScriptCompilation(Loretta.CodeAnalysis.Compilation? compilation) -> Loretta.CodeAnalysis.ScriptCompilationInfo!
Loretta.CodeAnalysis.SemanticModel
Loretta.CodeAnalysis.SemanticModel.Compilation.get -> Loretta.CodeAnalysis.Compilation!
Loretta.CodeAnalysis.SemanticModel.GetConstantValue(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Optional<object?>
Loretta.CodeAnalysis.SemanticModel.GetEnclosingSymbol(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.SemanticModel.GetOperation(Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.IOperation?
Loretta.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfo(Loretta.CodeAnalysis.SyntaxNode! nameSyntax) -> Loretta.CodeAnalysis.PreprocessingSymbolInfo
Loretta.CodeAnalysis.SemanticModel.IsAccessible(int position, Loretta.CodeAnalysis.ISymbol! symbol) -> bool
Loretta.CodeAnalysis.SemanticModel.IsEventUsableAsField(int position, Loretta.CodeAnalysis.IEventSymbol! eventSymbol) -> bool
Loretta.CodeAnalysis.SemanticModel.LookupBaseMembers(int position, string? name = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SemanticModel.LookupLabels(int position, string? name = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SemanticModel.LookupNamespacesAndTypes(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container = null, string? name = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SemanticModel.LookupStaticMembers(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container = null, string? name = null) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SemanticModel.LookupSymbols(int position, Loretta.CodeAnalysis.INamespaceOrTypeSymbol? container = null, string? name = null, bool includeReducedExtensionMethods = false) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SemanticModel.ParentModel.get -> Loretta.CodeAnalysis.SemanticModel?
Loretta.CodeAnalysis.SemanticModel.SemanticModel() -> void
Loretta.CodeAnalysis.SemanticModel.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Add(TNode! node) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.AddRange(System.Collections.Generic.IEnumerable<TNode!>! nodes) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Any() -> bool
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Contains(TNode! node) -> bool
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Count.get -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Current.get -> TNode!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Reset() -> void
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Equals(Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> other) -> bool
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.First() -> TNode!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.FirstOrDefault() -> TNode?
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
~Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.GetEnumerator() -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.GetSeparator(int index) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.GetSeparators() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.GetWithSeparators() -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.IndexOf(System.Func<TNode!, bool>! predicate) -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.IndexOf(TNode! node) -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Insert(int index, TNode! node) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.InsertRange(int index, System.Collections.Generic.IEnumerable<TNode!>! nodes) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Last() -> TNode!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.LastIndexOf(System.Func<TNode!, bool>! predicate) -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.LastIndexOf(TNode! node) -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.LastOrDefault() -> TNode?
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Remove(TNode! node) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.RemoveAt(int index) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Replace(TNode! nodeInList, TNode! newNode) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.ReplaceRange(TNode! nodeInList, System.Collections.Generic.IEnumerable<TNode!>! newNodes) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.ReplaceSeparator(Loretta.CodeAnalysis.SyntaxToken separatorToken, Loretta.CodeAnalysis.SyntaxToken newSeparator) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.SeparatedSyntaxList() -> void
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.SeparatorCount.get -> int
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.this[int index].get -> TNode!
Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.ToFullString() -> string!
Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.SourceCodeKind.Interactive = 2 -> Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.SourceCodeKind.Regular = 0 -> Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.SourceCodeKind.Script = 1 -> Loretta.CodeAnalysis.SourceCodeKind
Loretta.CodeAnalysis.SourceFileResolver
Loretta.CodeAnalysis.SourceFileResolver.BaseDirectory.get -> string?
Loretta.CodeAnalysis.SourceFileResolver.Equals(Loretta.CodeAnalysis.SourceFileResolver? other) -> bool
Loretta.CodeAnalysis.SourceFileResolver.PathMap.get -> System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<string!, string!>>
Loretta.CodeAnalysis.SourceFileResolver.SearchPaths.get -> System.Collections.Immutable.ImmutableArray<string!>
Loretta.CodeAnalysis.SourceFileResolver.SourceFileResolver(System.Collections.Generic.IEnumerable<string!>! searchPaths, string? baseDirectory) -> void
Loretta.CodeAnalysis.SourceFileResolver.SourceFileResolver(System.Collections.Immutable.ImmutableArray<string!> searchPaths, string? baseDirectory) -> void
Loretta.CodeAnalysis.SourceFileResolver.SourceFileResolver(System.Collections.Immutable.ImmutableArray<string!> searchPaths, string? baseDirectory, System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<string!, string!>> pathMap) -> void
Loretta.CodeAnalysis.SourceReferenceResolver
Loretta.CodeAnalysis.SourceReferenceResolver.SourceReferenceResolver() -> void
Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.Count = 45 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.None = 0 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_ArgIterator = 37 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Array = 23 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_AsyncCallback = 43 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Boolean = 7 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Byte = 10 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Char = 8 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_ICollection_T = 27 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerable_T = 25 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerator_T = 29 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_IList_T = 26 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyCollection_T = 31 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyList_T = 30 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_IEnumerable = 24 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Collections_IEnumerator = 28 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_DateTime = 33 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Decimal = 17 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Delegate = 4 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Double = 19 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Enum = 2 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_IAsyncResult = 42 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_IDisposable = 35 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Int16 = 11 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Int32 = 13 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Int64 = 15 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_IntPtr = 21 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_MulticastDelegate = 3 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Nullable_T = 32 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Object = 1 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_RuntimeArgumentHandle = 38 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_RuntimeFieldHandle = 39 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_RuntimeMethodHandle = 40 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_RuntimeTypeHandle = 41 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Runtime_CompilerServices_IsVolatile = 34 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Runtime_CompilerServices_PreserveBaseOverridesAttribute = 45 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Runtime_CompilerServices_RuntimeFeature = 44 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_SByte = 9 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Single = 18 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_String = 20 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_TypedReference = 36 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_UInt16 = 12 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_UInt32 = 14 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_UInt64 = 16 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_UIntPtr = 22 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_ValueType = 5 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpecialType.System_Void = 6 -> Loretta.CodeAnalysis.SpecialType
Loretta.CodeAnalysis.SpeculativeBindingOption
Loretta.CodeAnalysis.SpeculativeBindingOption.BindAsExpression = 0 -> Loretta.CodeAnalysis.SpeculativeBindingOption
Loretta.CodeAnalysis.SpeculativeBindingOption.BindAsTypeOrNamespace = 1 -> Loretta.CodeAnalysis.SpeculativeBindingOption
Loretta.CodeAnalysis.StrongNameProvider
Loretta.CodeAnalysis.StrongNameProvider.StrongNameProvider() -> void
Loretta.CodeAnalysis.SubsystemVersion
Loretta.CodeAnalysis.SubsystemVersion.Equals(Loretta.CodeAnalysis.SubsystemVersion other) -> bool
Loretta.CodeAnalysis.SubsystemVersion.IsValid.get -> bool
Loretta.CodeAnalysis.SubsystemVersion.Major.get -> int
Loretta.CodeAnalysis.SubsystemVersion.Minor.get -> int
Loretta.CodeAnalysis.SubsystemVersion.SubsystemVersion() -> void
Loretta.CodeAnalysis.SuppressionDescriptor
Loretta.CodeAnalysis.SuppressionDescriptor.Equals(Loretta.CodeAnalysis.SuppressionDescriptor? other) -> bool
Loretta.CodeAnalysis.SuppressionDescriptor.Id.get -> string!
Loretta.CodeAnalysis.SuppressionDescriptor.Justification.get -> Loretta.CodeAnalysis.LocalizableString!
Loretta.CodeAnalysis.SuppressionDescriptor.SuppressedDiagnosticId.get -> string!
Loretta.CodeAnalysis.SuppressionDescriptor.SuppressionDescriptor(string! id, string! suppressedDiagnosticId, Loretta.CodeAnalysis.LocalizableString! justification) -> void
Loretta.CodeAnalysis.SuppressionDescriptor.SuppressionDescriptor(string! id, string! suppressedDiagnosticId, string! justification) -> void
Loretta.CodeAnalysis.SymbolDisplayDelegateStyle
Loretta.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndParameters = 1 -> Loretta.CodeAnalysis.SymbolDisplayDelegateStyle
Loretta.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndSignature = 2 -> Loretta.CodeAnalysis.SymbolDisplayDelegateStyle
Loretta.CodeAnalysis.SymbolDisplayDelegateStyle.NameOnly = 0 -> Loretta.CodeAnalysis.SymbolDisplayDelegateStyle
Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default = 0 -> Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod = 1 -> Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod = 2 -> Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Loretta.CodeAnalysis.SymbolDisplayExtensions
Loretta.CodeAnalysis.SymbolDisplayFormat
Loretta.CodeAnalysis.SymbolDisplayFormat.AddGenericsOptions(Loretta.CodeAnalysis.SymbolDisplayGenericsOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.AddKindOptions(Loretta.CodeAnalysis.SymbolDisplayKindOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.AddLocalOptions(Loretta.CodeAnalysis.SymbolDisplayLocalOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.AddMemberOptions(Loretta.CodeAnalysis.SymbolDisplayMemberOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.AddMiscellaneousOptions(Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.AddParameterOptions(Loretta.CodeAnalysis.SymbolDisplayParameterOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.DelegateStyle.get -> Loretta.CodeAnalysis.SymbolDisplayDelegateStyle
Loretta.CodeAnalysis.SymbolDisplayFormat.ExtensionMethodStyle.get -> Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Loretta.CodeAnalysis.SymbolDisplayFormat.GenericsOptions.get -> Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.GlobalNamespaceStyle.get -> Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Loretta.CodeAnalysis.SymbolDisplayFormat.KindOptions.get -> Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.LocalOptions.get -> Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.MemberOptions.get -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.MiscellaneousOptions.get -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.ParameterOptions.get -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayFormat.PropertyStyle.get -> Loretta.CodeAnalysis.SymbolDisplayPropertyStyle
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveGenericsOptions(Loretta.CodeAnalysis.SymbolDisplayGenericsOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveKindOptions(Loretta.CodeAnalysis.SymbolDisplayKindOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveLocalOptions(Loretta.CodeAnalysis.SymbolDisplayLocalOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveMemberOptions(Loretta.CodeAnalysis.SymbolDisplayMemberOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveMiscellaneousOptions(Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.RemoveParameterOptions(Loretta.CodeAnalysis.SymbolDisplayParameterOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.SymbolDisplayFormat(Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle globalNamespaceStyle = Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Omitted, Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle typeQualificationStyle = Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameOnly, Loretta.CodeAnalysis.SymbolDisplayGenericsOptions genericsOptions = Loretta.CodeAnalysis.SymbolDisplayGenericsOptions.None, Loretta.CodeAnalysis.SymbolDisplayMemberOptions memberOptions = Loretta.CodeAnalysis.SymbolDisplayMemberOptions.None, Loretta.CodeAnalysis.SymbolDisplayDelegateStyle delegateStyle = Loretta.CodeAnalysis.SymbolDisplayDelegateStyle.NameOnly, Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle extensionMethodStyle = Loretta.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default, Loretta.CodeAnalysis.SymbolDisplayParameterOptions parameterOptions = Loretta.CodeAnalysis.SymbolDisplayParameterOptions.None, Loretta.CodeAnalysis.SymbolDisplayPropertyStyle propertyStyle = Loretta.CodeAnalysis.SymbolDisplayPropertyStyle.NameOnly, Loretta.CodeAnalysis.SymbolDisplayLocalOptions localOptions = Loretta.CodeAnalysis.SymbolDisplayLocalOptions.None, Loretta.CodeAnalysis.SymbolDisplayKindOptions kindOptions = Loretta.CodeAnalysis.SymbolDisplayKindOptions.None, Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions miscellaneousOptions = Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None) -> void
Loretta.CodeAnalysis.SymbolDisplayFormat.TypeQualificationStyle.get -> Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Loretta.CodeAnalysis.SymbolDisplayFormat.WithGenericsOptions(Loretta.CodeAnalysis.SymbolDisplayGenericsOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithGlobalNamespaceStyle(Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle style) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithKindOptions(Loretta.CodeAnalysis.SymbolDisplayKindOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithLocalOptions(Loretta.CodeAnalysis.SymbolDisplayLocalOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithMemberOptions(Loretta.CodeAnalysis.SymbolDisplayMemberOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithMiscellaneousOptions(Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayFormat.WithParameterOptions(Loretta.CodeAnalysis.SymbolDisplayParameterOptions options) -> Loretta.CodeAnalysis.SymbolDisplayFormat!
Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeConstraints = 2 -> Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeParameters = 1 -> Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeVariance = 4 -> Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayGenericsOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayGenericsOptions
Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Included = 2 -> Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Omitted = 0 -> Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.OmittedAsContaining = 1 -> Loretta.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayKindOptions.IncludeMemberKeyword = 4 -> Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayKindOptions.IncludeNamespaceKeyword = 1 -> Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayKindOptions.IncludeTypeKeyword = 2 -> Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayKindOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayKindOptions
Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayLocalOptions.IncludeConstantValue = 2 -> Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayLocalOptions.IncludeRef = 4 -> Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayLocalOptions.IncludeType = 1 -> Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayLocalOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayLocalOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeAccessibility = 4 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeConstantValue = 64 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeContainingType = 32 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeExplicitInterface = 8 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeModifiers = 2 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeParameters = 16 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeRef = 128 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.IncludeType = 1 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMemberOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayMemberOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.AllowDefaultLiteral = 128 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers = 2 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.ExpandNullable = 32 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.IncludeNotNullableReferenceTypeModifier = 256 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.IncludeNullableReferenceTypeModifier = 64 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.RemoveAttributeSuffix = 16 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseAsterisksInMultiDimensionalArrays = 4 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseErrorTypeSymbolName = 8 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseSpecialTypes = 1 -> Loretta.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeDefaultValue = 16 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeExtensionThis = 1 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeName = 8 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeOptionalBrackets = 32 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeParamsRefOut = 2 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.IncludeType = 4 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayParameterOptions.None = 0 -> Loretta.CodeAnalysis.SymbolDisplayParameterOptions
Loretta.CodeAnalysis.SymbolDisplayPart
Loretta.CodeAnalysis.SymbolDisplayPart.Kind.get -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPart.Symbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.SymbolDisplayPart.SymbolDisplayPart() -> void
Loretta.CodeAnalysis.SymbolDisplayPart.SymbolDisplayPart(Loretta.CodeAnalysis.SymbolDisplayPartKind kind, Loretta.CodeAnalysis.ISymbol? symbol, string! text) -> void
Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.AliasName = 0 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.AnonymousTypeIndicator = 24 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.AssemblyName = 1 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ClassName = 2 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ConstantName = 30 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.DelegateName = 3 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.EnumMemberName = 28 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.EnumName = 4 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ErrorTypeName = 5 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.EventName = 6 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ExtensionMethodName = 29 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.FieldName = 7 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.InterfaceName = 8 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.Keyword = 9 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.LabelName = 10 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.LineBreak = 11 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.LocalName = 14 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.MethodName = 15 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ModuleName = 16 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.NamespaceName = 17 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.NumericLiteral = 12 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.Operator = 18 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.ParameterName = 19 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.PropertyName = 20 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.Punctuation = 21 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.RangeVariableName = 27 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.Space = 22 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.StringLiteral = 13 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.StructName = 23 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.Text = 25 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPartKind.TypeParameterName = 26 -> Loretta.CodeAnalysis.SymbolDisplayPartKind
Loretta.CodeAnalysis.SymbolDisplayPropertyStyle
Loretta.CodeAnalysis.SymbolDisplayPropertyStyle.NameOnly = 0 -> Loretta.CodeAnalysis.SymbolDisplayPropertyStyle
Loretta.CodeAnalysis.SymbolDisplayPropertyStyle.ShowReadWriteDescriptor = 1 -> Loretta.CodeAnalysis.SymbolDisplayPropertyStyle
Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypes = 1 -> Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces = 2 -> Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameOnly = 0 -> Loretta.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Loretta.CodeAnalysis.SymbolEqualityComparer
Loretta.CodeAnalysis.SymbolEqualityComparer.Equals(Loretta.CodeAnalysis.ISymbol? x, Loretta.CodeAnalysis.ISymbol? y) -> bool
Loretta.CodeAnalysis.SymbolEqualityComparer.GetHashCode(Loretta.CodeAnalysis.ISymbol? obj) -> int
Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.All = Loretta.CodeAnalysis.SymbolFilter.Namespace | Loretta.CodeAnalysis.SymbolFilter.TypeAndMember -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.Member = 4 -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.Namespace = 1 -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.None = 0 -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.Type = 2 -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolFilter.TypeAndMember = Loretta.CodeAnalysis.SymbolFilter.Type | Loretta.CodeAnalysis.SymbolFilter.Member -> Loretta.CodeAnalysis.SymbolFilter
Loretta.CodeAnalysis.SymbolInfo
Loretta.CodeAnalysis.SymbolInfo.CandidateReason.get -> Loretta.CodeAnalysis.CandidateReason
Loretta.CodeAnalysis.SymbolInfo.CandidateSymbols.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
Loretta.CodeAnalysis.SymbolInfo.Equals(Loretta.CodeAnalysis.SymbolInfo other) -> bool
Loretta.CodeAnalysis.SymbolInfo.Symbol.get -> Loretta.CodeAnalysis.ISymbol?
Loretta.CodeAnalysis.SymbolInfo.SymbolInfo() -> void
Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Alias = 0 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.ArrayType = 1 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Assembly = 2 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Discard = 19 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.DynamicType = 3 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.ErrorType = 4 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Event = 5 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Field = 6 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.FunctionPointerType = 20 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Label = 7 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Local = 8 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Method = 9 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.NamedType = 11 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Namespace = 12 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.NetModule = 10 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Parameter = 13 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.PointerType = 14 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Preprocessing = 18 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.Property = 15 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.RangeVariable = 16 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolKind.TypeParameter = 17 -> Loretta.CodeAnalysis.SymbolKind
Loretta.CodeAnalysis.SymbolVisitor
Loretta.CodeAnalysis.SymbolVisitor.SymbolVisitor() -> void
Loretta.CodeAnalysis.SymbolVisitor<TResult>
Loretta.CodeAnalysis.SymbolVisitor<TResult>.SymbolVisitor() -> void
Loretta.CodeAnalysis.SyntaxAnnotation
Loretta.CodeAnalysis.SyntaxAnnotation.Data.get -> string?
Loretta.CodeAnalysis.SyntaxAnnotation.Equals(Loretta.CodeAnalysis.SyntaxAnnotation? other) -> bool
Loretta.CodeAnalysis.SyntaxAnnotation.Kind.get -> string?
Loretta.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation() -> void
Loretta.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation(string? kind) -> void
Loretta.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation(string? kind, string? data) -> void
Loretta.CodeAnalysis.SyntaxList<TNode>
Loretta.CodeAnalysis.SyntaxList<TNode>.Add(TNode! node) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.AddRange(System.Collections.Generic.IEnumerable<TNode!>! nodes) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.Any() -> bool
Loretta.CodeAnalysis.SyntaxList<TNode>.Count.get -> int
Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator
Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.Current.get -> TNode!
Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.Reset() -> void
Loretta.CodeAnalysis.SyntaxList<TNode>.Equals(Loretta.CodeAnalysis.SyntaxList<TNode!> other) -> bool
Loretta.CodeAnalysis.SyntaxList<TNode>.First() -> TNode!
Loretta.CodeAnalysis.SyntaxList<TNode>.FirstOrDefault() -> TNode?
Loretta.CodeAnalysis.SyntaxList<TNode>.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
~Loretta.CodeAnalysis.SyntaxList<TNode>.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator
Loretta.CodeAnalysis.SyntaxList<TNode>.IndexOf(System.Func<TNode!, bool>! predicate) -> int
Loretta.CodeAnalysis.SyntaxList<TNode>.IndexOf(TNode! node) -> int
Loretta.CodeAnalysis.SyntaxList<TNode>.Insert(int index, TNode! node) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.InsertRange(int index, System.Collections.Generic.IEnumerable<TNode!>! nodes) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.Last() -> TNode!
Loretta.CodeAnalysis.SyntaxList<TNode>.LastIndexOf(System.Func<TNode!, bool>! predicate) -> int
Loretta.CodeAnalysis.SyntaxList<TNode>.LastIndexOf(TNode! node) -> int
Loretta.CodeAnalysis.SyntaxList<TNode>.LastOrDefault() -> TNode?
Loretta.CodeAnalysis.SyntaxList<TNode>.Remove(TNode! node) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.RemoveAt(int index) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.Replace(TNode! nodeInList, TNode! newNode) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.ReplaceRange(TNode! nodeInList, System.Collections.Generic.IEnumerable<TNode!>! newNodes) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
Loretta.CodeAnalysis.SyntaxList<TNode>.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxList<TNode>.SyntaxList() -> void
Loretta.CodeAnalysis.SyntaxList<TNode>.SyntaxList(System.Collections.Generic.IEnumerable<TNode!>? nodes) -> void
Loretta.CodeAnalysis.SyntaxList<TNode>.SyntaxList(TNode? node) -> void
Loretta.CodeAnalysis.SyntaxList<TNode>.this[int index].get -> TNode!
Loretta.CodeAnalysis.SyntaxList<TNode>.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxNode
Loretta.CodeAnalysis.SyntaxNode.Ancestors(bool ascendOutOfTrivia = true) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.AncestorsAndSelf(bool ascendOutOfTrivia = true) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.ChildNodes() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.ChildNodesAndTokens() -> Loretta.CodeAnalysis.ChildSyntaxList
Loretta.CodeAnalysis.SyntaxNode.ChildTokens() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SyntaxNode.Contains(Loretta.CodeAnalysis.SyntaxNode? node) -> bool
Loretta.CodeAnalysis.SyntaxNode.ContainsAnnotations.get -> bool
Loretta.CodeAnalysis.SyntaxNode.ContainsDiagnostics.get -> bool
Loretta.CodeAnalysis.SyntaxNode.ContainsDirectives.get -> bool
Loretta.CodeAnalysis.SyntaxNode.ContainsSkippedText.get -> bool
Loretta.CodeAnalysis.SyntaxNode.CopyAnnotationsTo<T>(T? node) -> T?
Loretta.CodeAnalysis.SyntaxNode.DescendantNodes(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodes(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantTokens(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantTokens(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SyntaxNode.DescendantTrivia(Loretta.CodeAnalysis.Text.TextSpan span, System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxNode.DescendantTrivia(System.Func<Loretta.CodeAnalysis.SyntaxNode!, bool>? descendIntoChildren = null, bool descendIntoTrivia = false) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxNode.FindNode(Loretta.CodeAnalysis.Text.TextSpan span, bool findInsideTrivia = false, bool getInnermostNodeForTie = false) -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.SyntaxNode.FindToken(int position, bool findInsideTrivia = false) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxNode.FindTrivia(int position, bool findInsideTrivia = false) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxNode.FindTrivia(int position, System.Func<Loretta.CodeAnalysis.SyntaxTrivia, bool>? stepInto) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxNode.FirstAncestorOrSelf<TNode, TArg>(System.Func<TNode!, TArg, bool>! predicate, TArg argument, bool ascendOutOfTrivia = true) -> TNode?
Loretta.CodeAnalysis.SyntaxNode.FirstAncestorOrSelf<TNode>(System.Func<TNode!, bool>? predicate = null, bool ascendOutOfTrivia = true) -> TNode?
Loretta.CodeAnalysis.SyntaxNode.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(Loretta.CodeAnalysis.SyntaxAnnotation! syntaxAnnotation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(Loretta.CodeAnalysis.SyntaxAnnotation! annotation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(params string![]! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(Loretta.CodeAnalysis.SyntaxAnnotation! syntaxAnnotation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(Loretta.CodeAnalysis.SyntaxAnnotation! annotation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(params string![]! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotations(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxNode.GetAnnotations(System.Collections.Generic.IEnumerable<string!>! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxNode.GetDiagnostics() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
Loretta.CodeAnalysis.SyntaxNode.GetFirstToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxNode.GetLastToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxNode.GetLeadingTrivia() -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxNode.GetLocation() -> Loretta.CodeAnalysis.Location!
Loretta.CodeAnalysis.SyntaxNode.GetReference() -> Loretta.CodeAnalysis.SyntaxReference!
Loretta.CodeAnalysis.SyntaxNode.GetText(System.Text.Encoding? encoding = null, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1) -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.SyntaxNode.GetTrailingTrivia() -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxNode.HasAnnotation(Loretta.CodeAnalysis.SyntaxAnnotation? annotation) -> bool
Loretta.CodeAnalysis.SyntaxNode.HasAnnotations(string! annotationKind) -> bool
Loretta.CodeAnalysis.SyntaxNode.HasAnnotations(System.Collections.Generic.IEnumerable<string!>! annotationKinds) -> bool
Loretta.CodeAnalysis.SyntaxNode.HasLeadingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNode.HasStructuredTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNode.HasTrailingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNode.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxNode! node, bool topLevel = false) -> bool
Loretta.CodeAnalysis.SyntaxNode.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxNode! other) -> bool
Loretta.CodeAnalysis.SyntaxNode.IsMissing.get -> bool
Loretta.CodeAnalysis.SyntaxNode.IsPartOfStructuredTrivia() -> bool
Loretta.CodeAnalysis.SyntaxNode.IsStructuredTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNode.Parent.get -> Loretta.CodeAnalysis.SyntaxNode?
Loretta.CodeAnalysis.SyntaxNode.RawKind.get -> int
Loretta.CodeAnalysis.SyntaxNode.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNode.SpanStart.get -> int
Loretta.CodeAnalysis.SyntaxNode.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree!
Loretta.CodeAnalysis.SyntaxNodeExtensions
Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.AsNode() -> Loretta.CodeAnalysis.SyntaxNode?
Loretta.CodeAnalysis.SyntaxNodeOrToken.AsToken() -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.ChildNodesAndTokens() -> Loretta.CodeAnalysis.ChildSyntaxList
Loretta.CodeAnalysis.SyntaxNodeOrToken.ContainsAnnotations.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.ContainsDiagnostics.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.ContainsDirectives.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.Equals(Loretta.CodeAnalysis.SyntaxNodeOrToken other) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(System.Collections.Generic.IEnumerable<string!>! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetDiagnostics() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetLeadingTrivia() -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetLocation() -> Loretta.CodeAnalysis.Location?
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetNextSibling() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetPreviousSibling() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.GetTrailingTrivia() -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxNodeOrToken.HasAnnotation(Loretta.CodeAnalysis.SyntaxAnnotation? annotation) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(string! annotationKind) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(System.Collections.Generic.IEnumerable<string!>! annotationKinds) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.HasLeadingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.HasTrailingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxNodeOrToken other) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.IsMissing.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.IsNode.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.IsToken.get -> bool
Loretta.CodeAnalysis.SyntaxNodeOrToken.Language.get -> string!
Loretta.CodeAnalysis.SyntaxNodeOrToken.Parent.get -> Loretta.CodeAnalysis.SyntaxNode?
Loretta.CodeAnalysis.SyntaxNodeOrToken.RawKind.get -> int
Loretta.CodeAnalysis.SyntaxNodeOrToken.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNodeOrToken.SpanStart.get -> int
Loretta.CodeAnalysis.SyntaxNodeOrToken.SyntaxNodeOrToken() -> void
Loretta.CodeAnalysis.SyntaxNodeOrToken.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree?
Loretta.CodeAnalysis.SyntaxNodeOrToken.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(params Loretta.CodeAnalysis.SyntaxTrivia[]! trivia) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(string! annotationKind) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(params Loretta.CodeAnalysis.SyntaxTrivia[]! trivia) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrToken.WriteTo(System.IO.TextWriter! writer) -> void
Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Add(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.AddRange(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>! nodesOrTokens) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Any() -> bool
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Count.get -> int
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Equals(Loretta.CodeAnalysis.SyntaxNodeOrTokenList other) -> bool
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.First() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.FirstOrDefault() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.IndexOf(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> int
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Insert(int index, Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.InsertRange(int index, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>! nodesAndTokens) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Last() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.LastOrDefault() -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Remove(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.RemoveAt(int index) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Replace(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList, Loretta.CodeAnalysis.SyntaxNodeOrToken newNodeOrToken) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.ReplaceRange(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>! newNodesAndTokens) -> Loretta.CodeAnalysis.SyntaxNodeOrTokenList
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.SyntaxNodeOrTokenList() -> void
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.SyntaxNodeOrTokenList(params Loretta.CodeAnalysis.SyntaxNodeOrToken[]! nodesAndTokens) -> void
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.SyntaxNodeOrTokenList(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNodeOrToken>! nodesAndTokens) -> void
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.this[int index].get -> Loretta.CodeAnalysis.SyntaxNodeOrToken
Loretta.CodeAnalysis.SyntaxNodeOrTokenList.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxReceiverCreator
Loretta.CodeAnalysis.SyntaxReference
Loretta.CodeAnalysis.SyntaxReference.SyntaxReference() -> void
Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.AddElasticMarker = 32 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepDirectives = 8 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepEndOfLine = 16 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepExteriorTrivia = Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepLeadingTrivia | Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepTrailingTrivia -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepLeadingTrivia = 1 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepNoTrivia = 0 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepTrailingTrivia = 2 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxRemoveOptions.KeepUnbalancedDirectives = 4 -> Loretta.CodeAnalysis.SyntaxRemoveOptions
Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.ContainsAnnotations.get -> bool
Loretta.CodeAnalysis.SyntaxToken.ContainsDiagnostics.get -> bool
Loretta.CodeAnalysis.SyntaxToken.ContainsDirectives.get -> bool
Loretta.CodeAnalysis.SyntaxToken.CopyAnnotationsTo(Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.Equals(Loretta.CodeAnalysis.SyntaxToken other) -> bool
Loretta.CodeAnalysis.SyntaxToken.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxToken.GetAllTrivia() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>!
Loretta.CodeAnalysis.SyntaxToken.GetAnnotations(params string![]! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxToken.GetAnnotations(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxToken.GetAnnotations(System.Collections.Generic.IEnumerable<string!>! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxToken.GetDiagnostics() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
Loretta.CodeAnalysis.SyntaxToken.GetLocation() -> Loretta.CodeAnalysis.Location!
Loretta.CodeAnalysis.SyntaxToken.GetNextToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.GetPreviousToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.HasAnnotation(Loretta.CodeAnalysis.SyntaxAnnotation? annotation) -> bool
Loretta.CodeAnalysis.SyntaxToken.HasAnnotations(params string![]! annotationKinds) -> bool
Loretta.CodeAnalysis.SyntaxToken.HasAnnotations(string! annotationKind) -> bool
Loretta.CodeAnalysis.SyntaxToken.HasLeadingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxToken.HasStructuredTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxToken.HasTrailingTrivia.get -> bool
Loretta.CodeAnalysis.SyntaxToken.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxToken token) -> bool
Loretta.CodeAnalysis.SyntaxToken.IsMissing.get -> bool
Loretta.CodeAnalysis.SyntaxToken.IsPartOfStructuredTrivia() -> bool
Loretta.CodeAnalysis.SyntaxToken.Language.get -> string!
Loretta.CodeAnalysis.SyntaxToken.LeadingTrivia.get -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxToken.Parent.get -> Loretta.CodeAnalysis.SyntaxNode?
Loretta.CodeAnalysis.SyntaxToken.RawKind.get -> int
Loretta.CodeAnalysis.SyntaxToken.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxToken.SpanStart.get -> int
Loretta.CodeAnalysis.SyntaxToken.SyntaxToken() -> void
Loretta.CodeAnalysis.SyntaxToken.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree?
Loretta.CodeAnalysis.SyntaxToken.Text.get -> string!
Loretta.CodeAnalysis.SyntaxToken.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxToken.TrailingTrivia.get -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxToken.Value.get -> object?
Loretta.CodeAnalysis.SyntaxToken.ValueText.get -> string!
Loretta.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithLeadingTrivia(Loretta.CodeAnalysis.SyntaxTriviaList trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithLeadingTrivia(params Loretta.CodeAnalysis.SyntaxTrivia[]? trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>? trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithoutAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithoutAnnotations(string! annotationKind) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithoutAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithTrailingTrivia(Loretta.CodeAnalysis.SyntaxTriviaList trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithTrailingTrivia(params Loretta.CodeAnalysis.SyntaxTrivia[]? trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>? trivia) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WithTriviaFrom(Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxToken.WriteTo(System.IO.TextWriter! writer) -> void
Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.Add(Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.AddRange(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! tokens) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.Any() -> bool
Loretta.CodeAnalysis.SyntaxTokenList.Count.get -> int
Loretta.CodeAnalysis.SyntaxTokenList.Enumerator
Loretta.CodeAnalysis.SyntaxTokenList.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTokenList.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxTokenList.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxTokenList.Equals(Loretta.CodeAnalysis.SyntaxTokenList other) -> bool
Loretta.CodeAnalysis.SyntaxTokenList.First() -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTokenList.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTokenList.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxTokenList.Enumerator
Loretta.CodeAnalysis.SyntaxTokenList.IndexOf(Loretta.CodeAnalysis.SyntaxToken tokenInList) -> int
Loretta.CodeAnalysis.SyntaxTokenList.Insert(int index, Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.InsertRange(int index, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! tokens) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.Last() -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTokenList.Remove(Loretta.CodeAnalysis.SyntaxToken tokenInList) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.RemoveAt(int index) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.Replace(Loretta.CodeAnalysis.SyntaxToken tokenInList, Loretta.CodeAnalysis.SyntaxToken newToken) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.ReplaceRange(Loretta.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! newTokens) -> Loretta.CodeAnalysis.SyntaxTokenList
Loretta.CodeAnalysis.SyntaxTokenList.Reverse() -> Loretta.CodeAnalysis.SyntaxTokenList.Reversed
Loretta.CodeAnalysis.SyntaxTokenList.Reversed
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Equals(Loretta.CodeAnalysis.SyntaxTokenList.Reversed other) -> bool
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Reversed() -> void
Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Reversed(Loretta.CodeAnalysis.SyntaxTokenList list) -> void
Loretta.CodeAnalysis.SyntaxTokenList.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTokenList.SyntaxTokenList() -> void
Loretta.CodeAnalysis.SyntaxTokenList.SyntaxTokenList(Loretta.CodeAnalysis.SyntaxToken token) -> void
Loretta.CodeAnalysis.SyntaxTokenList.SyntaxTokenList(params Loretta.CodeAnalysis.SyntaxToken[]! tokens) -> void
Loretta.CodeAnalysis.SyntaxTokenList.SyntaxTokenList(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! tokens) -> void
Loretta.CodeAnalysis.SyntaxTokenList.this[int index].get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTokenList.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxTree
Loretta.CodeAnalysis.SyntaxTree.GetRoot(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.SyntaxNode!
Loretta.CodeAnalysis.SyntaxTree.GetRootAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.SyntaxNode!>!
Loretta.CodeAnalysis.SyntaxTree.Options.get -> Loretta.CodeAnalysis.ParseOptions!
Loretta.CodeAnalysis.SyntaxTree.SyntaxTree() -> void
Loretta.CodeAnalysis.SyntaxTree.TryGetRoot(out Loretta.CodeAnalysis.SyntaxNode? root) -> bool
Loretta.CodeAnalysis.SyntaxTreeOptionsProvider
Loretta.CodeAnalysis.SyntaxTreeOptionsProvider.SyntaxTreeOptionsProvider() -> void
Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.ContainsDiagnostics.get -> bool
Loretta.CodeAnalysis.SyntaxTrivia.CopyAnnotationsTo(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.Equals(Loretta.CodeAnalysis.SyntaxTrivia other) -> bool
Loretta.CodeAnalysis.SyntaxTrivia.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTrivia.GetAnnotations(params string![]! annotationKinds) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxTrivia.GetAnnotations(string! annotationKind) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>!
Loretta.CodeAnalysis.SyntaxTrivia.GetDiagnostics() -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
Loretta.CodeAnalysis.SyntaxTrivia.GetLocation() -> Loretta.CodeAnalysis.Location!
Loretta.CodeAnalysis.SyntaxTrivia.GetStructure() -> Loretta.CodeAnalysis.SyntaxNode?
Loretta.CodeAnalysis.SyntaxTrivia.HasAnnotation(Loretta.CodeAnalysis.SyntaxAnnotation? annotation) -> bool
Loretta.CodeAnalysis.SyntaxTrivia.HasAnnotations(params string![]! annotationKinds) -> bool
Loretta.CodeAnalysis.SyntaxTrivia.HasAnnotations(string! annotationKind) -> bool
Loretta.CodeAnalysis.SyntaxTrivia.HasStructure.get -> bool
Loretta.CodeAnalysis.SyntaxTrivia.IsDirective.get -> bool
Loretta.CodeAnalysis.SyntaxTrivia.IsEquivalentTo(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> bool
Loretta.CodeAnalysis.SyntaxTrivia.IsPartOfStructuredTrivia() -> bool
Loretta.CodeAnalysis.SyntaxTrivia.Language.get -> string!
Loretta.CodeAnalysis.SyntaxTrivia.RawKind.get -> int
Loretta.CodeAnalysis.SyntaxTrivia.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTrivia.SpanStart.get -> int
Loretta.CodeAnalysis.SyntaxTrivia.SyntaxTree.get -> Loretta.CodeAnalysis.SyntaxTree?
Loretta.CodeAnalysis.SyntaxTrivia.SyntaxTrivia() -> void
Loretta.CodeAnalysis.SyntaxTrivia.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxTrivia.Token.get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(string! annotationKind) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTrivia.WriteTo(System.IO.TextWriter! writer) -> void
Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.Add(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.AddRange(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.Any() -> bool
Loretta.CodeAnalysis.SyntaxTriviaList.Count.get -> int
Loretta.CodeAnalysis.SyntaxTriviaList.ElementAt(int index) -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.Enumerator
Loretta.CodeAnalysis.SyntaxTriviaList.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxTriviaList.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxTriviaList.Equals(Loretta.CodeAnalysis.SyntaxTriviaList other) -> bool
Loretta.CodeAnalysis.SyntaxTriviaList.First() -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.FullSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTriviaList.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxTriviaList.Enumerator
Loretta.CodeAnalysis.SyntaxTriviaList.IndexOf(Loretta.CodeAnalysis.SyntaxTrivia triviaInList) -> int
Loretta.CodeAnalysis.SyntaxTriviaList.Insert(int index, Loretta.CodeAnalysis.SyntaxTrivia trivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.InsertRange(int index, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.Last() -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.Remove(Loretta.CodeAnalysis.SyntaxTrivia triviaInList) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.RemoveAt(int index) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.Replace(Loretta.CodeAnalysis.SyntaxTrivia triviaInList, Loretta.CodeAnalysis.SyntaxTrivia newTrivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.ReplaceRange(Loretta.CodeAnalysis.SyntaxTrivia triviaInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! newTrivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
Loretta.CodeAnalysis.SyntaxTriviaList.Reverse() -> Loretta.CodeAnalysis.SyntaxTriviaList.Reversed
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.Current.get -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(Loretta.CodeAnalysis.SyntaxTriviaList.Reversed other) -> bool
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.GetEnumerator() -> Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Reversed() -> void
Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Reversed(Loretta.CodeAnalysis.SyntaxTriviaList list) -> void
Loretta.CodeAnalysis.SyntaxTriviaList.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.SyntaxTriviaList.SyntaxTriviaList() -> void
Loretta.CodeAnalysis.SyntaxTriviaList.SyntaxTriviaList(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> void
Loretta.CodeAnalysis.SyntaxTriviaList.SyntaxTriviaList(params Loretta.CodeAnalysis.SyntaxTrivia[]! trivias) -> void
Loretta.CodeAnalysis.SyntaxTriviaList.SyntaxTriviaList(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>? trivias) -> void
Loretta.CodeAnalysis.SyntaxTriviaList.this[int index].get -> Loretta.CodeAnalysis.SyntaxTrivia
Loretta.CodeAnalysis.SyntaxTriviaList.ToFullString() -> string!
Loretta.CodeAnalysis.SyntaxWalker
Loretta.CodeAnalysis.SyntaxWalker.Depth.get -> Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.SyntaxWalker.SyntaxWalker(Loretta.CodeAnalysis.SyntaxWalkerDepth depth = Loretta.CodeAnalysis.SyntaxWalkerDepth.Node) -> void
Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.SyntaxWalkerDepth.Node = 0 -> Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia = 3 -> Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.SyntaxWalkerDepth.Token = 1 -> Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.SyntaxWalkerDepth.Trivia = 2 -> Loretta.CodeAnalysis.SyntaxWalkerDepth
Loretta.CodeAnalysis.Text.LinePosition
Loretta.CodeAnalysis.Text.LinePosition.Character.get -> int
Loretta.CodeAnalysis.Text.LinePosition.CompareTo(Loretta.CodeAnalysis.Text.LinePosition other) -> int
Loretta.CodeAnalysis.Text.LinePosition.Equals(Loretta.CodeAnalysis.Text.LinePosition other) -> bool
Loretta.CodeAnalysis.Text.LinePosition.Line.get -> int
Loretta.CodeAnalysis.Text.LinePosition.LinePosition() -> void
Loretta.CodeAnalysis.Text.LinePosition.LinePosition(int line, int character) -> void
Loretta.CodeAnalysis.Text.LinePositionSpan
Loretta.CodeAnalysis.Text.LinePositionSpan.End.get -> Loretta.CodeAnalysis.Text.LinePosition
Loretta.CodeAnalysis.Text.LinePositionSpan.Equals(Loretta.CodeAnalysis.Text.LinePositionSpan other) -> bool
Loretta.CodeAnalysis.Text.LinePositionSpan.LinePositionSpan() -> void
Loretta.CodeAnalysis.Text.LinePositionSpan.LinePositionSpan(Loretta.CodeAnalysis.Text.LinePosition start, Loretta.CodeAnalysis.Text.LinePosition end) -> void
Loretta.CodeAnalysis.Text.LinePositionSpan.Start.get -> Loretta.CodeAnalysis.Text.LinePosition
Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.Text.SourceHashAlgorithm.None = 0 -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1 = 1 -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha256 = 2 -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.Text.SourceText
Loretta.CodeAnalysis.Text.SourceText.CanBeEmbedded.get -> bool
Loretta.CodeAnalysis.Text.SourceText.ChecksumAlgorithm.get -> Loretta.CodeAnalysis.Text.SourceHashAlgorithm
Loretta.CodeAnalysis.Text.SourceText.ContentEquals(Loretta.CodeAnalysis.Text.SourceText! other) -> bool
Loretta.CodeAnalysis.Text.SourceText.GetChecksum() -> System.Collections.Immutable.ImmutableArray<byte>
Loretta.CodeAnalysis.Text.SourceText.GetSubText(int start) -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.SourceText.Lines.get -> Loretta.CodeAnalysis.Text.TextLineCollection!
Loretta.CodeAnalysis.Text.SourceText.Replace(int start, int length, string! newText) -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.SourceText.Replace(Loretta.CodeAnalysis.Text.TextSpan span, string! newText) -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.SourceText.SourceText(System.Collections.Immutable.ImmutableArray<byte> checksum = default(System.Collections.Immutable.ImmutableArray<byte>), Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, Loretta.CodeAnalysis.Text.SourceTextContainer? container = null) -> void
Loretta.CodeAnalysis.Text.SourceText.WithChanges(params Loretta.CodeAnalysis.Text.TextChange[]! changes) -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter! textWriter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
Loretta.CodeAnalysis.Text.SourceTextContainer
Loretta.CodeAnalysis.Text.SourceTextContainer.SourceTextContainer() -> void
Loretta.CodeAnalysis.Text.TextChange
Loretta.CodeAnalysis.Text.TextChange.Equals(Loretta.CodeAnalysis.Text.TextChange other) -> bool
Loretta.CodeAnalysis.Text.TextChange.NewText.get -> string?
Loretta.CodeAnalysis.Text.TextChange.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextChange.TextChange() -> void
Loretta.CodeAnalysis.Text.TextChange.TextChange(Loretta.CodeAnalysis.Text.TextSpan span, string! newText) -> void
Loretta.CodeAnalysis.Text.TextChangeEventArgs
Loretta.CodeAnalysis.Text.TextChangeEventArgs.Changes.get -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Text.TextChangeRange>!
Loretta.CodeAnalysis.Text.TextChangeEventArgs.NewText.get -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.TextChangeEventArgs.OldText.get -> Loretta.CodeAnalysis.Text.SourceText!
Loretta.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Loretta.CodeAnalysis.Text.SourceText! oldText, Loretta.CodeAnalysis.Text.SourceText! newText, params Loretta.CodeAnalysis.Text.TextChangeRange[]! changes) -> void
Loretta.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Loretta.CodeAnalysis.Text.SourceText! oldText, Loretta.CodeAnalysis.Text.SourceText! newText, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Text.TextChangeRange>! changes) -> void
Loretta.CodeAnalysis.Text.TextChangeRange
Loretta.CodeAnalysis.Text.TextChangeRange.Equals(Loretta.CodeAnalysis.Text.TextChangeRange other) -> bool
Loretta.CodeAnalysis.Text.TextChangeRange.NewLength.get -> int
Loretta.CodeAnalysis.Text.TextChangeRange.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextChangeRange.TextChangeRange() -> void
Loretta.CodeAnalysis.Text.TextChangeRange.TextChangeRange(Loretta.CodeAnalysis.Text.TextSpan span, int newLength) -> void
Loretta.CodeAnalysis.Text.TextLine
Loretta.CodeAnalysis.Text.TextLine.End.get -> int
Loretta.CodeAnalysis.Text.TextLine.EndIncludingLineBreak.get -> int
Loretta.CodeAnalysis.Text.TextLine.Equals(Loretta.CodeAnalysis.Text.TextLine other) -> bool
Loretta.CodeAnalysis.Text.TextLine.LineNumber.get -> int
Loretta.CodeAnalysis.Text.TextLine.Span.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextLine.SpanIncludingLineBreak.get -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextLine.Start.get -> int
Loretta.CodeAnalysis.Text.TextLine.Text.get -> Loretta.CodeAnalysis.Text.SourceText?
Loretta.CodeAnalysis.Text.TextLine.TextLine() -> void
Loretta.CodeAnalysis.Text.TextLineCollection
Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator
Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator.Current.get -> Loretta.CodeAnalysis.Text.TextLine
Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator.Enumerator() -> void
Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator.MoveNext() -> bool
Loretta.CodeAnalysis.Text.TextLineCollection.GetEnumerator() -> Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator
Loretta.CodeAnalysis.Text.TextLineCollection.GetLinePositionSpan(Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Text.LinePositionSpan
Loretta.CodeAnalysis.Text.TextLineCollection.GetPosition(Loretta.CodeAnalysis.Text.LinePosition position) -> int
Loretta.CodeAnalysis.Text.TextLineCollection.GetTextSpan(Loretta.CodeAnalysis.Text.LinePositionSpan span) -> Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextLineCollection.TextLineCollection() -> void
Loretta.CodeAnalysis.Text.TextSpan
Loretta.CodeAnalysis.Text.TextSpan.CompareTo(Loretta.CodeAnalysis.Text.TextSpan other) -> int
Loretta.CodeAnalysis.Text.TextSpan.Contains(int position) -> bool
Loretta.CodeAnalysis.Text.TextSpan.Contains(Loretta.CodeAnalysis.Text.TextSpan span) -> bool
Loretta.CodeAnalysis.Text.TextSpan.End.get -> int
Loretta.CodeAnalysis.Text.TextSpan.Equals(Loretta.CodeAnalysis.Text.TextSpan other) -> bool
Loretta.CodeAnalysis.Text.TextSpan.Intersection(Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Text.TextSpan?
Loretta.CodeAnalysis.Text.TextSpan.IntersectsWith(int position) -> bool
Loretta.CodeAnalysis.Text.TextSpan.IntersectsWith(Loretta.CodeAnalysis.Text.TextSpan span) -> bool
Loretta.CodeAnalysis.Text.TextSpan.IsEmpty.get -> bool
Loretta.CodeAnalysis.Text.TextSpan.Length.get -> int
Loretta.CodeAnalysis.Text.TextSpan.Overlap(Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Text.TextSpan?
Loretta.CodeAnalysis.Text.TextSpan.OverlapsWith(Loretta.CodeAnalysis.Text.TextSpan span) -> bool
Loretta.CodeAnalysis.Text.TextSpan.Start.get -> int
Loretta.CodeAnalysis.Text.TextSpan.TextSpan() -> void
Loretta.CodeAnalysis.Text.TextSpan.TextSpan(int start, int length) -> void
Loretta.CodeAnalysis.TypedConstant
Loretta.CodeAnalysis.TypedConstant.Equals(Loretta.CodeAnalysis.TypedConstant other) -> bool
Loretta.CodeAnalysis.TypedConstant.IsNull.get -> bool
Loretta.CodeAnalysis.TypedConstant.Kind.get -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstant.Type.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.TypedConstant.TypedConstant() -> void
Loretta.CodeAnalysis.TypedConstant.Value.get -> object?
Loretta.CodeAnalysis.TypedConstant.Values.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.TypedConstant>
Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstantKind.Array = 4 -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstantKind.Enum = 2 -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstantKind.Error = 0 -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstantKind.Primitive = 1 -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypedConstantKind.Type = 3 -> Loretta.CodeAnalysis.TypedConstantKind
Loretta.CodeAnalysis.TypeInfo
Loretta.CodeAnalysis.TypeInfo.ConvertedNullability.get -> Loretta.CodeAnalysis.NullabilityInfo
Loretta.CodeAnalysis.TypeInfo.ConvertedType.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.TypeInfo.Equals(Loretta.CodeAnalysis.TypeInfo other) -> bool
Loretta.CodeAnalysis.TypeInfo.Nullability.get -> Loretta.CodeAnalysis.NullabilityInfo
Loretta.CodeAnalysis.TypeInfo.Type.get -> Loretta.CodeAnalysis.ITypeSymbol?
Loretta.CodeAnalysis.TypeInfo.TypeInfo() -> void
Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Array = 1 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Class = 2 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Delegate = 3 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Dynamic = 4 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Enum = 5 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Error = 6 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.FunctionPointer = 13 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Interface = 7 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Module = 8 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Pointer = 9 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Struct = 10 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Structure = 10 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Submission = 12 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.TypeParameter = 11 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeKind.Unknown = 0 -> Loretta.CodeAnalysis.TypeKind
Loretta.CodeAnalysis.TypeParameterKind
Loretta.CodeAnalysis.TypeParameterKind.Cref = 2 -> Loretta.CodeAnalysis.TypeParameterKind
Loretta.CodeAnalysis.TypeParameterKind.Method = 1 -> Loretta.CodeAnalysis.TypeParameterKind
Loretta.CodeAnalysis.TypeParameterKind.Type = 0 -> Loretta.CodeAnalysis.TypeParameterKind
Loretta.CodeAnalysis.UnresolvedMetadataReference
Loretta.CodeAnalysis.UnresolvedMetadataReference.Reference.get -> string!
Loretta.CodeAnalysis.VarianceKind
Loretta.CodeAnalysis.VarianceKind.In = 2 -> Loretta.CodeAnalysis.VarianceKind
Loretta.CodeAnalysis.VarianceKind.None = 0 -> Loretta.CodeAnalysis.VarianceKind
Loretta.CodeAnalysis.VarianceKind.Out = 1 -> Loretta.CodeAnalysis.VarianceKind
Loretta.CodeAnalysis.WellKnownDiagnosticTags
Loretta.CodeAnalysis.WellKnownMemberNames
Loretta.CodeAnalysis.XmlFileResolver
Loretta.CodeAnalysis.XmlFileResolver.BaseDirectory.get -> string?
Loretta.CodeAnalysis.XmlFileResolver.XmlFileResolver(string? baseDirectory) -> void
Loretta.CodeAnalysis.XmlReferenceResolver
Loretta.CodeAnalysis.XmlReferenceResolver.XmlReferenceResolver() -> void
override abstract Loretta.CodeAnalysis.CompilationOptions.Equals(object? obj) -> bool
override abstract Loretta.CodeAnalysis.CompilationOptions.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.Diagnostic.Equals(object? obj) -> bool
override abstract Loretta.CodeAnalysis.Diagnostic.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.DocumentationProvider.Equals(object? obj) -> bool
override abstract Loretta.CodeAnalysis.DocumentationProvider.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.Location.Equals(object? obj) -> bool
override abstract Loretta.CodeAnalysis.Location.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.MetadataReferenceResolver.Equals(object? other) -> bool
override abstract Loretta.CodeAnalysis.MetadataReferenceResolver.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.ParseOptions.Equals(object? obj) -> bool
override abstract Loretta.CodeAnalysis.ParseOptions.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.SourceReferenceResolver.Equals(object? other) -> bool
override abstract Loretta.CodeAnalysis.SourceReferenceResolver.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.StrongNameProvider.Equals(object? other) -> bool
override abstract Loretta.CodeAnalysis.StrongNameProvider.GetHashCode() -> int
override abstract Loretta.CodeAnalysis.XmlReferenceResolver.Equals(object? other) -> bool
override abstract Loretta.CodeAnalysis.XmlReferenceResolver.GetHashCode() -> int
override Loretta.CodeAnalysis.AssemblyIdentity.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.AssemblyIdentity.GetHashCode() -> int
override Loretta.CodeAnalysis.AssemblyIdentity.ToString() -> string!
override Loretta.CodeAnalysis.AssemblyMetadata.Dispose() -> void
override Loretta.CodeAnalysis.AssemblyMetadata.Kind.get -> Loretta.CodeAnalysis.MetadataImageKind
override Loretta.CodeAnalysis.ChildSyntaxList.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.ChildSyntaxList.GetHashCode() -> int
override Loretta.CodeAnalysis.ChildSyntaxList.Reversed.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.ChildSyntaxList.Reversed.GetHashCode() -> int
override Loretta.CodeAnalysis.CommandLineAnalyzerReference.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.CommandLineAnalyzerReference.GetHashCode() -> int
override Loretta.CodeAnalysis.CommandLineReference.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.CommandLineReference.GetHashCode() -> int
override Loretta.CodeAnalysis.CompilationReference.Display.get -> string?
override Loretta.CodeAnalysis.CompilationReference.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.CompilationReference.GetHashCode() -> int
override Loretta.CodeAnalysis.DesktopStrongNameProvider.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.DesktopStrongNameProvider.GetHashCode() -> int
override Loretta.CodeAnalysis.Diagnostic.ToString() -> string!
override Loretta.CodeAnalysis.DiagnosticDescriptor.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.DiagnosticDescriptor.GetHashCode() -> int
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.Display.get -> string!
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.FullPath.get -> string!
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzers(string! language) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzersForAllLanguages() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetGenerators() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISourceGenerator!>
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetHashCode() -> int
override Loretta.CodeAnalysis.Diagnostics.AnalyzerFileReference.Id.get -> object!
override Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.Display.get -> string!
override Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.FullPath.get -> string?
override Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzers(string! language) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzersForAllLanguages() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.AnalyzerImageReference.Id.get -> object!
override Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions.GetHashCode() -> int
override Loretta.CodeAnalysis.Diagnostics.Suppression.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Diagnostics.Suppression.GetHashCode() -> int
override Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.Display.get -> string!
override Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.FullPath.get -> string!
override Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzers(string! language) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzersForAllLanguages() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>
override Loretta.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.Id.get -> object!
override Loretta.CodeAnalysis.Emit.EmitOptions.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Emit.EmitOptions.GetHashCode() -> int
override Loretta.CodeAnalysis.Emit.SemanticEdit.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Emit.SemanticEdit.GetHashCode() -> int
override Loretta.CodeAnalysis.FileLinePositionSpan.Equals(object? other) -> bool
override Loretta.CodeAnalysis.FileLinePositionSpan.GetHashCode() -> int
override Loretta.CodeAnalysis.FileLinePositionSpan.ToString() -> string!
override Loretta.CodeAnalysis.FlowAnalysis.CaptureId.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.FlowAnalysis.CaptureId.GetHashCode() -> int
override Loretta.CodeAnalysis.Location.ToString() -> string!
override Loretta.CodeAnalysis.MetadataReferenceProperties.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.MetadataReferenceProperties.GetHashCode() -> int
override Loretta.CodeAnalysis.ModuleMetadata.Dispose() -> void
override Loretta.CodeAnalysis.ModuleMetadata.Kind.get -> Loretta.CodeAnalysis.MetadataImageKind
override Loretta.CodeAnalysis.NullabilityInfo.Equals(object? other) -> bool
override Loretta.CodeAnalysis.NullabilityInfo.GetHashCode() -> int
override Loretta.CodeAnalysis.Operations.OperationWalker.DefaultVisit(Loretta.CodeAnalysis.IOperation! operation) -> void
override Loretta.CodeAnalysis.Operations.OperationWalker.Visit(Loretta.CodeAnalysis.IOperation? operation) -> void
override Loretta.CodeAnalysis.Optional<T>.ToString() -> string!
override Loretta.CodeAnalysis.PortableExecutableReference.Display.get -> string?
override Loretta.CodeAnalysis.PreprocessingSymbolInfo.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.PreprocessingSymbolInfo.GetHashCode() -> int
override Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.GetHashCode() -> int
override Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.ToString() -> string!
override Loretta.CodeAnalysis.SourceFileResolver.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SourceFileResolver.GetHashCode() -> int
override Loretta.CodeAnalysis.SourceFileResolver.NormalizePath(string! path, string? baseFilePath) -> string?
override Loretta.CodeAnalysis.SourceFileResolver.OpenRead(string! resolvedPath) -> System.IO.Stream!
override Loretta.CodeAnalysis.SourceFileResolver.ResolveReference(string! path, string? baseFilePath) -> string?
override Loretta.CodeAnalysis.SubsystemVersion.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SubsystemVersion.GetHashCode() -> int
override Loretta.CodeAnalysis.SubsystemVersion.ToString() -> string!
override Loretta.CodeAnalysis.SuppressionDescriptor.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SuppressionDescriptor.GetHashCode() -> int
override Loretta.CodeAnalysis.SymbolDisplayPart.ToString() -> string!
override Loretta.CodeAnalysis.SymbolInfo.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SymbolInfo.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxAnnotation.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxAnnotation.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxList<TNode>.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxList<TNode>.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxList<TNode>.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxList<TNode>.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxNode.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxNodeOrToken.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxNodeOrToken.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxNodeOrToken.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxNodeOrTokenList.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxNodeOrTokenList.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxNodeOrTokenList.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxToken.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxToken.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxToken.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxTokenList.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTokenList.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTokenList.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTokenList.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTokenList.Reversed.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTokenList.Reversed.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTokenList.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxTree.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxTrivia.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTrivia.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTrivia.ToString() -> string!
override Loretta.CodeAnalysis.SyntaxTriviaList.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTriviaList.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.SyntaxTriviaList.Reversed.GetHashCode() -> int
override Loretta.CodeAnalysis.SyntaxTriviaList.ToString() -> string!
override Loretta.CodeAnalysis.Text.LinePosition.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.LinePosition.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.LinePosition.ToString() -> string!
override Loretta.CodeAnalysis.Text.LinePositionSpan.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.LinePositionSpan.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.LinePositionSpan.ToString() -> string!
override Loretta.CodeAnalysis.Text.SourceText.ToString() -> string!
override Loretta.CodeAnalysis.Text.TextChange.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.TextChange.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.TextChange.ToString() -> string!
override Loretta.CodeAnalysis.Text.TextChangeRange.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.TextChangeRange.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.TextLine.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.TextLine.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.TextLine.ToString() -> string!
override Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.TextLineCollection.Enumerator.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.TextSpan.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.Text.TextSpan.GetHashCode() -> int
override Loretta.CodeAnalysis.Text.TextSpan.ToString() -> string!
override Loretta.CodeAnalysis.TypedConstant.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.TypedConstant.GetHashCode() -> int
override Loretta.CodeAnalysis.TypeInfo.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.TypeInfo.GetHashCode() -> int
override Loretta.CodeAnalysis.UnresolvedMetadataReference.Display.get -> string!
override Loretta.CodeAnalysis.XmlFileResolver.Equals(object? obj) -> bool
override Loretta.CodeAnalysis.XmlFileResolver.GetHashCode() -> int
override Loretta.CodeAnalysis.XmlFileResolver.OpenRead(string! resolvedPath) -> System.IO.Stream!
override Loretta.CodeAnalysis.XmlFileResolver.ResolveReference(string! path, string? baseFilePath) -> string?
override sealed Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(object? obj) -> bool
override sealed Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode() -> int
override sealed Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString() -> string!
override sealed Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor.Initialize(Loretta.CodeAnalysis.Diagnostics.AnalysisContext! context) -> void
override sealed Loretta.CodeAnalysis.Diagnostics.DiagnosticSuppressor.SupportedDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.DiagnosticDescriptor!>
override sealed Loretta.CodeAnalysis.LocalizableString.Equals(object? other) -> bool
override sealed Loretta.CodeAnalysis.LocalizableString.GetHashCode() -> int
override sealed Loretta.CodeAnalysis.LocalizableString.ToString() -> string!
static Loretta.CodeAnalysis.AnalyzerConfig.Parse(Loretta.CodeAnalysis.Text.SourceText! text, string? pathToFile) -> Loretta.CodeAnalysis.AnalyzerConfig!
static Loretta.CodeAnalysis.AnalyzerConfig.Parse(string! text, string? pathToFile) -> Loretta.CodeAnalysis.AnalyzerConfig!
static Loretta.CodeAnalysis.AnalyzerConfigSet.Create<TList>(TList analyzerConfigs) -> Loretta.CodeAnalysis.AnalyzerConfigSet!
static Loretta.CodeAnalysis.AnalyzerConfigSet.Create<TList>(TList analyzerConfigs, out System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!> diagnostics) -> Loretta.CodeAnalysis.AnalyzerConfigSet!
static Loretta.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations<TNode>(this TNode! node, params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> TNode!
static Loretta.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations<TNode>(this TNode! node, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> TNode!
static Loretta.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode! node, params Loretta.CodeAnalysis.SyntaxAnnotation![]! annotations) -> TNode!
static Loretta.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode! node, string! annotationKind) -> TNode!
static Loretta.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode! node, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxAnnotation!>! annotations) -> TNode!
static Loretta.CodeAnalysis.AssemblyIdentity.FromAssemblyDefinition(System.Reflection.Assembly! assembly) -> Loretta.CodeAnalysis.AssemblyIdentity!
static Loretta.CodeAnalysis.AssemblyIdentity.operator !=(Loretta.CodeAnalysis.AssemblyIdentity? left, Loretta.CodeAnalysis.AssemblyIdentity? right) -> bool
static Loretta.CodeAnalysis.AssemblyIdentity.operator ==(Loretta.CodeAnalysis.AssemblyIdentity? left, Loretta.CodeAnalysis.AssemblyIdentity? right) -> bool
static Loretta.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(string! displayName, out Loretta.CodeAnalysis.AssemblyIdentity? identity) -> bool
static Loretta.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(string! displayName, out Loretta.CodeAnalysis.AssemblyIdentity? identity, out Loretta.CodeAnalysis.AssemblyIdentityParts parts) -> bool
static Loretta.CodeAnalysis.AssemblyIdentityComparer.CultureComparer.get -> System.StringComparer!
static Loretta.CodeAnalysis.AssemblyIdentityComparer.Default.get -> Loretta.CodeAnalysis.AssemblyIdentityComparer!
static Loretta.CodeAnalysis.AssemblyIdentityComparer.SimpleNameComparer.get -> System.StringComparer!
static Loretta.CodeAnalysis.AssemblyMetadata.Create(Loretta.CodeAnalysis.ModuleMetadata! module) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.Create(params Loretta.CodeAnalysis.ModuleMetadata![]! modules) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ModuleMetadata!>! modules) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ModuleMetadata!> modules) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.CreateFromFile(string! path) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Generic.IEnumerable<byte>! peImage) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream! peStream, bool leaveOpen = false) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream! peStream, System.Reflection.PortableExecutable.PEStreamOptions options) -> Loretta.CodeAnalysis.AssemblyMetadata!
static Loretta.CodeAnalysis.CaseInsensitiveComparison.Compare(string! left, string! right) -> int
static Loretta.CodeAnalysis.CaseInsensitiveComparison.Comparer.get -> System.StringComparer!
static Loretta.CodeAnalysis.CaseInsensitiveComparison.EndsWith(string! value, string! possibleEnd) -> bool
static Loretta.CodeAnalysis.CaseInsensitiveComparison.Equals(string! left, string! right) -> bool
static Loretta.CodeAnalysis.CaseInsensitiveComparison.GetHashCode(string! value) -> int
static Loretta.CodeAnalysis.CaseInsensitiveComparison.StartsWith(string! value, string! possibleStart) -> bool
static Loretta.CodeAnalysis.CaseInsensitiveComparison.ToLower(char c) -> char
static Loretta.CodeAnalysis.CaseInsensitiveComparison.ToLower(string? value) -> string?
static Loretta.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Text.StringBuilder! builder) -> void
static Loretta.CodeAnalysis.ChildSyntaxList.operator !=(Loretta.CodeAnalysis.ChildSyntaxList list1, Loretta.CodeAnalysis.ChildSyntaxList list2) -> bool
static Loretta.CodeAnalysis.ChildSyntaxList.operator ==(Loretta.CodeAnalysis.ChildSyntaxList list1, Loretta.CodeAnalysis.ChildSyntaxList list2) -> bool
static Loretta.CodeAnalysis.CommandLineParser.SplitCommandLineIntoArguments(string! commandLine, bool removeHashComments) -> System.Collections.Generic.IEnumerable<string!>!
static Loretta.CodeAnalysis.Compilation.GetRequiredLanguageVersion(Loretta.CodeAnalysis.Diagnostic! diagnostic) -> string?
static Loretta.CodeAnalysis.CompilationOptions.operator !=(Loretta.CodeAnalysis.CompilationOptions? left, Loretta.CodeAnalysis.CompilationOptions? right) -> bool
static Loretta.CodeAnalysis.CompilationOptions.operator ==(Loretta.CodeAnalysis.CompilationOptions? left, Loretta.CodeAnalysis.CompilationOptions? right) -> bool
static Loretta.CodeAnalysis.DesktopAssemblyIdentityComparer.Default.get -> Loretta.CodeAnalysis.DesktopAssemblyIdentityComparer!
static Loretta.CodeAnalysis.DesktopAssemblyIdentityComparer.LoadFromXml(System.IO.Stream! input) -> Loretta.CodeAnalysis.DesktopAssemblyIdentityComparer!
static Loretta.CodeAnalysis.Diagnostic.Create(Loretta.CodeAnalysis.DiagnosticDescriptor! descriptor, Loretta.CodeAnalysis.Location? location, Loretta.CodeAnalysis.DiagnosticSeverity effectiveSeverity, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Location!>? additionalLocations, System.Collections.Immutable.ImmutableDictionary<string!, string?>? properties, params object?[]? messageArgs) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(Loretta.CodeAnalysis.DiagnosticDescriptor! descriptor, Loretta.CodeAnalysis.Location? location, params object?[]? messageArgs) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(Loretta.CodeAnalysis.DiagnosticDescriptor! descriptor, Loretta.CodeAnalysis.Location? location, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Location!>? additionalLocations, params object?[]? messageArgs) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(Loretta.CodeAnalysis.DiagnosticDescriptor! descriptor, Loretta.CodeAnalysis.Location? location, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Location!>? additionalLocations, System.Collections.Immutable.ImmutableDictionary<string!, string?>? properties, params object?[]? messageArgs) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(Loretta.CodeAnalysis.DiagnosticDescriptor! descriptor, Loretta.CodeAnalysis.Location? location, System.Collections.Immutable.ImmutableDictionary<string!, string?>? properties, params object?[]? messageArgs) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(string! id, string! category, Loretta.CodeAnalysis.LocalizableString! message, Loretta.CodeAnalysis.DiagnosticSeverity severity, Loretta.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, int warningLevel, bool isSuppressed, Loretta.CodeAnalysis.LocalizableString? title = null, Loretta.CodeAnalysis.LocalizableString? description = null, string? helpLink = null, Loretta.CodeAnalysis.Location? location = null, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Location!>? additionalLocations = null, System.Collections.Generic.IEnumerable<string!>? customTags = null, System.Collections.Immutable.ImmutableDictionary<string!, string?>? properties = null) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostic.Create(string! id, string! category, Loretta.CodeAnalysis.LocalizableString! message, Loretta.CodeAnalysis.DiagnosticSeverity severity, Loretta.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, int warningLevel, Loretta.CodeAnalysis.LocalizableString? title = null, Loretta.CodeAnalysis.LocalizableString? description = null, string? helpLink = null, Loretta.CodeAnalysis.Location? location = null, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Location!>? additionalLocations = null, System.Collections.Generic.IEnumerable<string!>? customTags = null, System.Collections.Immutable.ImmutableDictionary<string!, string?>? properties = null) -> Loretta.CodeAnalysis.Diagnostic!
static Loretta.CodeAnalysis.Diagnostics.AnalyzerConfigOptions.KeyComparer.get -> System.StringComparer!
static Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.ClearAnalyzerState(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers) -> void
static Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetEffectiveDiagnostics(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>! diagnostics, Loretta.CodeAnalysis.Compilation! compilation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
static Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetEffectiveDiagnostics(System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostic!> diagnostics, Loretta.CodeAnalysis.Compilation! compilation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Diagnostic!>!
static Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.IsDiagnosticAnalyzerSuppressed(Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer! analyzer, Loretta.CodeAnalysis.CompilationOptions! options, System.Action<System.Exception!, Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!, Loretta.CodeAnalysis.Diagnostic!>? onAnalyzerException = null) -> bool
static Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(this Loretta.CodeAnalysis.Compilation! compilation, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, Loretta.CodeAnalysis.Diagnostics.AnalyzerOptions? options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers!
static Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(this Loretta.CodeAnalysis.Compilation! compilation, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!> analyzers, Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions! analysisOptions) -> Loretta.CodeAnalysis.Diagnostics.CompilationWithAnalyzers!
static Loretta.CodeAnalysis.Diagnostics.Suppression.Create(Loretta.CodeAnalysis.SuppressionDescriptor! descriptor, Loretta.CodeAnalysis.Diagnostic! suppressedDiagnostic) -> Loretta.CodeAnalysis.Diagnostics.Suppression
static Loretta.CodeAnalysis.Diagnostics.Suppression.operator !=(Loretta.CodeAnalysis.Diagnostics.Suppression left, Loretta.CodeAnalysis.Diagnostics.Suppression right) -> bool
static Loretta.CodeAnalysis.Diagnostics.Suppression.operator ==(Loretta.CodeAnalysis.Diagnostics.Suppression left, Loretta.CodeAnalysis.Diagnostics.Suppression right) -> bool
static Loretta.CodeAnalysis.DocumentationCommentId.CreateDeclarationId(Loretta.CodeAnalysis.ISymbol! symbol) -> string!
static Loretta.CodeAnalysis.DocumentationCommentId.CreateReferenceId(Loretta.CodeAnalysis.ISymbol! symbol) -> string!
static Loretta.CodeAnalysis.DocumentationCommentId.GetFirstSymbolForDeclarationId(string! id, Loretta.CodeAnalysis.Compilation! compilation) -> Loretta.CodeAnalysis.ISymbol?
static Loretta.CodeAnalysis.DocumentationCommentId.GetFirstSymbolForReferenceId(string! id, Loretta.CodeAnalysis.Compilation! compilation) -> Loretta.CodeAnalysis.ISymbol?
static Loretta.CodeAnalysis.DocumentationCommentId.GetSymbolsForDeclarationId(string! id, Loretta.CodeAnalysis.Compilation! compilation) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
static Loretta.CodeAnalysis.DocumentationCommentId.GetSymbolsForReferenceId(string! id, Loretta.CodeAnalysis.Compilation! compilation) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
static Loretta.CodeAnalysis.DocumentationProvider.Default.get -> Loretta.CodeAnalysis.DocumentationProvider!
static Loretta.CodeAnalysis.EmbeddedText.FromBytes(string! filePath, System.ArraySegment<byte> bytes, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1) -> Loretta.CodeAnalysis.EmbeddedText!
static Loretta.CodeAnalysis.EmbeddedText.FromSource(string! filePath, Loretta.CodeAnalysis.Text.SourceText! text) -> Loretta.CodeAnalysis.EmbeddedText!
static Loretta.CodeAnalysis.EmbeddedText.FromStream(string! filePath, System.IO.Stream! stream, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1) -> Loretta.CodeAnalysis.EmbeddedText!
static Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.Create(System.Collections.Immutable.ImmutableArray<byte> compressedSlotMap, System.Collections.Immutable.ImmutableArray<byte> compressedLambdaMap) -> Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation
static Loretta.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Loretta.CodeAnalysis.ModuleMetadata! module, System.Func<System.Reflection.Metadata.MethodDefinitionHandle, Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation>! debugInformationProvider) -> Loretta.CodeAnalysis.Emit.EmitBaseline!
static Loretta.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Loretta.CodeAnalysis.ModuleMetadata! module, System.Func<System.Reflection.Metadata.MethodDefinitionHandle, Loretta.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation>! debugInformationProvider, System.Func<System.Reflection.Metadata.MethodDefinitionHandle, System.Reflection.Metadata.StandaloneSignatureHandle>! localSignatureProvider, bool hasPortableDebugInformation) -> Loretta.CodeAnalysis.Emit.EmitBaseline!
static Loretta.CodeAnalysis.Emit.EmitOptions.operator !=(Loretta.CodeAnalysis.Emit.EmitOptions? left, Loretta.CodeAnalysis.Emit.EmitOptions? right) -> bool
static Loretta.CodeAnalysis.Emit.EmitOptions.operator ==(Loretta.CodeAnalysis.Emit.EmitOptions? left, Loretta.CodeAnalysis.Emit.EmitOptions? right) -> bool
static Loretta.CodeAnalysis.FileSystemExtensions.Emit(this Loretta.CodeAnalysis.Compilation! compilation, string! outputPath, string? pdbPath = null, string? xmlDocPath = null, string? win32ResourcesPath = null, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.ResourceDescription!>? manifestResources = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.Emit.EmitResult!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IBlockOperation! body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IConstructorBodyOperation! constructorBody, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IFieldInitializerOperation! initializer, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IMethodBodyOperation! methodBody, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IParameterInitializerOperation! initializer, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.Operations.IPropertyInitializerOperation! initializer, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph?
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraphExtensions.GetAnonymousFunctionControlFlowGraphInScope(this Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph! controlFlowGraph, Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation! anonymousFunction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraphExtensions.GetLocalFunctionControlFlowGraphInScope(this Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph! controlFlowGraph, Loretta.CodeAnalysis.IMethodSymbol! localFunction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.FlowAnalysis.ControlFlowGraph!
static Loretta.CodeAnalysis.ISymbolExtensions.GetConstructedReducedFrom(this Loretta.CodeAnalysis.IMethodSymbol! method) -> Loretta.CodeAnalysis.IMethodSymbol?
static Loretta.CodeAnalysis.LocalizableString.explicit operator string?(Loretta.CodeAnalysis.LocalizableString! localizableResource) -> string?
static Loretta.CodeAnalysis.LocalizableString.implicit operator Loretta.CodeAnalysis.LocalizableString!(string? fixedResource) -> Loretta.CodeAnalysis.LocalizableString!
static Loretta.CodeAnalysis.Location.Create(Loretta.CodeAnalysis.SyntaxTree! syntaxTree, Loretta.CodeAnalysis.Text.TextSpan textSpan) -> Loretta.CodeAnalysis.Location!
static Loretta.CodeAnalysis.Location.Create(string! filePath, Loretta.CodeAnalysis.Text.TextSpan textSpan, Loretta.CodeAnalysis.Text.LinePositionSpan lineSpan) -> Loretta.CodeAnalysis.Location!
static Loretta.CodeAnalysis.Location.None.get -> Loretta.CodeAnalysis.Location!
static Loretta.CodeAnalysis.Location.operator !=(Loretta.CodeAnalysis.Location? left, Loretta.CodeAnalysis.Location? right) -> bool
static Loretta.CodeAnalysis.Location.operator ==(Loretta.CodeAnalysis.Location? left, Loretta.CodeAnalysis.Location? right) -> bool
static Loretta.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly! assembly) -> Loretta.CodeAnalysis.MetadataReference!
static Loretta.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly! assembly, Loretta.CodeAnalysis.MetadataReferenceProperties properties, Loretta.CodeAnalysis.DocumentationProvider? documentation = null) -> Loretta.CodeAnalysis.MetadataReference!
static Loretta.CodeAnalysis.MetadataReference.CreateFromFile(string! path, Loretta.CodeAnalysis.MetadataReferenceProperties properties = default(Loretta.CodeAnalysis.MetadataReferenceProperties), Loretta.CodeAnalysis.DocumentationProvider? documentation = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
static Loretta.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable<byte>! peImage, Loretta.CodeAnalysis.MetadataReferenceProperties properties = default(Loretta.CodeAnalysis.MetadataReferenceProperties), Loretta.CodeAnalysis.DocumentationProvider? documentation = null, string? filePath = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
static Loretta.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage, Loretta.CodeAnalysis.MetadataReferenceProperties properties = default(Loretta.CodeAnalysis.MetadataReferenceProperties), Loretta.CodeAnalysis.DocumentationProvider? documentation = null, string? filePath = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
static Loretta.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream! peStream, Loretta.CodeAnalysis.MetadataReferenceProperties properties = default(Loretta.CodeAnalysis.MetadataReferenceProperties), Loretta.CodeAnalysis.DocumentationProvider? documentation = null, string? filePath = null) -> Loretta.CodeAnalysis.PortableExecutableReference!
static Loretta.CodeAnalysis.MetadataReferenceProperties.Assembly.get -> Loretta.CodeAnalysis.MetadataReferenceProperties
static Loretta.CodeAnalysis.MetadataReferenceProperties.GlobalAlias.get -> string!
static Loretta.CodeAnalysis.MetadataReferenceProperties.Module.get -> Loretta.CodeAnalysis.MetadataReferenceProperties
static Loretta.CodeAnalysis.MetadataReferenceProperties.operator !=(Loretta.CodeAnalysis.MetadataReferenceProperties left, Loretta.CodeAnalysis.MetadataReferenceProperties right) -> bool
static Loretta.CodeAnalysis.MetadataReferenceProperties.operator ==(Loretta.CodeAnalysis.MetadataReferenceProperties left, Loretta.CodeAnalysis.MetadataReferenceProperties right) -> bool
static Loretta.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! firstStatement, Loretta.CodeAnalysis.SyntaxNode! lastStatement) -> Loretta.CodeAnalysis.ControlFlowAnalysis!
static Loretta.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! statement) -> Loretta.CodeAnalysis.ControlFlowAnalysis!
static Loretta.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! firstStatement, Loretta.CodeAnalysis.SyntaxNode! lastStatement) -> Loretta.CodeAnalysis.DataFlowAnalysis!
static Loretta.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! statementOrExpression) -> Loretta.CodeAnalysis.DataFlowAnalysis!
static Loretta.CodeAnalysis.ModelExtensions.GetAliasInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! nameSyntax, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.IAliasSymbol?
static Loretta.CodeAnalysis.ModelExtensions.GetDeclaredSymbol(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.ISymbol?
static Loretta.CodeAnalysis.ModelExtensions.GetMemberGroup(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISymbol!>
static Loretta.CodeAnalysis.ModelExtensions.GetSpeculativeAliasInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, int position, Loretta.CodeAnalysis.SyntaxNode! nameSyntax, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.IAliasSymbol?
static Loretta.CodeAnalysis.ModelExtensions.GetSpeculativeSymbolInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, int position, Loretta.CodeAnalysis.SyntaxNode! expression, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.SymbolInfo
static Loretta.CodeAnalysis.ModelExtensions.GetSpeculativeTypeInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, int position, Loretta.CodeAnalysis.SyntaxNode! expression, Loretta.CodeAnalysis.SpeculativeBindingOption bindingOption) -> Loretta.CodeAnalysis.TypeInfo
static Loretta.CodeAnalysis.ModelExtensions.GetSymbolInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.SymbolInfo
static Loretta.CodeAnalysis.ModelExtensions.GetTypeInfo(this Loretta.CodeAnalysis.SemanticModel! semanticModel, Loretta.CodeAnalysis.SyntaxNode! node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.TypeInfo
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromFile(string! path) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Generic.IEnumerable<byte>! peImage) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromImage(System.IntPtr peImage, int size) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromMetadata(System.IntPtr metadata, int size) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream! peStream, bool leaveOpen = false) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream! peStream, System.Reflection.PortableExecutable.PEStreamOptions options) -> Loretta.CodeAnalysis.ModuleMetadata!
static Loretta.CodeAnalysis.NullableContextExtensions.AnnotationsEnabled(this Loretta.CodeAnalysis.NullableContext context) -> bool
static Loretta.CodeAnalysis.NullableContextExtensions.AnnotationsInherited(this Loretta.CodeAnalysis.NullableContext context) -> bool
static Loretta.CodeAnalysis.NullableContextExtensions.WarningsEnabled(this Loretta.CodeAnalysis.NullableContext context) -> bool
static Loretta.CodeAnalysis.NullableContextExtensions.WarningsInherited(this Loretta.CodeAnalysis.NullableContext context) -> bool
static Loretta.CodeAnalysis.NullableContextOptionsExtensions.AnnotationsEnabled(this Loretta.CodeAnalysis.NullableContextOptions context) -> bool
static Loretta.CodeAnalysis.NullableContextOptionsExtensions.WarningsEnabled(this Loretta.CodeAnalysis.NullableContextOptions context) -> bool
static Loretta.CodeAnalysis.Operations.OperationExtensions.Descendants(this Loretta.CodeAnalysis.IOperation? operation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.IOperation!>!
static Loretta.CodeAnalysis.Operations.OperationExtensions.DescendantsAndSelf(this Loretta.CodeAnalysis.IOperation? operation) -> System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.IOperation!>!
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(this Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation! dynamicOperation, int index) -> string?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(this Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation! dynamicOperation, int index) -> string?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(this Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation! dynamicOperation, int index) -> string?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(this Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation! dynamicOperation, int index) -> Loretta.CodeAnalysis.RefKind?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(this Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation! dynamicOperation, int index) -> Loretta.CodeAnalysis.RefKind?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(this Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation! dynamicOperation, int index) -> Loretta.CodeAnalysis.RefKind?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetCorrespondingOperation(this Loretta.CodeAnalysis.Operations.IBranchOperation! operation) -> Loretta.CodeAnalysis.IOperation?
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetDeclaredVariables(this Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation! declarationGroup) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetDeclaredVariables(this Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation! declaration) -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ILocalSymbol!>
static Loretta.CodeAnalysis.Operations.OperationExtensions.GetVariableInitializer(this Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation! declarationOperation) -> Loretta.CodeAnalysis.Operations.IVariableInitializerOperation?
static Loretta.CodeAnalysis.Optional<T>.implicit operator Loretta.CodeAnalysis.Optional<T>(T value) -> Loretta.CodeAnalysis.Optional<T>
static Loretta.CodeAnalysis.ParseOptions.operator !=(Loretta.CodeAnalysis.ParseOptions? left, Loretta.CodeAnalysis.ParseOptions? right) -> bool
static Loretta.CodeAnalysis.ParseOptions.operator ==(Loretta.CodeAnalysis.ParseOptions? left, Loretta.CodeAnalysis.ParseOptions? right) -> bool
static Loretta.CodeAnalysis.RuleSet.GetDiagnosticOptionsFromRulesetFile(string? rulesetFileFullPath, out System.Collections.Generic.Dictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>! specificDiagnosticOptions) -> Loretta.CodeAnalysis.ReportDiagnostic
static Loretta.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile(string! filePath) -> System.Collections.Immutable.ImmutableArray<string!>
static Loretta.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile(string! filePath) -> Loretta.CodeAnalysis.RuleSet!
static Loretta.CodeAnalysis.SarifVersionFacts.TryParse(string! version, out Loretta.CodeAnalysis.SarifVersion result) -> bool
static Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.implicit operator Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.SyntaxNode!>(Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> nodes) -> Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.SyntaxNode!>
static Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.implicit operator Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.SyntaxNode!> nodes) -> Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!>
static Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.operator !=(Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> left, Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> right) -> bool
static Loretta.CodeAnalysis.SeparatedSyntaxList<TNode>.operator ==(Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> left, Loretta.CodeAnalysis.SeparatedSyntaxList<TNode!> right) -> bool
static Loretta.CodeAnalysis.SourceFileResolver.Default.get -> Loretta.CodeAnalysis.SourceFileResolver!
static Loretta.CodeAnalysis.SubsystemVersion.Create(int major, int minor) -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.None.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.TryParse(string! str, out Loretta.CodeAnalysis.SubsystemVersion version) -> bool
static Loretta.CodeAnalysis.SubsystemVersion.Windows2000.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.Windows7.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.Windows8.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.WindowsVista.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SubsystemVersion.WindowsXP.get -> Loretta.CodeAnalysis.SubsystemVersion
static Loretta.CodeAnalysis.SymbolDisplayExtensions.ToDisplayString(this System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.SymbolDisplayPart> parts) -> string!
static Loretta.CodeAnalysis.SymbolDisplayFormat.CSharpErrorMessageFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SymbolDisplayFormat.CSharpShortErrorMessageFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SymbolDisplayFormat.FullyQualifiedFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SymbolDisplayFormat.MinimallyQualifiedFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SymbolDisplayFormat.VisualBasicErrorMessageFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SymbolDisplayFormat.VisualBasicShortErrorMessageFormat.get -> Loretta.CodeAnalysis.SymbolDisplayFormat!
static Loretta.CodeAnalysis.SyntaxAnnotation.ElasticAnnotation.get -> Loretta.CodeAnalysis.SyntaxAnnotation!
static Loretta.CodeAnalysis.SyntaxAnnotation.operator !=(Loretta.CodeAnalysis.SyntaxAnnotation? left, Loretta.CodeAnalysis.SyntaxAnnotation? right) -> bool
static Loretta.CodeAnalysis.SyntaxAnnotation.operator ==(Loretta.CodeAnalysis.SyntaxAnnotation? left, Loretta.CodeAnalysis.SyntaxAnnotation? right) -> bool
static Loretta.CodeAnalysis.SyntaxList<TNode>.implicit operator Loretta.CodeAnalysis.SyntaxList<Loretta.CodeAnalysis.SyntaxNode!>(Loretta.CodeAnalysis.SyntaxList<TNode!> nodes) -> Loretta.CodeAnalysis.SyntaxList<Loretta.CodeAnalysis.SyntaxNode!>
static Loretta.CodeAnalysis.SyntaxList<TNode>.implicit operator Loretta.CodeAnalysis.SyntaxList<TNode!>(Loretta.CodeAnalysis.SyntaxList<Loretta.CodeAnalysis.SyntaxNode!> nodes) -> Loretta.CodeAnalysis.SyntaxList<TNode!>
static Loretta.CodeAnalysis.SyntaxList<TNode>.operator !=(Loretta.CodeAnalysis.SyntaxList<TNode!> left, Loretta.CodeAnalysis.SyntaxList<TNode!> right) -> bool
static Loretta.CodeAnalysis.SyntaxList<TNode>.operator ==(Loretta.CodeAnalysis.SyntaxList<TNode!> left, Loretta.CodeAnalysis.SyntaxList<TNode!> right) -> bool
static Loretta.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNode<TNode>(this Loretta.CodeAnalysis.SyntaxNode! root, TNode! node) -> TNode!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes<TNode>(this Loretta.CodeAnalysis.SyntaxNode! root, System.Collections.Generic.IEnumerable<TNode!>! nodes) -> System.Collections.Generic.IEnumerable<TNode!>!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes<TNode>(this Loretta.CodeAnalysis.SyntaxNode! root, TNode! node) -> System.Collections.Generic.IEnumerable<TNode!>!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertNodesAfter<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxNode! nodeInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! newNodes) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertNodesBefore<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxNode! nodeInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! newNodes) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertTokensAfter<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! newTokens) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertTokensBefore<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! newTokens) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaAfter<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxTrivia trivia, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! newTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaBefore<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxTrivia trivia, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! newTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.NormalizeWhitespace<TNode>(this TNode! node, string! indentation = "    ", string! eol = "\r\n", bool elasticTrivia = false) -> TNode!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.NormalizeWhitespace<TNode>(this TNode! node, string! indentation, bool elasticTrivia) -> TNode!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.RemoveNode<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.SyntaxRemoveOptions options) -> TRoot?
static Loretta.CodeAnalysis.SyntaxNodeExtensions.RemoveNodes<TRoot>(this TRoot! root, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! nodes, Loretta.CodeAnalysis.SyntaxRemoveOptions options) -> TRoot?
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxNode! oldNode, Loretta.CodeAnalysis.SyntaxNode! newNode) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxNode! oldNode, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! newNodes) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceNodes<TRoot, TNode>(this TRoot! root, System.Collections.Generic.IEnumerable<TNode!>! nodes, System.Func<TNode!, TNode!, Loretta.CodeAnalysis.SyntaxNode!>! computeReplacementNode) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceSyntax<TRoot>(this TRoot! root, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! nodes, System.Func<Loretta.CodeAnalysis.SyntaxNode!, Loretta.CodeAnalysis.SyntaxNode!, Loretta.CodeAnalysis.SyntaxNode!>! computeReplacementNode, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! tokens, System.Func<Loretta.CodeAnalysis.SyntaxToken, Loretta.CodeAnalysis.SyntaxToken, Loretta.CodeAnalysis.SyntaxToken>! computeReplacementToken, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia, System.Func<Loretta.CodeAnalysis.SyntaxTrivia, Loretta.CodeAnalysis.SyntaxTrivia, Loretta.CodeAnalysis.SyntaxTrivia>! computeReplacementTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxToken oldToken, Loretta.CodeAnalysis.SyntaxToken newToken) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! newTokens) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceTokens<TRoot>(this TRoot! root, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxToken>! tokens, System.Func<Loretta.CodeAnalysis.SyntaxToken, Loretta.CodeAnalysis.SyntaxToken, Loretta.CodeAnalysis.SyntaxToken>! computeReplacementToken) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxTrivia oldTrivia, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! newTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot! root, Loretta.CodeAnalysis.SyntaxTrivia trivia, Loretta.CodeAnalysis.SyntaxTrivia newTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot! root, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>! trivia, System.Func<Loretta.CodeAnalysis.SyntaxTrivia, Loretta.CodeAnalysis.SyntaxTrivia, Loretta.CodeAnalysis.SyntaxTrivia>! computeReplacementTrivia) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.TrackNodes<TRoot>(this TRoot! root, params Loretta.CodeAnalysis.SyntaxNode![]! nodes) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.TrackNodes<TRoot>(this TRoot! root, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxNode!>! nodes) -> TRoot!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax! node, Loretta.CodeAnalysis.SyntaxTriviaList trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax! node, params Loretta.CodeAnalysis.SyntaxTrivia[]? trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax! node, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>? trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithoutLeadingTrivia<TSyntax>(this TSyntax! node) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithoutTrailingTrivia<TSyntax>(this TSyntax! node) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithoutTrivia(this Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxToken
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithoutTrivia<TSyntax>(this TSyntax! syntax) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax! node, Loretta.CodeAnalysis.SyntaxTriviaList trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax! node, params Loretta.CodeAnalysis.SyntaxTrivia[]? trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax! node, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.SyntaxTrivia>? trivia) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeExtensions.WithTriviaFrom<TSyntax>(this TSyntax! syntax, Loretta.CodeAnalysis.SyntaxNode! node) -> TSyntax!
static Loretta.CodeAnalysis.SyntaxNodeOrToken.explicit operator Loretta.CodeAnalysis.SyntaxNode?(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> Loretta.CodeAnalysis.SyntaxNode?
static Loretta.CodeAnalysis.SyntaxNodeOrToken.explicit operator Loretta.CodeAnalysis.SyntaxToken(Loretta.CodeAnalysis.SyntaxNodeOrToken nodeOrToken) -> Loretta.CodeAnalysis.SyntaxToken
static Loretta.CodeAnalysis.SyntaxNodeOrToken.GetFirstChildIndexSpanningPosition(Loretta.CodeAnalysis.SyntaxNode! node, int position) -> int
static Loretta.CodeAnalysis.SyntaxNodeOrToken.implicit operator Loretta.CodeAnalysis.SyntaxNodeOrToken(Loretta.CodeAnalysis.SyntaxNode? node) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
static Loretta.CodeAnalysis.SyntaxNodeOrToken.implicit operator Loretta.CodeAnalysis.SyntaxNodeOrToken(Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
static Loretta.CodeAnalysis.SyntaxNodeOrToken.operator !=(Loretta.CodeAnalysis.SyntaxNodeOrToken left, Loretta.CodeAnalysis.SyntaxNodeOrToken right) -> bool
static Loretta.CodeAnalysis.SyntaxNodeOrToken.operator ==(Loretta.CodeAnalysis.SyntaxNodeOrToken left, Loretta.CodeAnalysis.SyntaxNodeOrToken right) -> bool
static Loretta.CodeAnalysis.SyntaxNodeOrTokenList.operator !=(Loretta.CodeAnalysis.SyntaxNodeOrTokenList left, Loretta.CodeAnalysis.SyntaxNodeOrTokenList right) -> bool
static Loretta.CodeAnalysis.SyntaxNodeOrTokenList.operator ==(Loretta.CodeAnalysis.SyntaxNodeOrTokenList left, Loretta.CodeAnalysis.SyntaxNodeOrTokenList right) -> bool
static Loretta.CodeAnalysis.SyntaxToken.operator !=(Loretta.CodeAnalysis.SyntaxToken left, Loretta.CodeAnalysis.SyntaxToken right) -> bool
static Loretta.CodeAnalysis.SyntaxToken.operator ==(Loretta.CodeAnalysis.SyntaxToken left, Loretta.CodeAnalysis.SyntaxToken right) -> bool
static Loretta.CodeAnalysis.SyntaxTokenList.Create(Loretta.CodeAnalysis.SyntaxToken token) -> Loretta.CodeAnalysis.SyntaxTokenList
static Loretta.CodeAnalysis.SyntaxTokenList.operator !=(Loretta.CodeAnalysis.SyntaxTokenList left, Loretta.CodeAnalysis.SyntaxTokenList right) -> bool
static Loretta.CodeAnalysis.SyntaxTokenList.operator ==(Loretta.CodeAnalysis.SyntaxTokenList left, Loretta.CodeAnalysis.SyntaxTokenList right) -> bool
static Loretta.CodeAnalysis.SyntaxTrivia.operator !=(Loretta.CodeAnalysis.SyntaxTrivia left, Loretta.CodeAnalysis.SyntaxTrivia right) -> bool
static Loretta.CodeAnalysis.SyntaxTrivia.operator ==(Loretta.CodeAnalysis.SyntaxTrivia left, Loretta.CodeAnalysis.SyntaxTrivia right) -> bool
static Loretta.CodeAnalysis.SyntaxTriviaList.Create(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> Loretta.CodeAnalysis.SyntaxTriviaList
static Loretta.CodeAnalysis.SyntaxTriviaList.Empty.get -> Loretta.CodeAnalysis.SyntaxTriviaList
static Loretta.CodeAnalysis.SyntaxTriviaList.operator !=(Loretta.CodeAnalysis.SyntaxTriviaList left, Loretta.CodeAnalysis.SyntaxTriviaList right) -> bool
static Loretta.CodeAnalysis.SyntaxTriviaList.operator ==(Loretta.CodeAnalysis.SyntaxTriviaList left, Loretta.CodeAnalysis.SyntaxTriviaList right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator !=(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator <(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator <=(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator ==(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator >(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.operator >=(Loretta.CodeAnalysis.Text.LinePosition left, Loretta.CodeAnalysis.Text.LinePosition right) -> bool
static Loretta.CodeAnalysis.Text.LinePosition.Zero.get -> Loretta.CodeAnalysis.Text.LinePosition
static Loretta.CodeAnalysis.Text.LinePositionSpan.operator !=(Loretta.CodeAnalysis.Text.LinePositionSpan left, Loretta.CodeAnalysis.Text.LinePositionSpan right) -> bool
static Loretta.CodeAnalysis.Text.LinePositionSpan.operator ==(Loretta.CodeAnalysis.Text.LinePositionSpan left, Loretta.CodeAnalysis.Text.LinePositionSpan right) -> bool
static Loretta.CodeAnalysis.Text.SourceText.From(byte[]! buffer, int length, System.Text.Encoding? encoding = null, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, bool throwIfBinaryDetected = false, bool canBeEmbedded = false) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.SourceText.From(byte[]! buffer, int length, System.Text.Encoding? encoding, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm, bool throwIfBinaryDetected) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.SourceText.From(string! text, System.Text.Encoding? encoding = null, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.SourceText.From(System.IO.Stream! stream, System.Text.Encoding? encoding = null, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, bool throwIfBinaryDetected = false, bool canBeEmbedded = false) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.SourceText.From(System.IO.Stream! stream, System.Text.Encoding? encoding, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm, bool throwIfBinaryDetected) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.SourceText.From(System.IO.TextReader! reader, int length, System.Text.Encoding? encoding = null, Loretta.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Loretta.CodeAnalysis.Text.SourceHashAlgorithm.Sha1) -> Loretta.CodeAnalysis.Text.SourceText!
static Loretta.CodeAnalysis.Text.TextChange.implicit operator Loretta.CodeAnalysis.Text.TextChangeRange(Loretta.CodeAnalysis.Text.TextChange change) -> Loretta.CodeAnalysis.Text.TextChangeRange
static Loretta.CodeAnalysis.Text.TextChange.NoChanges.get -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Text.TextChange>!
static Loretta.CodeAnalysis.Text.TextChange.operator !=(Loretta.CodeAnalysis.Text.TextChange left, Loretta.CodeAnalysis.Text.TextChange right) -> bool
static Loretta.CodeAnalysis.Text.TextChange.operator ==(Loretta.CodeAnalysis.Text.TextChange left, Loretta.CodeAnalysis.Text.TextChange right) -> bool
static Loretta.CodeAnalysis.Text.TextChangeRange.Collapse(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Text.TextChangeRange>! changes) -> Loretta.CodeAnalysis.Text.TextChangeRange
static Loretta.CodeAnalysis.Text.TextChangeRange.NoChanges.get -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Text.TextChangeRange>!
static Loretta.CodeAnalysis.Text.TextChangeRange.operator !=(Loretta.CodeAnalysis.Text.TextChangeRange left, Loretta.CodeAnalysis.Text.TextChangeRange right) -> bool
static Loretta.CodeAnalysis.Text.TextChangeRange.operator ==(Loretta.CodeAnalysis.Text.TextChangeRange left, Loretta.CodeAnalysis.Text.TextChangeRange right) -> bool
static Loretta.CodeAnalysis.Text.TextLine.FromSpan(Loretta.CodeAnalysis.Text.SourceText! text, Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Text.TextLine
static Loretta.CodeAnalysis.Text.TextLine.operator !=(Loretta.CodeAnalysis.Text.TextLine left, Loretta.CodeAnalysis.Text.TextLine right) -> bool
static Loretta.CodeAnalysis.Text.TextLine.operator ==(Loretta.CodeAnalysis.Text.TextLine left, Loretta.CodeAnalysis.Text.TextLine right) -> bool
static Loretta.CodeAnalysis.Text.TextSpan.FromBounds(int start, int end) -> Loretta.CodeAnalysis.Text.TextSpan
static Loretta.CodeAnalysis.Text.TextSpan.operator !=(Loretta.CodeAnalysis.Text.TextSpan left, Loretta.CodeAnalysis.Text.TextSpan right) -> bool
static Loretta.CodeAnalysis.Text.TextSpan.operator ==(Loretta.CodeAnalysis.Text.TextSpan left, Loretta.CodeAnalysis.Text.TextSpan right) -> bool
static Loretta.CodeAnalysis.XmlFileResolver.Default.get -> Loretta.CodeAnalysis.XmlFileResolver!
static readonly Loretta.CodeAnalysis.SymbolEqualityComparer.Default -> Loretta.CodeAnalysis.SymbolEqualityComparer!
static readonly Loretta.CodeAnalysis.SymbolEqualityComparer.IncludeNullability -> Loretta.CodeAnalysis.SymbolEqualityComparer!
static readonly Loretta.CodeAnalysis.SyntaxTree.EmptyDiagnosticOptions -> System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>!
virtual Loretta.CodeAnalysis.Diagnostic.DefaultSeverity.get -> Loretta.CodeAnalysis.DiagnosticSeverity
virtual Loretta.CodeAnalysis.Diagnostic.Properties.get -> System.Collections.Immutable.ImmutableDictionary<string!, string?>!
virtual Loretta.CodeAnalysis.DiagnosticFormatter.Format(Loretta.CodeAnalysis.Diagnostic! diagnostic, System.IFormatProvider? formatter = null) -> string!
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.ConfigureGeneratedCodeAnalysis(Loretta.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags analysisMode) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.EnableConcurrentExecution() -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterAdditionalFileAction(System.Action<Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.OperationKind> operationKinds) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationBlockStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext!>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext!>! action, Loretta.CodeAnalysis.SymbolKind symbolKind) -> void
virtual Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.Display.get -> string!
virtual Loretta.CodeAnalysis.Diagnostics.AnalyzerReference.GetGenerators() -> System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.ISourceGenerator!>
virtual Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterAdditionalFileAction(System.Action<Loretta.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationAnalysisContext>! action, System.Collections.Immutable.ImmutableArray<Loretta.CodeAnalysis.OperationKind> operationKinds) -> void
virtual Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationBlockAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationBlockStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext!>! action) -> void
virtual Loretta.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolStartAction(System.Action<Loretta.CodeAnalysis.Diagnostics.SymbolStartAnalysisContext!>! action, Loretta.CodeAnalysis.SymbolKind symbolKind) -> void
virtual Loretta.CodeAnalysis.Location.GetLineSpan() -> Loretta.CodeAnalysis.FileLinePositionSpan
virtual Loretta.CodeAnalysis.Location.GetMappedLineSpan() -> Loretta.CodeAnalysis.FileLinePositionSpan
virtual Loretta.CodeAnalysis.Location.SourceSpan.get -> Loretta.CodeAnalysis.Text.TextSpan
virtual Loretta.CodeAnalysis.Location.SourceTree.get -> Loretta.CodeAnalysis.SyntaxTree?
virtual Loretta.CodeAnalysis.MetadataReference.Display.get -> string?
virtual Loretta.CodeAnalysis.MetadataReferenceResolver.ResolveMissingAssemblies.get -> bool
virtual Loretta.CodeAnalysis.MetadataReferenceResolver.ResolveMissingAssembly(Loretta.CodeAnalysis.MetadataReference! definition, Loretta.CodeAnalysis.AssemblyIdentity! referenceIdentity) -> Loretta.CodeAnalysis.PortableExecutableReference?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.DefaultVisit(Loretta.CodeAnalysis.IOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.Visit(Loretta.CodeAnalysis.IOperation? operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitAddressOf(Loretta.CodeAnalysis.Operations.IAddressOfOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitAnonymousFunction(Loretta.CodeAnalysis.Operations.IAnonymousFunctionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitAnonymousObjectCreation(Loretta.CodeAnalysis.Operations.IAnonymousObjectCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitArgument(Loretta.CodeAnalysis.Operations.IArgumentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitArrayCreation(Loretta.CodeAnalysis.Operations.IArrayCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitArrayElementReference(Loretta.CodeAnalysis.Operations.IArrayElementReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitArrayInitializer(Loretta.CodeAnalysis.Operations.IArrayInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitAwait(Loretta.CodeAnalysis.Operations.IAwaitOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitBinaryOperator(Loretta.CodeAnalysis.Operations.IBinaryOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitBinaryPattern(Loretta.CodeAnalysis.Operations.IBinaryPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitBlock(Loretta.CodeAnalysis.Operations.IBlockOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitBranch(Loretta.CodeAnalysis.Operations.IBranchOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCatchClause(Loretta.CodeAnalysis.Operations.ICatchClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCaughtException(Loretta.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCoalesce(Loretta.CodeAnalysis.Operations.ICoalesceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCoalesceAssignment(Loretta.CodeAnalysis.Operations.ICoalesceAssignmentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCollectionElementInitializer(Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitCompoundAssignment(Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConditional(Loretta.CodeAnalysis.Operations.IConditionalOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConditionalAccess(Loretta.CodeAnalysis.Operations.IConditionalAccessOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConditionalAccessInstance(Loretta.CodeAnalysis.Operations.IConditionalAccessInstanceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConstantPattern(Loretta.CodeAnalysis.Operations.IConstantPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConstructorBodyOperation(Loretta.CodeAnalysis.Operations.IConstructorBodyOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitConversion(Loretta.CodeAnalysis.Operations.IConversionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDeclarationExpression(Loretta.CodeAnalysis.Operations.IDeclarationExpressionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDeclarationPattern(Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDeconstructionAssignment(Loretta.CodeAnalysis.Operations.IDeconstructionAssignmentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDefaultCaseClause(Loretta.CodeAnalysis.Operations.IDefaultCaseClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDefaultValue(Loretta.CodeAnalysis.Operations.IDefaultValueOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDelegateCreation(Loretta.CodeAnalysis.Operations.IDelegateCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDiscardOperation(Loretta.CodeAnalysis.Operations.IDiscardOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDiscardPattern(Loretta.CodeAnalysis.Operations.IDiscardPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDynamicIndexerAccess(Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDynamicInvocation(Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDynamicMemberReference(Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitDynamicObjectCreation(Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitEmpty(Loretta.CodeAnalysis.Operations.IEmptyOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitEnd(Loretta.CodeAnalysis.Operations.IEndOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitEventAssignment(Loretta.CodeAnalysis.Operations.IEventAssignmentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitEventReference(Loretta.CodeAnalysis.Operations.IEventReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitExpressionStatement(Loretta.CodeAnalysis.Operations.IExpressionStatementOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitFieldInitializer(Loretta.CodeAnalysis.Operations.IFieldInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitFieldReference(Loretta.CodeAnalysis.Operations.IFieldReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitFlowAnonymousFunction(Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitFlowCapture(Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitFlowCaptureReference(Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitForEachLoop(Loretta.CodeAnalysis.Operations.IForEachLoopOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitForLoop(Loretta.CodeAnalysis.Operations.IForLoopOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitForToLoop(Loretta.CodeAnalysis.Operations.IForToLoopOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitIncrementOrDecrement(Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInstanceReference(Loretta.CodeAnalysis.Operations.IInstanceReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInterpolatedString(Loretta.CodeAnalysis.Operations.IInterpolatedStringOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInterpolatedStringText(Loretta.CodeAnalysis.Operations.IInterpolatedStringTextOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInterpolation(Loretta.CodeAnalysis.Operations.IInterpolationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInvalid(Loretta.CodeAnalysis.Operations.IInvalidOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitInvocation(Loretta.CodeAnalysis.Operations.IInvocationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitIsNull(Loretta.CodeAnalysis.FlowAnalysis.IIsNullOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitIsPattern(Loretta.CodeAnalysis.Operations.IIsPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitIsType(Loretta.CodeAnalysis.Operations.IIsTypeOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitLabeled(Loretta.CodeAnalysis.Operations.ILabeledOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitLiteral(Loretta.CodeAnalysis.Operations.ILiteralOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitLocalFunction(Loretta.CodeAnalysis.Operations.ILocalFunctionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitLocalReference(Loretta.CodeAnalysis.Operations.ILocalReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitLock(Loretta.CodeAnalysis.Operations.ILockOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitMemberInitializer(Loretta.CodeAnalysis.Operations.IMemberInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitMethodBodyOperation(Loretta.CodeAnalysis.Operations.IMethodBodyOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitMethodReference(Loretta.CodeAnalysis.Operations.IMethodReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitNameOf(Loretta.CodeAnalysis.Operations.INameOfOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitNegatedPattern(Loretta.CodeAnalysis.Operations.INegatedPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitObjectCreation(Loretta.CodeAnalysis.Operations.IObjectCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitObjectOrCollectionInitializer(Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitOmittedArgument(Loretta.CodeAnalysis.Operations.IOmittedArgumentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitParameterInitializer(Loretta.CodeAnalysis.Operations.IParameterInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitParameterReference(Loretta.CodeAnalysis.Operations.IParameterReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitParenthesized(Loretta.CodeAnalysis.Operations.IParenthesizedOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitPatternCaseClause(Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitPropertyInitializer(Loretta.CodeAnalysis.Operations.IPropertyInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitPropertyReference(Loretta.CodeAnalysis.Operations.IPropertyReferenceOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitPropertySubpattern(Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRaiseEvent(Loretta.CodeAnalysis.Operations.IRaiseEventOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRangeCaseClause(Loretta.CodeAnalysis.Operations.IRangeCaseClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRangeOperation(Loretta.CodeAnalysis.Operations.IRangeOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRecursivePattern(Loretta.CodeAnalysis.Operations.IRecursivePatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitReDim(Loretta.CodeAnalysis.Operations.IReDimOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitReDimClause(Loretta.CodeAnalysis.Operations.IReDimClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRelationalCaseClause(Loretta.CodeAnalysis.Operations.IRelationalCaseClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitRelationalPattern(Loretta.CodeAnalysis.Operations.IRelationalPatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitReturn(Loretta.CodeAnalysis.Operations.IReturnOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSimpleAssignment(Loretta.CodeAnalysis.Operations.ISimpleAssignmentOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSingleValueCaseClause(Loretta.CodeAnalysis.Operations.ISingleValueCaseClauseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSizeOf(Loretta.CodeAnalysis.Operations.ISizeOfOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitStaticLocalInitializationSemaphore(Loretta.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitStop(Loretta.CodeAnalysis.Operations.IStopOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSwitch(Loretta.CodeAnalysis.Operations.ISwitchOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSwitchCase(Loretta.CodeAnalysis.Operations.ISwitchCaseOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSwitchExpression(Loretta.CodeAnalysis.Operations.ISwitchExpressionOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitSwitchExpressionArm(Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitThrow(Loretta.CodeAnalysis.Operations.IThrowOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTranslatedQuery(Loretta.CodeAnalysis.Operations.ITranslatedQueryOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTry(Loretta.CodeAnalysis.Operations.ITryOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTuple(Loretta.CodeAnalysis.Operations.ITupleOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTupleBinaryOperator(Loretta.CodeAnalysis.Operations.ITupleBinaryOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTypeOf(Loretta.CodeAnalysis.Operations.ITypeOfOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTypeParameterObjectCreation(Loretta.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitTypePattern(Loretta.CodeAnalysis.Operations.ITypePatternOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitUnaryOperator(Loretta.CodeAnalysis.Operations.IUnaryOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitUsing(Loretta.CodeAnalysis.Operations.IUsingOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitUsingDeclaration(Loretta.CodeAnalysis.Operations.IUsingDeclarationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclaration(Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclarationGroup(Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclarator(Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitVariableInitializer(Loretta.CodeAnalysis.Operations.IVariableInitializerOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitWhileLoop(Loretta.CodeAnalysis.Operations.IWhileLoopOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor.VisitWith(Loretta.CodeAnalysis.Operations.IWithOperation! operation) -> void
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.DefaultVisit(Loretta.CodeAnalysis.IOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.Visit(Loretta.CodeAnalysis.IOperation? operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitAddressOf(Loretta.CodeAnalysis.Operations.IAddressOfOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitAnonymousFunction(Loretta.CodeAnalysis.Operations.IAnonymousFunctionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitAnonymousObjectCreation(Loretta.CodeAnalysis.Operations.IAnonymousObjectCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitArgument(Loretta.CodeAnalysis.Operations.IArgumentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitArrayCreation(Loretta.CodeAnalysis.Operations.IArrayCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitArrayElementReference(Loretta.CodeAnalysis.Operations.IArrayElementReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitArrayInitializer(Loretta.CodeAnalysis.Operations.IArrayInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitAwait(Loretta.CodeAnalysis.Operations.IAwaitOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitBinaryOperator(Loretta.CodeAnalysis.Operations.IBinaryOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitBinaryPattern(Loretta.CodeAnalysis.Operations.IBinaryPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitBlock(Loretta.CodeAnalysis.Operations.IBlockOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitBranch(Loretta.CodeAnalysis.Operations.IBranchOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCatchClause(Loretta.CodeAnalysis.Operations.ICatchClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCaughtException(Loretta.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCoalesce(Loretta.CodeAnalysis.Operations.ICoalesceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCoalesceAssignment(Loretta.CodeAnalysis.Operations.ICoalesceAssignmentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCollectionElementInitializer(Loretta.CodeAnalysis.Operations.ICollectionElementInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitCompoundAssignment(Loretta.CodeAnalysis.Operations.ICompoundAssignmentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConditional(Loretta.CodeAnalysis.Operations.IConditionalOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConditionalAccess(Loretta.CodeAnalysis.Operations.IConditionalAccessOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConditionalAccessInstance(Loretta.CodeAnalysis.Operations.IConditionalAccessInstanceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConstantPattern(Loretta.CodeAnalysis.Operations.IConstantPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConstructorBodyOperation(Loretta.CodeAnalysis.Operations.IConstructorBodyOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitConversion(Loretta.CodeAnalysis.Operations.IConversionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDeclarationExpression(Loretta.CodeAnalysis.Operations.IDeclarationExpressionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDeclarationPattern(Loretta.CodeAnalysis.Operations.IDeclarationPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDeconstructionAssignment(Loretta.CodeAnalysis.Operations.IDeconstructionAssignmentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDefaultCaseClause(Loretta.CodeAnalysis.Operations.IDefaultCaseClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDefaultValue(Loretta.CodeAnalysis.Operations.IDefaultValueOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDelegateCreation(Loretta.CodeAnalysis.Operations.IDelegateCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDiscardOperation(Loretta.CodeAnalysis.Operations.IDiscardOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDiscardPattern(Loretta.CodeAnalysis.Operations.IDiscardPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDynamicIndexerAccess(Loretta.CodeAnalysis.Operations.IDynamicIndexerAccessOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDynamicInvocation(Loretta.CodeAnalysis.Operations.IDynamicInvocationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDynamicMemberReference(Loretta.CodeAnalysis.Operations.IDynamicMemberReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitDynamicObjectCreation(Loretta.CodeAnalysis.Operations.IDynamicObjectCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitEmpty(Loretta.CodeAnalysis.Operations.IEmptyOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitEnd(Loretta.CodeAnalysis.Operations.IEndOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitEventAssignment(Loretta.CodeAnalysis.Operations.IEventAssignmentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitEventReference(Loretta.CodeAnalysis.Operations.IEventReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitExpressionStatement(Loretta.CodeAnalysis.Operations.IExpressionStatementOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitFieldInitializer(Loretta.CodeAnalysis.Operations.IFieldInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitFieldReference(Loretta.CodeAnalysis.Operations.IFieldReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitFlowAnonymousFunction(Loretta.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitFlowCapture(Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitFlowCaptureReference(Loretta.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitForEachLoop(Loretta.CodeAnalysis.Operations.IForEachLoopOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitForLoop(Loretta.CodeAnalysis.Operations.IForLoopOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitForToLoop(Loretta.CodeAnalysis.Operations.IForToLoopOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitIncrementOrDecrement(Loretta.CodeAnalysis.Operations.IIncrementOrDecrementOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInstanceReference(Loretta.CodeAnalysis.Operations.IInstanceReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInterpolatedString(Loretta.CodeAnalysis.Operations.IInterpolatedStringOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInterpolatedStringText(Loretta.CodeAnalysis.Operations.IInterpolatedStringTextOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInterpolation(Loretta.CodeAnalysis.Operations.IInterpolationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInvalid(Loretta.CodeAnalysis.Operations.IInvalidOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitInvocation(Loretta.CodeAnalysis.Operations.IInvocationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitIsNull(Loretta.CodeAnalysis.FlowAnalysis.IIsNullOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitIsPattern(Loretta.CodeAnalysis.Operations.IIsPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitIsType(Loretta.CodeAnalysis.Operations.IIsTypeOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitLabeled(Loretta.CodeAnalysis.Operations.ILabeledOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitLiteral(Loretta.CodeAnalysis.Operations.ILiteralOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitLocalFunction(Loretta.CodeAnalysis.Operations.ILocalFunctionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitLocalReference(Loretta.CodeAnalysis.Operations.ILocalReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitLock(Loretta.CodeAnalysis.Operations.ILockOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitMemberInitializer(Loretta.CodeAnalysis.Operations.IMemberInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitMethodBodyOperation(Loretta.CodeAnalysis.Operations.IMethodBodyOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitMethodReference(Loretta.CodeAnalysis.Operations.IMethodReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitNameOf(Loretta.CodeAnalysis.Operations.INameOfOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitNegatedPattern(Loretta.CodeAnalysis.Operations.INegatedPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitObjectCreation(Loretta.CodeAnalysis.Operations.IObjectCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitObjectOrCollectionInitializer(Loretta.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitOmittedArgument(Loretta.CodeAnalysis.Operations.IOmittedArgumentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitParameterInitializer(Loretta.CodeAnalysis.Operations.IParameterInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitParameterReference(Loretta.CodeAnalysis.Operations.IParameterReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitParenthesized(Loretta.CodeAnalysis.Operations.IParenthesizedOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitPatternCaseClause(Loretta.CodeAnalysis.Operations.IPatternCaseClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitPropertyInitializer(Loretta.CodeAnalysis.Operations.IPropertyInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitPropertyReference(Loretta.CodeAnalysis.Operations.IPropertyReferenceOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitPropertySubpattern(Loretta.CodeAnalysis.Operations.IPropertySubpatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRaiseEvent(Loretta.CodeAnalysis.Operations.IRaiseEventOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRangeCaseClause(Loretta.CodeAnalysis.Operations.IRangeCaseClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRangeOperation(Loretta.CodeAnalysis.Operations.IRangeOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRecursivePattern(Loretta.CodeAnalysis.Operations.IRecursivePatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitReDim(Loretta.CodeAnalysis.Operations.IReDimOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitReDimClause(Loretta.CodeAnalysis.Operations.IReDimClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRelationalCaseClause(Loretta.CodeAnalysis.Operations.IRelationalCaseClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitRelationalPattern(Loretta.CodeAnalysis.Operations.IRelationalPatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitReturn(Loretta.CodeAnalysis.Operations.IReturnOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSimpleAssignment(Loretta.CodeAnalysis.Operations.ISimpleAssignmentOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSingleValueCaseClause(Loretta.CodeAnalysis.Operations.ISingleValueCaseClauseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSizeOf(Loretta.CodeAnalysis.Operations.ISizeOfOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitStaticLocalInitializationSemaphore(Loretta.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitStop(Loretta.CodeAnalysis.Operations.IStopOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSwitch(Loretta.CodeAnalysis.Operations.ISwitchOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSwitchCase(Loretta.CodeAnalysis.Operations.ISwitchCaseOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSwitchExpression(Loretta.CodeAnalysis.Operations.ISwitchExpressionOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitSwitchExpressionArm(Loretta.CodeAnalysis.Operations.ISwitchExpressionArmOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitThrow(Loretta.CodeAnalysis.Operations.IThrowOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTranslatedQuery(Loretta.CodeAnalysis.Operations.ITranslatedQueryOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTry(Loretta.CodeAnalysis.Operations.ITryOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTuple(Loretta.CodeAnalysis.Operations.ITupleOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTupleBinaryOperator(Loretta.CodeAnalysis.Operations.ITupleBinaryOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTypeOf(Loretta.CodeAnalysis.Operations.ITypeOfOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTypeParameterObjectCreation(Loretta.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitTypePattern(Loretta.CodeAnalysis.Operations.ITypePatternOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitUnaryOperator(Loretta.CodeAnalysis.Operations.IUnaryOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitUsing(Loretta.CodeAnalysis.Operations.IUsingOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitUsingDeclaration(Loretta.CodeAnalysis.Operations.IUsingDeclarationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitVariableDeclaration(Loretta.CodeAnalysis.Operations.IVariableDeclarationOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitVariableDeclarationGroup(Loretta.CodeAnalysis.Operations.IVariableDeclarationGroupOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitVariableDeclarator(Loretta.CodeAnalysis.Operations.IVariableDeclaratorOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitVariableInitializer(Loretta.CodeAnalysis.Operations.IVariableInitializerOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitWhileLoop(Loretta.CodeAnalysis.Operations.IWhileLoopOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>.VisitWith(Loretta.CodeAnalysis.Operations.IWithOperation! operation, TArgument argument) -> TResult?
virtual Loretta.CodeAnalysis.SemanticModel.GetTopmostNodeForDiagnosticAnalysis(Loretta.CodeAnalysis.ISymbol! symbol, Loretta.CodeAnalysis.SyntaxNode! declaringSyntax) -> Loretta.CodeAnalysis.SyntaxNode!
virtual Loretta.CodeAnalysis.SemanticModel.IgnoresAccessibility.get -> bool
virtual Loretta.CodeAnalysis.SourceFileResolver.FileExists(string? resolvedPath) -> bool
virtual Loretta.CodeAnalysis.SourceReferenceResolver.ReadText(string! resolvedPath) -> Loretta.CodeAnalysis.Text.SourceText!
virtual Loretta.CodeAnalysis.SymbolVisitor.DefaultVisit(Loretta.CodeAnalysis.ISymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.Visit(Loretta.CodeAnalysis.ISymbol? symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitAlias(Loretta.CodeAnalysis.IAliasSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitArrayType(Loretta.CodeAnalysis.IArrayTypeSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitAssembly(Loretta.CodeAnalysis.IAssemblySymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitDiscard(Loretta.CodeAnalysis.IDiscardSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitDynamicType(Loretta.CodeAnalysis.IDynamicTypeSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitEvent(Loretta.CodeAnalysis.IEventSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitField(Loretta.CodeAnalysis.IFieldSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitFunctionPointerType(Loretta.CodeAnalysis.IFunctionPointerTypeSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitLabel(Loretta.CodeAnalysis.ILabelSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitLocal(Loretta.CodeAnalysis.ILocalSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitMethod(Loretta.CodeAnalysis.IMethodSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitModule(Loretta.CodeAnalysis.IModuleSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitNamedType(Loretta.CodeAnalysis.INamedTypeSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitNamespace(Loretta.CodeAnalysis.INamespaceSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitParameter(Loretta.CodeAnalysis.IParameterSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitPointerType(Loretta.CodeAnalysis.IPointerTypeSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitProperty(Loretta.CodeAnalysis.IPropertySymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Loretta.CodeAnalysis.IRangeVariableSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Loretta.CodeAnalysis.ITypeParameterSymbol! symbol) -> void
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.DefaultVisit(Loretta.CodeAnalysis.ISymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.Visit(Loretta.CodeAnalysis.ISymbol? symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitAlias(Loretta.CodeAnalysis.IAliasSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitArrayType(Loretta.CodeAnalysis.IArrayTypeSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitAssembly(Loretta.CodeAnalysis.IAssemblySymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitDiscard(Loretta.CodeAnalysis.IDiscardSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitDynamicType(Loretta.CodeAnalysis.IDynamicTypeSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitEvent(Loretta.CodeAnalysis.IEventSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitField(Loretta.CodeAnalysis.IFieldSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitFunctionPointerType(Loretta.CodeAnalysis.IFunctionPointerTypeSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitLabel(Loretta.CodeAnalysis.ILabelSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitLocal(Loretta.CodeAnalysis.ILocalSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitMethod(Loretta.CodeAnalysis.IMethodSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitModule(Loretta.CodeAnalysis.IModuleSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitNamedType(Loretta.CodeAnalysis.INamedTypeSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitNamespace(Loretta.CodeAnalysis.INamespaceSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitParameter(Loretta.CodeAnalysis.IParameterSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitPointerType(Loretta.CodeAnalysis.IPointerTypeSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitProperty(Loretta.CodeAnalysis.IPropertySymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitRangeVariable(Loretta.CodeAnalysis.IRangeVariableSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SymbolVisitor<TResult>.VisitTypeParameter(Loretta.CodeAnalysis.ITypeParameterSymbol! symbol) -> TResult?
virtual Loretta.CodeAnalysis.SyntaxNode.ChildThatContainsPosition(int position) -> Loretta.CodeAnalysis.SyntaxNodeOrToken
virtual Loretta.CodeAnalysis.SyntaxNode.ParentTrivia.get -> Loretta.CodeAnalysis.SyntaxTrivia
virtual Loretta.CodeAnalysis.SyntaxNode.SerializeTo(System.IO.Stream! stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
virtual Loretta.CodeAnalysis.SyntaxNode.ToFullString() -> string!
virtual Loretta.CodeAnalysis.SyntaxNode.WriteTo(System.IO.TextWriter! writer) -> void
virtual Loretta.CodeAnalysis.SyntaxReference.GetSyntaxAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.SyntaxNode!>!
virtual Loretta.CodeAnalysis.SyntaxTree.DiagnosticOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>!
virtual Loretta.CodeAnalysis.SyntaxTree.GetLineVisibility(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Loretta.CodeAnalysis.LineVisibility
virtual Loretta.CodeAnalysis.SyntaxTree.GetTextAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Loretta.CodeAnalysis.Text.SourceText!>!
virtual Loretta.CodeAnalysis.SyntaxTree.WithDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary<string!, Loretta.CodeAnalysis.ReportDiagnostic>! options) -> Loretta.CodeAnalysis.SyntaxTree!
virtual Loretta.CodeAnalysis.SyntaxWalker.Visit(Loretta.CodeAnalysis.SyntaxNode! node) -> void
virtual Loretta.CodeAnalysis.SyntaxWalker.VisitToken(Loretta.CodeAnalysis.SyntaxToken token) -> void
virtual Loretta.CodeAnalysis.SyntaxWalker.VisitTrivia(Loretta.CodeAnalysis.SyntaxTrivia trivia) -> void
virtual Loretta.CodeAnalysis.Text.SourceText.Container.get -> Loretta.CodeAnalysis.Text.SourceTextContainer!
virtual Loretta.CodeAnalysis.Text.SourceText.ContentEqualsImpl(Loretta.CodeAnalysis.Text.SourceText! other) -> bool
virtual Loretta.CodeAnalysis.Text.SourceText.GetChangeRanges(Loretta.CodeAnalysis.Text.SourceText! oldText) -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Text.TextChangeRange>!
virtual Loretta.CodeAnalysis.Text.SourceText.GetLinesCore() -> Loretta.CodeAnalysis.Text.TextLineCollection!
virtual Loretta.CodeAnalysis.Text.SourceText.GetSubText(Loretta.CodeAnalysis.Text.TextSpan span) -> Loretta.CodeAnalysis.Text.SourceText!
virtual Loretta.CodeAnalysis.Text.SourceText.GetTextChanges(Loretta.CodeAnalysis.Text.SourceText! oldText) -> System.Collections.Generic.IReadOnlyList<Loretta.CodeAnalysis.Text.TextChange>!
virtual Loretta.CodeAnalysis.Text.SourceText.ToString(Loretta.CodeAnalysis.Text.TextSpan span) -> string!
virtual Loretta.CodeAnalysis.Text.SourceText.WithChanges(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Text.TextChange>! changes) -> Loretta.CodeAnalysis.Text.SourceText!
virtual Loretta.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter! writer, Loretta.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
virtual Loretta.CodeAnalysis.Text.TextLineCollection.GetLineFromPosition(int position) -> Loretta.CodeAnalysis.Text.TextLine
virtual Loretta.CodeAnalysis.Text.TextLineCollection.GetLinePosition(int position) -> Loretta.CodeAnalysis.Text.LinePosition
virtual Loretta.CodeAnalysis.XmlFileResolver.FileExists(string? resolvedPath) -> bool
